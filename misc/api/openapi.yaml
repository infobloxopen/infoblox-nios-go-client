openapi: 3.0.0
info:
  contact:
    name: Infoblox
    url: https://www.infoblox.com
  description: OpenAPI specification for Infoblox NIOS WAPI MISC objects
  license:
    name: Infoblox License
    url: https://www.infoblox.com
  termsOfService: https://www.infoblox.com
  title: Infoblox MISC API
  version: 2.13.6
servers:
- description: NIOS WAPI server
  url: /wapi/v2.13.6
tags:
- description: Operations for allendpoints objects
  name: Allendpoints
- description: Operations for bfdtemplate objects
  name: Bfdtemplate
- description: Operations for csvimporttask objects
  name: Csvimporttask
- description: Operations for datacollectioncluster objects
  name: Datacollectioncluster
- description: Operations for db_objects objects
  name: DbObjects
- description: Operations for dbsnapshot objects
  name: Dbsnapshot
- description: Operations for deleted_objects objects
  name: DeletedObjects
- description: Operations for dxl:endpoint objects
  name: DxlEndpoint
- description: Operations for fileop objects
  name: Fileop
- description: Operations for kerberoskey objects
  name: Kerberoskey
- description: Operations for capacityreport objects
  name: Capacityreport
- description: Operations for outbound:cloudclient objects
  name: OutboundCloudclient
- description: Operations for pxgrid:endpoint objects
  name: PxgridEndpoint
- description: Operations for ruleset objects
  name: Ruleset
- description: Operations for scavengingtask objects
  name: Scavengingtask
- description: Operations for scheduledtask objects
  name: Scheduledtask
- description: Operations for search objects
  name: Search
- description: Operations for syslog:endpoint objects
  name: SyslogEndpoint
- description: Operations for taxii objects
  name: Taxii
- description: Operations for tftpfiledir objects
  name: Tftpfiledir
paths:
  /allendpoints:
    get:
      description: Returns a list of allendpoints objects matching the search criteria
      operationId: AllendpointsList
      parameters:
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Enter the number of results to be fetched
        explode: true
        in: query
        name: _max_results
        required: false
        schema:
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: Control paging of results
        explode: true
        in: query
        name: _paging
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: Page id for retrieving next page of results
        explode: true
        in: query
        name: _page_id
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: query
        name: filters
        required: false
        schema:
          additionalProperties: true
          type: object
        style: form
      - explode: false
        in: query
        name: extattrfilter
        required: false
        schema:
          additionalProperties: true
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAllendpointsResponse'
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Retrieve allendpoints objects
      tags:
      - Allendpoints
  /allendpoints/{reference}:
    get:
      description: Returns a specific allendpoints object by reference
      operationId: AllendpointsRead
      parameters:
      - description: Reference of the allendpoints object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllendpointsResponse'
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Get a specific allendpoints object
      tags:
      - Allendpoints
  /bfdtemplate:
    get:
      description: Returns a list of bfdtemplate objects matching the search criteria
      operationId: BfdtemplateList
      parameters:
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Enter the number of results to be fetched
        explode: true
        in: query
        name: _max_results
        required: false
        schema:
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: Control paging of results
        explode: true
        in: query
        name: _paging
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: Page id for retrieving next page of results
        explode: true
        in: query
        name: _page_id
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: query
        name: filters
        required: false
        schema:
          additionalProperties: true
          type: object
        style: form
      - explode: false
        in: query
        name: extattrfilter
        required: false
        schema:
          additionalProperties: true
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBfdtemplateResponse'
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Retrieve bfdtemplate objects
      tags:
      - Bfdtemplate
    post:
      description: Creates a new bfdtemplate object
      operationId: BfdtemplateCreate
      parameters:
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bfdtemplate'
        description: Object data to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateBfdtemplateResponse'
          description: Object created successfully
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - basicAuth: []
      summary: Create a bfdtemplate object
      tags:
      - Bfdtemplate
      x-tf-resource: misc_bfdtemplate
      x-tf-datasource: misc_bfdtemplate
  /bfdtemplate/{reference}:
    delete:
      description: Deletes a specific bfdtemplate object by reference
      operationId: BfdtemplateDelete
      parameters:
      - description: Reference of the bfdtemplate object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Object deleted successfully
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Delete a bfdtemplate object
      tags:
      - Bfdtemplate
    get:
      description: Returns a specific bfdtemplate object by reference
      operationId: BfdtemplateRead
      parameters:
      - description: Reference of the bfdtemplate object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBfdtemplateResponse'
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Get a specific bfdtemplate object
      tags:
      - Bfdtemplate
    put:
      description: Updates a specific bfdtemplate object by reference
      operationId: BfdtemplateUpdate
      parameters:
      - description: Reference of the bfdtemplate object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bfdtemplate'
        description: Object data to update
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateBfdtemplateResponse'
          description: Object updated successfully
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Update a bfdtemplate object
      tags:
      - Bfdtemplate
  /csvimporttask:
    get:
      description: Returns a list of csvimporttask objects matching the search criteria
      operationId: CsvimporttaskList
      parameters:
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Enter the number of results to be fetched
        explode: true
        in: query
        name: _max_results
        required: false
        schema:
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: Control paging of results
        explode: true
        in: query
        name: _paging
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: Page id for retrieving next page of results
        explode: true
        in: query
        name: _page_id
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: query
        name: filters
        required: false
        schema:
          additionalProperties: true
          type: object
        style: form
      - explode: false
        in: query
        name: extattrfilter
        required: false
        schema:
          additionalProperties: true
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCsvimporttaskResponse'
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Retrieve csvimporttask objects
      tags:
      - Csvimporttask
  /csvimporttask/{reference}:
    get:
      description: Returns a specific csvimporttask object by reference
      operationId: CsvimporttaskRead
      parameters:
      - description: Reference of the csvimporttask object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCsvimporttaskResponse'
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Get a specific csvimporttask object
      tags:
      - Csvimporttask
    put:
      description: Updates a specific csvimporttask object by reference
      operationId: CsvimporttaskUpdate
      parameters:
      - description: Reference of the csvimporttask object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Csvimporttask'
        description: Object data to update
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateCsvimporttaskResponse'
          description: Object updated successfully
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Update a csvimporttask object
      tags:
      - Csvimporttask
  /datacollectioncluster:
    get:
      description: Returns a list of datacollectioncluster objects matching the search
        criteria
      operationId: DatacollectionclusterList
      parameters:
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Enter the number of results to be fetched
        explode: true
        in: query
        name: _max_results
        required: false
        schema:
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: Control paging of results
        explode: true
        in: query
        name: _paging
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: Page id for retrieving next page of results
        explode: true
        in: query
        name: _page_id
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: query
        name: filters
        required: false
        schema:
          additionalProperties: true
          type: object
        style: form
      - explode: false
        in: query
        name: extattrfilter
        required: false
        schema:
          additionalProperties: true
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDatacollectionclusterResponse'
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Retrieve datacollectioncluster objects
      tags:
      - Datacollectioncluster
    post:
      description: Creates a new datacollectioncluster object
      operationId: DatacollectionclusterCreate
      parameters:
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Datacollectioncluster'
        description: Object data to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDatacollectionclusterResponse'
          description: Object created successfully
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - basicAuth: []
      summary: Create a datacollectioncluster object
      tags:
      - Datacollectioncluster
      x-tf-resource: misc_datacollectioncluster
      x-tf-datasource: misc_datacollectioncluster
  /datacollectioncluster/{reference}:
    delete:
      description: Deletes a specific datacollectioncluster object by reference
      operationId: DatacollectionclusterDelete
      parameters:
      - description: Reference of the datacollectioncluster object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Object deleted successfully
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Delete a datacollectioncluster object
      tags:
      - Datacollectioncluster
    get:
      description: Returns a specific datacollectioncluster object by reference
      operationId: DatacollectionclusterRead
      parameters:
      - description: Reference of the datacollectioncluster object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDatacollectionclusterResponse'
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Get a specific datacollectioncluster object
      tags:
      - Datacollectioncluster
    put:
      description: Updates a specific datacollectioncluster object by reference
      operationId: DatacollectionclusterUpdate
      parameters:
      - description: Reference of the datacollectioncluster object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Datacollectioncluster'
        description: Object data to update
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDatacollectionclusterResponse'
          description: Object updated successfully
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Update a datacollectioncluster object
      tags:
      - Datacollectioncluster
  /db_objects:
    get:
      description: Returns a list of db_objects objects matching the search criteria
      operationId: DbObjectsList
      parameters:
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Enter the number of results to be fetched
        explode: true
        in: query
        name: _max_results
        required: false
        schema:
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: Control paging of results
        explode: true
        in: query
        name: _paging
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: Page id for retrieving next page of results
        explode: true
        in: query
        name: _page_id
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: query
        name: filters
        required: false
        schema:
          additionalProperties: true
          type: object
        style: form
      - explode: false
        in: query
        name: extattrfilter
        required: false
        schema:
          additionalProperties: true
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDbObjectsResponse'
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Retrieve db_objects objects
      tags:
      - DbObjects
  /db_objects/{reference}:
    get:
      description: Returns a specific db_objects object by reference
      operationId: DbObjectsRead
      parameters:
      - description: Reference of the db_objects object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDbObjectsResponse'
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Get a specific db_objects object
      tags:
      - DbObjects
  /dbsnapshot:
    get:
      description: Returns a list of dbsnapshot objects matching the search criteria
      operationId: DbsnapshotList
      parameters:
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Enter the number of results to be fetched
        explode: true
        in: query
        name: _max_results
        required: false
        schema:
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: Control paging of results
        explode: true
        in: query
        name: _paging
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: Page id for retrieving next page of results
        explode: true
        in: query
        name: _page_id
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: query
        name: filters
        required: false
        schema:
          additionalProperties: true
          type: object
        style: form
      - explode: false
        in: query
        name: extattrfilter
        required: false
        schema:
          additionalProperties: true
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDbsnapshotResponse'
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Retrieve dbsnapshot objects
      tags:
      - Dbsnapshot
  /dbsnapshot/{reference}:
    get:
      description: Returns a specific dbsnapshot object by reference
      operationId: DbsnapshotRead
      parameters:
      - description: Reference of the dbsnapshot object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDbsnapshotResponse'
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Get a specific dbsnapshot object
      tags:
      - Dbsnapshot
  /deleted_objects:
    get:
      description: Returns a list of deleted_objects objects matching the search criteria
      operationId: DeletedObjectsList
      parameters:
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Enter the number of results to be fetched
        explode: true
        in: query
        name: _max_results
        required: false
        schema:
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: Control paging of results
        explode: true
        in: query
        name: _paging
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: Page id for retrieving next page of results
        explode: true
        in: query
        name: _page_id
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: query
        name: filters
        required: false
        schema:
          additionalProperties: true
          type: object
        style: form
      - explode: false
        in: query
        name: extattrfilter
        required: false
        schema:
          additionalProperties: true
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDeletedObjectsResponse'
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Retrieve deleted_objects objects
      tags:
      - DeletedObjects
  /deleted_objects/{reference}:
    get:
      description: Returns a specific deleted_objects object by reference
      operationId: DeletedObjectsRead
      parameters:
      - description: Reference of the deleted_objects object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDeletedObjectsResponse'
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Get a specific deleted_objects object
      tags:
      - DeletedObjects
  /dxl:endpoint:
    get:
      description: Returns a list of dxl:endpoint objects matching the search criteria
      operationId: DxlEndpointList
      parameters:
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Enter the number of results to be fetched
        explode: true
        in: query
        name: _max_results
        required: false
        schema:
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: Control paging of results
        explode: true
        in: query
        name: _paging
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: Page id for retrieving next page of results
        explode: true
        in: query
        name: _page_id
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: query
        name: filters
        required: false
        schema:
          additionalProperties: true
          type: object
        style: form
      - explode: false
        in: query
        name: extattrfilter
        required: false
        schema:
          additionalProperties: true
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDxlEndpointResponse'
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Retrieve dxl:endpoint objects
      tags:
      - DxlEndpoint
    post:
      description: Creates a new dxl:endpoint object
      operationId: DxlEndpointCreate
      parameters:
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DxlEndpoint'
        description: Object data to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDxlEndpointResponse'
          description: Object created successfully
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - basicAuth: []
      summary: Create a dxl:endpoint object
      tags:
      - DxlEndpoint
      x-tf-resource: misc_dxl_endpoint
      x-tf-datasource: misc_dxl_endpoint
      x-sdk-default-ext-attrs: true
  /dxl:endpoint/{reference}:
    delete:
      description: Deletes a specific dxl:endpoint object by reference
      operationId: DxlEndpointDelete
      parameters:
      - description: Reference of the dxl:endpoint object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Object deleted successfully
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Delete a dxl:endpoint object
      tags:
      - DxlEndpoint
    get:
      description: Returns a specific dxl:endpoint object by reference
      operationId: DxlEndpointRead
      parameters:
      - description: Reference of the dxl:endpoint object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDxlEndpointResponse'
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Get a specific dxl:endpoint object
      tags:
      - DxlEndpoint
    put:
      description: Updates a specific dxl:endpoint object by reference
      operationId: DxlEndpointUpdate
      parameters:
      - description: Reference of the dxl:endpoint object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DxlEndpoint'
        description: Object data to update
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDxlEndpointResponse'
          description: Object updated successfully
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Update a dxl:endpoint object
      tags:
      - DxlEndpoint
      x-sdk-default-ext-attrs: true
  /fileop:
    get:
      description: Returns a list of fileop objects matching the search criteria
      operationId: FileopList
      parameters:
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Enter the number of results to be fetched
        explode: true
        in: query
        name: _max_results
        required: false
        schema:
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: Control paging of results
        explode: true
        in: query
        name: _paging
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: Page id for retrieving next page of results
        explode: true
        in: query
        name: _page_id
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: query
        name: filters
        required: false
        schema:
          additionalProperties: true
          type: object
        style: form
      - explode: false
        in: query
        name: extattrfilter
        required: false
        schema:
          additionalProperties: true
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFileopResponse'
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Retrieve fileop objects
      tags:
      - Fileop
  /fileop/{reference}:
    get:
      description: Returns a specific fileop object by reference
      operationId: FileopRead
      parameters:
      - description: Reference of the fileop object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFileopResponse'
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Get a specific fileop object
      tags:
      - Fileop
  /kerberoskey:
    get:
      description: Returns a list of kerberoskey objects matching the search criteria
      operationId: KerberoskeyList
      parameters:
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Enter the number of results to be fetched
        explode: true
        in: query
        name: _max_results
        required: false
        schema:
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: Control paging of results
        explode: true
        in: query
        name: _paging
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: Page id for retrieving next page of results
        explode: true
        in: query
        name: _page_id
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: query
        name: filters
        required: false
        schema:
          additionalProperties: true
          type: object
        style: form
      - explode: false
        in: query
        name: extattrfilter
        required: false
        schema:
          additionalProperties: true
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListKerberoskeyResponse'
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Retrieve kerberoskey objects
      tags:
      - Kerberoskey
  /kerberoskey/{reference}:
    delete:
      description: Deletes a specific kerberoskey object by reference
      operationId: KerberoskeyDelete
      parameters:
      - description: Reference of the kerberoskey object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Object deleted successfully
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Delete a kerberoskey object
      tags:
      - Kerberoskey
    get:
      description: Returns a specific kerberoskey object by reference
      operationId: KerberoskeyRead
      parameters:
      - description: Reference of the kerberoskey object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetKerberoskeyResponse'
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Get a specific kerberoskey object
      tags:
      - Kerberoskey
  /capacityreport:
    get:
      description: Returns a list of capacityreport objects matching the search criteria
      operationId: CapacityreportList
      parameters:
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Enter the number of results to be fetched
        explode: true
        in: query
        name: _max_results
        required: false
        schema:
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: Control paging of results
        explode: true
        in: query
        name: _paging
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: Page id for retrieving next page of results
        explode: true
        in: query
        name: _page_id
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: query
        name: filters
        required: false
        schema:
          additionalProperties: true
          type: object
        style: form
      - explode: false
        in: query
        name: extattrfilter
        required: false
        schema:
          additionalProperties: true
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCapacityreportResponse'
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Retrieve capacityreport objects
      tags:
      - Capacityreport
  /capacityreport/{reference}:
    get:
      description: Returns a specific capacityreport object by reference
      operationId: CapacityreportRead
      parameters:
      - description: Reference of the capacityreport object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCapacityreportResponse'
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Get a specific capacityreport object
      tags:
      - Capacityreport
  /outbound:cloudclient:
    get:
      description: Returns a list of outbound:cloudclient objects matching the search
        criteria
      operationId: OutboundCloudclientList
      parameters:
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Enter the number of results to be fetched
        explode: true
        in: query
        name: _max_results
        required: false
        schema:
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: Control paging of results
        explode: true
        in: query
        name: _paging
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: Page id for retrieving next page of results
        explode: true
        in: query
        name: _page_id
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: query
        name: filters
        required: false
        schema:
          additionalProperties: true
          type: object
        style: form
      - explode: false
        in: query
        name: extattrfilter
        required: false
        schema:
          additionalProperties: true
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOutboundCloudclientResponse'
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Retrieve outbound:cloudclient objects
      tags:
      - OutboundCloudclient
  /outbound:cloudclient/{reference}:
    get:
      description: Returns a specific outbound:cloudclient object by reference
      operationId: OutboundCloudclientRead
      parameters:
      - description: Reference of the outbound:cloudclient object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOutboundCloudclientResponse'
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Get a specific outbound:cloudclient object
      tags:
      - OutboundCloudclient
    put:
      description: Updates a specific outbound:cloudclient object by reference
      operationId: OutboundCloudclientUpdate
      parameters:
      - description: Reference of the outbound:cloudclient object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OutboundCloudclient'
        description: Object data to update
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateOutboundCloudclientResponse'
          description: Object updated successfully
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Update a outbound:cloudclient object
      tags:
      - OutboundCloudclient
  /pxgrid:endpoint:
    get:
      description: Returns a list of pxgrid:endpoint objects matching the search criteria
      operationId: PxgridEndpointList
      parameters:
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Enter the number of results to be fetched
        explode: true
        in: query
        name: _max_results
        required: false
        schema:
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: Control paging of results
        explode: true
        in: query
        name: _paging
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: Page id for retrieving next page of results
        explode: true
        in: query
        name: _page_id
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: query
        name: filters
        required: false
        schema:
          additionalProperties: true
          type: object
        style: form
      - explode: false
        in: query
        name: extattrfilter
        required: false
        schema:
          additionalProperties: true
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPxgridEndpointResponse'
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Retrieve pxgrid:endpoint objects
      tags:
      - PxgridEndpoint
    post:
      description: Creates a new pxgrid:endpoint object
      operationId: PxgridEndpointCreate
      parameters:
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PxgridEndpoint'
        description: Object data to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePxgridEndpointResponse'
          description: Object created successfully
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - basicAuth: []
      summary: Create a pxgrid:endpoint object
      tags:
      - PxgridEndpoint
      x-tf-resource: misc_pxgrid_endpoint
      x-tf-datasource: misc_pxgrid_endpoint
      x-sdk-default-ext-attrs: true
  /pxgrid:endpoint/{reference}:
    delete:
      description: Deletes a specific pxgrid:endpoint object by reference
      operationId: PxgridEndpointDelete
      parameters:
      - description: Reference of the pxgrid:endpoint object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Object deleted successfully
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Delete a pxgrid:endpoint object
      tags:
      - PxgridEndpoint
    get:
      description: Returns a specific pxgrid:endpoint object by reference
      operationId: PxgridEndpointRead
      parameters:
      - description: Reference of the pxgrid:endpoint object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPxgridEndpointResponse'
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Get a specific pxgrid:endpoint object
      tags:
      - PxgridEndpoint
    put:
      description: Updates a specific pxgrid:endpoint object by reference
      operationId: PxgridEndpointUpdate
      parameters:
      - description: Reference of the pxgrid:endpoint object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PxgridEndpoint'
        description: Object data to update
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatePxgridEndpointResponse'
          description: Object updated successfully
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Update a pxgrid:endpoint object
      tags:
      - PxgridEndpoint
      x-sdk-default-ext-attrs: true
  /ruleset:
    get:
      description: Returns a list of ruleset objects matching the search criteria
      operationId: RulesetList
      parameters:
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Enter the number of results to be fetched
        explode: true
        in: query
        name: _max_results
        required: false
        schema:
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: Control paging of results
        explode: true
        in: query
        name: _paging
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: Page id for retrieving next page of results
        explode: true
        in: query
        name: _page_id
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: query
        name: filters
        required: false
        schema:
          additionalProperties: true
          type: object
        style: form
      - explode: false
        in: query
        name: extattrfilter
        required: false
        schema:
          additionalProperties: true
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRulesetResponse'
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Retrieve ruleset objects
      tags:
      - Ruleset
    post:
      description: Creates a new ruleset object
      operationId: RulesetCreate
      parameters:
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ruleset'
        description: Object data to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateRulesetResponse'
          description: Object created successfully
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - basicAuth: []
      summary: Create a ruleset object
      tags:
      - Ruleset
      x-tf-resource: misc_ruleset
      x-tf-datasource: misc_ruleset
  /ruleset/{reference}:
    delete:
      description: Deletes a specific ruleset object by reference
      operationId: RulesetDelete
      parameters:
      - description: Reference of the ruleset object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Object deleted successfully
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Delete a ruleset object
      tags:
      - Ruleset
    get:
      description: Returns a specific ruleset object by reference
      operationId: RulesetRead
      parameters:
      - description: Reference of the ruleset object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRulesetResponse'
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Get a specific ruleset object
      tags:
      - Ruleset
    put:
      description: Updates a specific ruleset object by reference
      operationId: RulesetUpdate
      parameters:
      - description: Reference of the ruleset object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ruleset'
        description: Object data to update
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateRulesetResponse'
          description: Object updated successfully
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Update a ruleset object
      tags:
      - Ruleset
  /scavengingtask:
    get:
      description: Returns a list of scavengingtask objects matching the search criteria
      operationId: ScavengingtaskList
      parameters:
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Enter the number of results to be fetched
        explode: true
        in: query
        name: _max_results
        required: false
        schema:
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: Control paging of results
        explode: true
        in: query
        name: _paging
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: Page id for retrieving next page of results
        explode: true
        in: query
        name: _page_id
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: query
        name: filters
        required: false
        schema:
          additionalProperties: true
          type: object
        style: form
      - explode: false
        in: query
        name: extattrfilter
        required: false
        schema:
          additionalProperties: true
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListScavengingtaskResponse'
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Retrieve scavengingtask objects
      tags:
      - Scavengingtask
  /scavengingtask/{reference}:
    get:
      description: Returns a specific scavengingtask object by reference
      operationId: ScavengingtaskRead
      parameters:
      - description: Reference of the scavengingtask object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetScavengingtaskResponse'
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Get a specific scavengingtask object
      tags:
      - Scavengingtask
  /scheduledtask:
    get:
      description: Returns a list of scheduledtask objects matching the search criteria
      operationId: ScheduledtaskList
      parameters:
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Enter the number of results to be fetched
        explode: true
        in: query
        name: _max_results
        required: false
        schema:
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: Control paging of results
        explode: true
        in: query
        name: _paging
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: Page id for retrieving next page of results
        explode: true
        in: query
        name: _page_id
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: query
        name: filters
        required: false
        schema:
          additionalProperties: true
          type: object
        style: form
      - explode: false
        in: query
        name: extattrfilter
        required: false
        schema:
          additionalProperties: true
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListScheduledtaskResponse'
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Retrieve scheduledtask objects
      tags:
      - Scheduledtask
  /scheduledtask/{reference}:
    delete:
      description: Deletes a specific scheduledtask object by reference
      operationId: ScheduledtaskDelete
      parameters:
      - description: Reference of the scheduledtask object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Object deleted successfully
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Delete a scheduledtask object
      tags:
      - Scheduledtask
    get:
      description: Returns a specific scheduledtask object by reference
      operationId: ScheduledtaskRead
      parameters:
      - description: Reference of the scheduledtask object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetScheduledtaskResponse'
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Get a specific scheduledtask object
      tags:
      - Scheduledtask
    put:
      description: Updates a specific scheduledtask object by reference
      operationId: ScheduledtaskUpdate
      parameters:
      - description: Reference of the scheduledtask object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Scheduledtask'
        description: Object data to update
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateScheduledtaskResponse'
          description: Object updated successfully
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Update a scheduledtask object
      tags:
      - Scheduledtask
  /search:
    get:
      description: Returns a list of search objects matching the search criteria
      operationId: SearchList
      parameters:
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Enter the number of results to be fetched
        explode: true
        in: query
        name: _max_results
        required: false
        schema:
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: Control paging of results
        explode: true
        in: query
        name: _paging
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: Page id for retrieving next page of results
        explode: true
        in: query
        name: _page_id
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: query
        name: filters
        required: false
        schema:
          additionalProperties: true
          type: object
        style: form
      - explode: false
        in: query
        name: extattrfilter
        required: false
        schema:
          additionalProperties: true
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSearchResponse'
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Retrieve search objects
      tags:
      - Search
  /search/{reference}:
    get:
      description: Returns a specific search object by reference
      operationId: SearchRead
      parameters:
      - description: Reference of the search object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSearchResponse'
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Get a specific search object
      tags:
      - Search
  /syslog:endpoint:
    get:
      description: Returns a list of syslog:endpoint objects matching the search criteria
      operationId: SyslogEndpointList
      parameters:
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Enter the number of results to be fetched
        explode: true
        in: query
        name: _max_results
        required: false
        schema:
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: Control paging of results
        explode: true
        in: query
        name: _paging
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: Page id for retrieving next page of results
        explode: true
        in: query
        name: _page_id
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: query
        name: filters
        required: false
        schema:
          additionalProperties: true
          type: object
        style: form
      - explode: false
        in: query
        name: extattrfilter
        required: false
        schema:
          additionalProperties: true
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSyslogEndpointResponse'
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Retrieve syslog:endpoint objects
      tags:
      - SyslogEndpoint
    post:
      description: Creates a new syslog:endpoint object
      operationId: SyslogEndpointCreate
      parameters:
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyslogEndpoint'
        description: Object data to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSyslogEndpointResponse'
          description: Object created successfully
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - basicAuth: []
      summary: Create a syslog:endpoint object
      tags:
      - SyslogEndpoint
      x-tf-resource: misc_syslog_endpoint
      x-tf-datasource: misc_syslog_endpoint
      x-sdk-default-ext-attrs: true
  /syslog:endpoint/{reference}:
    delete:
      description: Deletes a specific syslog:endpoint object by reference
      operationId: SyslogEndpointDelete
      parameters:
      - description: Reference of the syslog:endpoint object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Object deleted successfully
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Delete a syslog:endpoint object
      tags:
      - SyslogEndpoint
    get:
      description: Returns a specific syslog:endpoint object by reference
      operationId: SyslogEndpointRead
      parameters:
      - description: Reference of the syslog:endpoint object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSyslogEndpointResponse'
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Get a specific syslog:endpoint object
      tags:
      - SyslogEndpoint
    put:
      description: Updates a specific syslog:endpoint object by reference
      operationId: SyslogEndpointUpdate
      parameters:
      - description: Reference of the syslog:endpoint object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyslogEndpoint'
        description: Object data to update
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateSyslogEndpointResponse'
          description: Object updated successfully
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Update a syslog:endpoint object
      tags:
      - SyslogEndpoint
      x-sdk-default-ext-attrs: true
  /taxii:
    get:
      description: Returns a list of taxii objects matching the search criteria
      operationId: TaxiiList
      parameters:
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Enter the number of results to be fetched
        explode: true
        in: query
        name: _max_results
        required: false
        schema:
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: Control paging of results
        explode: true
        in: query
        name: _paging
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: Page id for retrieving next page of results
        explode: true
        in: query
        name: _page_id
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: query
        name: filters
        required: false
        schema:
          additionalProperties: true
          type: object
        style: form
      - explode: false
        in: query
        name: extattrfilter
        required: false
        schema:
          additionalProperties: true
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTaxiiResponse'
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Retrieve taxii objects
      tags:
      - Taxii
  /taxii/{reference}:
    get:
      description: Returns a specific taxii object by reference
      operationId: TaxiiRead
      parameters:
      - description: Reference of the taxii object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTaxiiResponse'
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Get a specific taxii object
      tags:
      - Taxii
    put:
      description: Updates a specific taxii object by reference
      operationId: TaxiiUpdate
      parameters:
      - description: Reference of the taxii object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Taxii'
        description: Object data to update
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateTaxiiResponse'
          description: Object updated successfully
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Update a taxii object
      tags:
      - Taxii
  /tftpfiledir:
    get:
      description: Returns a list of tftpfiledir objects matching the search criteria
      operationId: TftpfiledirList
      parameters:
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Enter the number of results to be fetched
        explode: true
        in: query
        name: _max_results
        required: false
        schema:
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: Control paging of results
        explode: true
        in: query
        name: _paging
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: Page id for retrieving next page of results
        explode: true
        in: query
        name: _page_id
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: query
        name: filters
        required: false
        schema:
          additionalProperties: true
          type: object
        style: form
      - explode: false
        in: query
        name: extattrfilter
        required: false
        schema:
          additionalProperties: true
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTftpfiledirResponse'
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Retrieve tftpfiledir objects
      tags:
      - Tftpfiledir
    post:
      description: Creates a new tftpfiledir object
      operationId: TftpfiledirCreate
      parameters:
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tftpfiledir'
        description: Object data to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTftpfiledirResponse'
          description: Object created successfully
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - basicAuth: []
      summary: Create a tftpfiledir object
      tags:
      - Tftpfiledir
      x-tf-resource: misc_tftpfiledir
      x-tf-datasource: misc_tftpfiledir
  /tftpfiledir/{reference}:
    delete:
      description: Deletes a specific tftpfiledir object by reference
      operationId: TftpfiledirDelete
      parameters:
      - description: Reference of the tftpfiledir object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Object deleted successfully
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Delete a tftpfiledir object
      tags:
      - Tftpfiledir
    get:
      description: Returns a specific tftpfiledir object by reference
      operationId: TftpfiledirRead
      parameters:
      - description: Reference of the tftpfiledir object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTftpfiledirResponse'
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Get a specific tftpfiledir object
      tags:
      - Tftpfiledir
    put:
      description: Updates a specific tftpfiledir object by reference
      operationId: TftpfiledirUpdate
      parameters:
      - description: Reference of the tftpfiledir object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tftpfiledir'
        description: Object data to update
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateTftpfiledirResponse'
          description: Object updated successfully
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Update a tftpfiledir object
      tags:
      - Tftpfiledir
components:
  parameters:
    ReturnFields:
      description: Enter the field names followed by comma
      explode: true
      in: query
      name: _return_fields
      required: false
      schema:
        type: string
      style: form
    ReturnFieldsPlus:
      description: "Enter the field names followed by comma, this returns the required\
        \ fields along with the default fields"
      explode: true
      in: query
      name: _return_fields+
      required: false
      schema:
        type: string
      style: form
    MaxResults:
      description: Enter the number of results to be fetched
      explode: true
      in: query
      name: _max_results
      required: false
      schema:
        format: int32
        minimum: 1
        type: integer
      style: form
    ReturnAsObject:
      description: Select 1 if result is required as an object
      explode: true
      in: query
      name: _return_as_object
      required: false
      schema:
        enum:
        - 0
        - 1
        type: integer
      style: form
    Paging:
      description: Control paging of results
      explode: true
      in: query
      name: _paging
      required: false
      schema:
        enum:
        - 0
        - 1
        type: integer
      style: form
    PageId:
      description: Page id for retrieving next page of results
      explode: true
      in: query
      name: _page_id
      required: false
      schema:
        type: string
      style: form
    ProxySearch:
      description: Search Grid members for data
      explode: true
      in: query
      name: _proxy_search
      required: false
      schema:
        type: string
      style: form
    Schema:
      description: Return schema for this object type
      explode: true
      in: query
      name: _schema
      required: false
      schema:
        enum:
        - 0
        - 1
        type: integer
      style: form
    SchemaVersion:
      description: Schema version to use
      explode: true
      in: query
      name: _schema_version
      required: false
      schema:
        enum:
        - 1
        - 2
        type: integer
      style: form
    GetDoc:
      description: Return documentation with schema
      explode: true
      in: query
      name: _get_doc
      required: false
      schema:
        enum:
        - 0
        - 1
        type: integer
      style: form
    SchemaSearchable:
      description: Return searchable fields with schema
      explode: true
      in: query
      name: _schema_searchable
      required: false
      schema:
        enum:
        - 0
        - 1
        type: integer
      style: form
    Inheritance:
      description: "If this option is set to True, fields which support inheritance,\
        \ will display data properly."
      explode: true
      in: query
      name: _inheritance
      required: false
      schema:
        type: boolean
      style: form
    filters:
      explode: false
      in: query
      name: filters
      required: false
      schema:
        additionalProperties: true
        type: object
      style: form
    ExtAttrFilters:
      explode: false
      in: query
      name: extattrfilter
      required: false
      schema:
        additionalProperties: true
        type: object
      style: form
    Method:
      description: Enter the method type for the request
      explode: true
      in: query
      name: _method
      required: false
      schema:
        type: string
      style: form
    Body:
      explode: true
      in: query
      name: body
      required: false
      schema:
        type: object
      style: form
  schemas:
    ExtAttrs:
      description: Extensible attributes associated with the object.
      example:
        value: ""
      properties:
        value:
          description: The value of the extensible attribute.
      required:
      - value
      type: object
    Allendpoints:
      additionalProperties: false
      example:
        address: Example address
        disable: false
        _ref: _ref
        comment: Example comment
        type: Example type
        version: Example version
        subscribing_member: Example subscribing_member
      properties:
        _ref:
          description: The reference to the object.
          type: string
        address:
          description: The Grid endpoint IPv4 Address or IPv6 Address or Fully-Qualified
            Domain Name (FQDN).
          example: Example address
          readOnly: true
          type: string
        comment:
          description: The Grid endpoint descriptive comment.
          example: Example comment
          readOnly: true
          type: string
        disable:
          description: "Determines whether a Grid endpoint is disabled or not. When\
            \ this is set to False, the Grid endpoint is enabled."
          example: false
          readOnly: true
          type: boolean
        subscribing_member:
          description: The name of the Grid Member object that is serving Grid endpoint.
          example: Example subscribing_member
          readOnly: true
          type: string
        type:
          description: The Grid endpoint type.
          enum:
          - TYPE_CISCO
          - TYPE_RESTAPI
          - TYPE_DXL
          example: Example type
          readOnly: true
          type: string
        version:
          description: The Grid endpoint version.
          example: Example version
          readOnly: true
          type: string
      type: object
    ListAllendpointsResponse:
      oneOf:
      - description: The response format to retrieve __Allendpoints__ objects.
        items:
          $ref: '#/components/schemas/Allendpoints'
        title: ListAllendpointsResponseArray
        type: array
      - $ref: '#/components/schemas/ListAllendpointsResponseObject'
    GetAllendpointsResponse:
      oneOf:
      - $ref: '#/components/schemas/Allendpoints'
      - $ref: '#/components/schemas/GetAllendpointsResponseObjectAsResult'
    UpdateAllendpointsResponse:
      oneOf:
      - $ref: '#/components/schemas/UpdateAllendpointsResponseAsObject'
      - description: The response format to update __Allendpoints__ .
        title: UpdateAllendpointsResponse
        type: string
    Bfdtemplate:
      additionalProperties: false
      example:
        authentication_key_id: 1
        min_tx_interval: 1
        authentication_key: Example authentication_key
        min_rx_interval: 1
        _ref: _ref
        name: Example name
        authentication_type: Example authentication_type
        detection_multiplier: 1
      properties:
        _ref:
          description: The reference to the object.
          type: string
        authentication_key:
          description: The authentication key for BFD protocol message-digest authentication.
          example: Example authentication_key
          type: string
          writeOnly: true
        authentication_key_id:
          description: The authentication key identifier for BFD protocol authentication.
            Valid values are between 1 and 255.
          example: 1
          format: int64
          type: integer
        authentication_type:
          description: The authentication type for BFD protocol.
          enum:
          - NONE
          - MD5
          - METICULOUS-MD5
          - SHA1
          - METICULOUS-SHA1
          example: Example authentication_type
          type: string
        detection_multiplier:
          description: "The detection time multiplier value for BFD protocol. The\
            \ negotiated transmit interval, multiplied by this value, provides the\
            \ detection time for the receiving system in asynchronous BFD mode. Valid\
            \ values are between 3 and 50."
          example: 1
          format: int64
          type: integer
        min_rx_interval:
          description: The minimum receive time (in seconds) for BFD protocol. Valid
            values are between 50 and 9999.
          example: 1
          format: int64
          type: integer
        min_tx_interval:
          description: The minimum transmission time (in seconds) for BFD protocol.
            Valid values are between 50 and 9999.
          example: 1
          format: int64
          type: integer
        name:
          description: The name of the BFD template object.
          example: Example name
          type: string
      type: object
    ListBfdtemplateResponse:
      oneOf:
      - description: The response format to retrieve __Bfdtemplate__ objects.
        items:
          $ref: '#/components/schemas/Bfdtemplate'
        title: ListBfdtemplateResponseArray
        type: array
      - $ref: '#/components/schemas/ListBfdtemplateResponseObject'
    CreateBfdtemplateResponse:
      oneOf:
      - $ref: '#/components/schemas/CreateBfdtemplateResponseAsObject'
      - description: The response format to create __Bfdtemplate__.
        title: CreateBfdtemplateResponse
        type: string
    GetBfdtemplateResponse:
      oneOf:
      - $ref: '#/components/schemas/Bfdtemplate'
      - $ref: '#/components/schemas/GetBfdtemplateResponseObjectAsResult'
    UpdateBfdtemplateResponse:
      oneOf:
      - $ref: '#/components/schemas/UpdateBfdtemplateResponseAsObject'
      - description: The response format to update __Bfdtemplate__ .
        title: UpdateBfdtemplateResponse
        type: string
    Csvimporttask:
      additionalProperties: false
      example:
        update_method: Example update_method
        file_name: Example file_name
        lines_failed: 1
        lines_processed: 1
        import_id: 1
        end_time: 1
        lines_warning: 1
        separator: Example separator
        file_size: 1
        start_time: 1
        _ref: _ref
        action: Example action
        on_error: Example on_error
        admin_name: Example admin_name
        operation: Example operation
        status: Example status
      properties:
        _ref:
          description: The reference to the object.
          type: string
        action:
          description: The action to execute.
          enum:
          - START
          - SAVE
          example: Example action
          type: string
          writeOnly: true
        admin_name:
          description: The login name of the administrator.
          example: Example admin_name
          readOnly: true
          type: string
        end_time:
          description: The end time of this import operation.
          example: 1
          format: int64
          readOnly: true
          type: integer
        file_name:
          description: The name of the file used for the import operation.
          example: Example file_name
          readOnly: true
          type: string
        file_size:
          description: The size of the file used for the import operation.
          example: 1
          format: int64
          readOnly: true
          type: integer
        import_id:
          description: The ID of the current import task.
          example: 1
          format: int64
          readOnly: true
          type: integer
        lines_failed:
          description: The number of lines that encountered an error.
          example: 1
          format: int64
          readOnly: true
          type: integer
        lines_processed:
          description: The number of lines that have been processed.
          example: 1
          format: int64
          readOnly: true
          type: integer
        lines_warning:
          description: The number of lines that encountered a warning.
          example: 1
          format: int64
          readOnly: true
          type: integer
        on_error:
          description: The action to take when an error is encountered.
          enum:
          - CONTINUE
          - STOP
          example: Example on_error
          type: string
        operation:
          description: The operation to execute.
          enum:
          - INSERT
          - UPDATE
          - REPLACE
          - DELETE
          - CUSTOM
          example: Example operation
          type: string
        separator:
          description: The separator to be used for the data in the CSV file.
          enum:
          - COMMA
          - SEMICOLON
          - SPACE
          - TAB
          example: Example separator
          readOnly: true
          type: string
        start_time:
          description: The start time of the import operation.
          example: 1
          format: int64
          readOnly: true
          type: integer
        status:
          description: The status of the import operation
          enum:
          - COMPLETED
          - FAILED
          - PENDING
          - RUNNING
          - STOPPED
          - UPLOADED
          - TEST_COMPLETED
          - TEST_FAILED
          - TEST_RUNNING
          - TEST_STOPPED
          example: Example status
          readOnly: true
          type: string
        update_method:
          description: The update method to be used for the operation.
          enum:
          - MERGE
          - OVERRIDE
          example: Example update_method
          type: string
      type: object
    ListCsvimporttaskResponse:
      oneOf:
      - description: The response format to retrieve __Csvimporttask__ objects.
        items:
          $ref: '#/components/schemas/Csvimporttask'
        title: ListCsvimporttaskResponseArray
        type: array
      - $ref: '#/components/schemas/ListCsvimporttaskResponseObject'
    GetCsvimporttaskResponse:
      oneOf:
      - $ref: '#/components/schemas/Csvimporttask'
      - $ref: '#/components/schemas/GetCsvimporttaskResponseObjectAsResult'
    UpdateCsvimporttaskResponse:
      oneOf:
      - $ref: '#/components/schemas/UpdateCsvimporttaskResponseAsObject'
      - description: The response format to update __Csvimporttask__ .
        title: UpdateCsvimporttaskResponse
        type: string
    Datacollectioncluster:
      additionalProperties: false
      example:
        enable_registration: false
        _ref: _ref
        name: Example name
      properties:
        _ref:
          description: The reference to the object.
          type: string
        enable_registration:
          description: Enable/disable new registration requests
          example: false
          type: boolean
        name:
          description: Display name for cluster
          example: Example name
          readOnly: true
          type: string
      type: object
    ListDatacollectionclusterResponse:
      oneOf:
      - description: The response format to retrieve __Datacollectioncluster__ objects.
        items:
          $ref: '#/components/schemas/Datacollectioncluster'
        title: ListDatacollectionclusterResponseArray
        type: array
      - $ref: '#/components/schemas/ListDatacollectionclusterResponseObject'
    CreateDatacollectionclusterResponse:
      oneOf:
      - $ref: '#/components/schemas/CreateDatacollectionclusterResponseAsObject'
      - description: The response format to create __Datacollectioncluster__.
        title: CreateDatacollectionclusterResponse
        type: string
    GetDatacollectionclusterResponse:
      oneOf:
      - $ref: '#/components/schemas/Datacollectioncluster'
      - $ref: '#/components/schemas/GetDatacollectionclusterResponseObjectAsResult'
    UpdateDatacollectionclusterResponse:
      oneOf:
      - $ref: '#/components/schemas/UpdateDatacollectionclusterResponseAsObject'
      - description: The response format to update __Datacollectioncluster__ .
        title: UpdateDatacollectionclusterResponse
        type: string
    DbObjects:
      additionalProperties: false
      example:
        unique_id: Example unique_id
        object_type: Example object_type
        _ref: _ref
        last_sequence_id: Example last_sequence_id
        object: Example object
      properties:
        _ref:
          description: The reference to the object.
          type: string
        last_sequence_id:
          description: The last returned sequence ID.
          example: Example last_sequence_id
          readOnly: true
          type: string
        object:
          description: "The record object when supported by WAPI. Otherwise, the value\
            \ is \"None\"."
          example: Example object
          readOnly: true
          type: string
        object_type:
          description: The object type. This is undefined if the object is not supported.
          example: Example object_type
          readOnly: true
          type: string
        unique_id:
          description: The unique ID of the requested object.
          example: Example unique_id
          readOnly: true
          type: string
      type: object
    ListDbObjectsResponse:
      oneOf:
      - description: The response format to retrieve __DbObjects__ objects.
        items:
          $ref: '#/components/schemas/DbObjects'
        title: ListDbObjectsResponseArray
        type: array
      - $ref: '#/components/schemas/ListDbObjectsResponseObject'
    GetDbObjectsResponse:
      oneOf:
      - $ref: '#/components/schemas/DbObjects'
      - $ref: '#/components/schemas/GetDbObjectsResponseObjectAsResult'
    UpdateDbObjectsResponse:
      oneOf:
      - $ref: '#/components/schemas/UpdateDbObjectsResponseAsObject'
      - description: The response format to update __DbObjects__ .
        title: UpdateDbObjectsResponse
        type: string
    Dbsnapshot:
      additionalProperties: false
      example:
        _ref: _ref
        comment: Example comment
        timestamp: 1
      properties:
        _ref:
          description: The reference to the object.
          type: string
        comment:
          description: The descriptive comment.
          example: Example comment
          readOnly: true
          type: string
        timestamp:
          description: The time when the latest OneDB snapshot was taken in Epoch
            seconds format.
          example: 1
          format: int64
          readOnly: true
          type: integer
      type: object
    ListDbsnapshotResponse:
      oneOf:
      - description: The response format to retrieve __Dbsnapshot__ objects.
        items:
          $ref: '#/components/schemas/Dbsnapshot'
        title: ListDbsnapshotResponseArray
        type: array
      - $ref: '#/components/schemas/ListDbsnapshotResponseObject'
    GetDbsnapshotResponse:
      oneOf:
      - $ref: '#/components/schemas/Dbsnapshot'
      - $ref: '#/components/schemas/GetDbsnapshotResponseObjectAsResult'
    UpdateDbsnapshotResponse:
      oneOf:
      - $ref: '#/components/schemas/UpdateDbsnapshotResponseAsObject'
      - description: The response format to update __Dbsnapshot__ .
        title: UpdateDbsnapshotResponse
        type: string
    DeletedObjects:
      additionalProperties: false
      example:
        object_type: Example object_type
        _ref: _ref
      properties:
        _ref:
          description: The reference to the object.
          type: string
        object_type:
          description: The object type of the deleted object. This is undefined if
            the object is not supported.
          example: Example object_type
          readOnly: true
          type: string
      type: object
    ListDeletedObjectsResponse:
      oneOf:
      - description: The response format to retrieve __DeletedObjects__ objects.
        items:
          $ref: '#/components/schemas/DeletedObjects'
        title: ListDeletedObjectsResponseArray
        type: array
      - $ref: '#/components/schemas/ListDeletedObjectsResponseObject'
    GetDeletedObjectsResponse:
      oneOf:
      - $ref: '#/components/schemas/DeletedObjects'
      - $ref: '#/components/schemas/GetDeletedObjectsResponseObjectAsResult'
    UpdateDeletedObjectsResponse:
      oneOf:
      - $ref: '#/components/schemas/UpdateDeletedObjectsResponseAsObject'
      - description: The response format to update __DeletedObjects__ .
        title: UpdateDeletedObjectsResponse
        type: string
    DxlEndpoint:
      additionalProperties: false
      example:
        client_certificate_valid_to: 1
        brokers:
        - address: Example address
          unique_id: Example unique_id
          port: 1
          host_name: Example host_name
        - address: Example address
          unique_id: Example unique_id
          port: 1
          host_name: Example host_name
        extattrs:
          key:
            value: ""
        wapi_user_password: Example wapi_user_password
        topics:
        - topics
        - topics
        log_level: Example log_level
        brokers_import_token: Example brokers_import_token
        outbound_member_type: Example outbound_member_type
        outbound_members:
        - outbound_members
        - outbound_members
        client_certificate_subject: Example client_certificate_subject
        timeout: 1
        client_certificate_valid_from: 1
        vendor_identifier: Example vendor_identifier
        disable: false
        _ref: _ref
        client_certificate_token: Example client_certificate_token
        name: Example name
        comment: Example comment
        template_instance:
          template: Example template
          parameters:
            name: Example name
            syntax: Example syntax
            default_value: Example default_value
            value: Example value
        wapi_user_name: Example wapi_user_name
      properties:
        _ref:
          description: The reference to the object.
          type: string
        brokers:
          description: The list of DXL endpoint brokers. Note that you cannot specify
            brokers and brokers_import_token at the same time.
          enum:
          - dxl:endpoint:broker
          items:
            $ref: '#/components/schemas/DxlEndpointBrokers'
          type: array
        brokers_import_token:
          description: The token returned by the uploadinit function call in object
            fileop for a DXL broker configuration file. Note that you cannot specify
            brokers and brokers_import_token at the same time.
          example: Example brokers_import_token
          type: string
          writeOnly: true
        client_certificate_subject:
          description: The client certificate subject of a DXL endpoint.
          example: Example client_certificate_subject
          readOnly: true
          type: string
        client_certificate_token:
          description: The token returned by the uploadinit function call in object
            fileop for a DXL endpoint client certificate.
          example: Example client_certificate_token
          type: string
          writeOnly: true
        client_certificate_valid_from:
          description: The timestamp when client certificate for a DXL endpoint was
            created.
          example: 1
          format: int64
          readOnly: true
          type: integer
        client_certificate_valid_to:
          description: The timestamp when the client certificate for a DXL endpoint
            expires.
          example: 1
          format: int64
          readOnly: true
          type: integer
        comment:
          description: The comment of a DXL endpoint.
          example: Example comment
          type: string
        disable:
          description: Determines whether a DXL endpoint is disabled.
          example: false
          type: boolean
        extattrs:
          additionalProperties:
            $ref: '#/components/schemas/ExtAttrs'
          description: "Extensible attributes associated with the object. For valid\
            \ values for extensible attributes, see {extattrs:values}."
          type: object
        log_level:
          description: The log level for a DXL endpoint.
          enum:
          - ERROR
          - WARNING
          - INFO
          - DEBUG
          example: Example log_level
          type: string
        name:
          description: The name of a DXL endpoint.
          example: Example name
          type: string
        outbound_member_type:
          description: The outbound member that will generate events.
          enum:
          - MEMBER
          - GM
          example: Example outbound_member_type
          type: string
        outbound_members:
          description: The list of members for outbound events.
          enum:
          - string
          items:
            type: string
          type: array
        template_instance:
          $ref: '#/components/schemas/DxlEndpointTemplateInstance'
        timeout:
          description: The timeout of session management (in seconds).
          example: 1
          format: int64
          type: integer
        topics:
          description: DXL topics
          enum:
          - string
          items:
            type: string
          type: array
        vendor_identifier:
          description: The vendor identifier.
          example: Example vendor_identifier
          type: string
        wapi_user_name:
          description: The user name for WAPI integration.
          example: Example wapi_user_name
          type: string
        wapi_user_password:
          description: The user password for WAPI integration.
          example: Example wapi_user_password
          type: string
          writeOnly: true
      type: object
    DxlEndpointBrokers:
      example:
        address: Example address
        unique_id: Example unique_id
        port: 1
        host_name: Example host_name
      properties:
        host_name:
          description: The FQDN for the DXL endpoint broker.
          example: Example host_name
          type: string
        address:
          description: The IPv4 Address or IPv6 Address for the DXL endpoint broker.
          example: Example address
          type: string
        port:
          description: The communication port for the DXL endpoint broker.
          example: 1
          format: int64
          type: integer
        unique_id:
          description: The unique identifier for the DXL endpoint.
          example: Example unique_id
          type: string
      type: object
    DxlEndpointTemplateInstance:
      example:
        template: Example template
        parameters:
          name: Example name
          syntax: Example syntax
          default_value: Example default_value
          value: Example value
      properties:
        template:
          description: The name of the REST API template parameter.
          example: Example template
          type: string
        parameters:
          $ref: '#/components/schemas/DxlendpointtemplateinstanceParameters'
      type: object
    DxlendpointtemplateinstanceParameters:
      example:
        name: Example name
        syntax: Example syntax
        default_value: Example default_value
        value: Example value
      properties:
        name:
          description: The name of the REST API template parameter.
          example: Example name
          type: string
        value:
          description: The value of the REST API template parameter.
          example: Example value
          type: string
        default_value:
          description: The default value of the REST API template parameter.
          example: Example default_value
          readOnly: true
          type: string
        syntax:
          description: The syntax of the REST API template parameter.
          enum:
          - STR
          - BOOL
          - INT
          example: Example syntax
          type: string
      type: object
    ListDxlEndpointResponse:
      oneOf:
      - description: The response format to retrieve __DxlEndpoint__ objects.
        items:
          $ref: '#/components/schemas/DxlEndpoint'
        title: ListDxlEndpointResponseArray
        type: array
      - $ref: '#/components/schemas/ListDxlEndpointResponseObject'
    CreateDxlEndpointResponse:
      oneOf:
      - $ref: '#/components/schemas/CreateDxlEndpointResponseAsObject'
      - description: The response format to create __DxlEndpoint__.
        title: CreateDxlEndpointResponse
        type: string
    GetDxlEndpointResponse:
      oneOf:
      - $ref: '#/components/schemas/DxlEndpoint'
      - $ref: '#/components/schemas/GetDxlEndpointResponseObjectAsResult'
    UpdateDxlEndpointResponse:
      oneOf:
      - $ref: '#/components/schemas/UpdateDxlEndpointResponseAsObject'
      - description: The response format to update __DxlEndpoint__ .
        title: UpdateDxlEndpointResponse
        type: string
    Fileop:
      additionalProperties: false
      example:
        _ref: _ref
      properties:
        _ref:
          description: The reference to the object.
          type: string
      type: object
    ListFileopResponse:
      oneOf:
      - description: The response format to retrieve __Fileop__ objects.
        items:
          $ref: '#/components/schemas/Fileop'
        title: ListFileopResponseArray
        type: array
      - $ref: '#/components/schemas/ListFileopResponseObject'
    GetFileopResponse:
      oneOf:
      - $ref: '#/components/schemas/Fileop'
      - $ref: '#/components/schemas/GetFileopResponseObjectAsResult'
    UpdateFileopResponse:
      oneOf:
      - $ref: '#/components/schemas/UpdateFileopResponseAsObject'
      - description: The response format to update __Fileop__ .
        title: UpdateFileopResponse
        type: string
    Kerberoskey:
      additionalProperties: false
      example:
        enctype: Example enctype
        principal: Example principal
        upload_timestamp: 1
        domain: Example domain
        members:
        - members
        - members
        _ref: _ref
        in_use: false
        version: 1
      properties:
        _ref:
          description: The reference to the object.
          type: string
        domain:
          description: The Kerberos domain name.
          example: Example domain
          readOnly: true
          type: string
        enctype:
          description: The Kerberos key encryption type.
          enum:
          - AES128-CTS-HMAC-SHA1-96
          - AES256-CTS-HMAC-SHA1-96
          - ARCFOUR-HMAC-MD5
          - DES-CBC-CRC
          - DES-CBC-MD5
          example: Example enctype
          readOnly: true
          type: string
        in_use:
          description: Determines whether the Kerberos key is assigned to the Grid
            or Grid member.
          example: false
          readOnly: true
          type: boolean
        members:
          description: The list of hostnames and services of Grid members where the
            key is assigned or Grid/DHCP4 or Grid/DHCP6 or Grid/DNS.
          enum:
          - string
          items:
            type: string
          readOnly: true
          type: array
        principal:
          description: The principal of the Kerberos key object.
          example: Example principal
          readOnly: true
          type: string
        upload_timestamp:
          description: The timestamp of the Kerberos key upload operation.
          example: 1
          format: int64
          readOnly: true
          type: integer
        version:
          description: The Kerberos key version number (KVNO).
          example: 1
          format: int64
          readOnly: true
          type: integer
      type: object
    ListKerberoskeyResponse:
      oneOf:
      - description: The response format to retrieve __Kerberoskey__ objects.
        items:
          $ref: '#/components/schemas/Kerberoskey'
        title: ListKerberoskeyResponseArray
        type: array
      - $ref: '#/components/schemas/ListKerberoskeyResponseObject'
    GetKerberoskeyResponse:
      oneOf:
      - $ref: '#/components/schemas/Kerberoskey'
      - $ref: '#/components/schemas/GetKerberoskeyResponseObjectAsResult'
    UpdateKerberoskeyResponse:
      oneOf:
      - $ref: '#/components/schemas/UpdateKerberoskeyResponseAsObject'
      - description: The response format to update __Kerberoskey__ .
        title: UpdateKerberoskeyResponse
        type: string
    Capacityreport:
      additionalProperties: false
      example:
        percent_used: 1
        role: Example role
        hardware_type: Example hardware_type
        total_objects: 1
        max_capacity: 1
        _ref: _ref
        name: Example name
        object_counts:
        - type_name: Example type_name
          count: 1
        - type_name: Example type_name
          count: 1
      properties:
        _ref:
          description: The reference to the object.
          type: string
        hardware_type:
          description: Hardware type of a Grid member.
          example: Example hardware_type
          readOnly: true
          type: string
        max_capacity:
          description: The maximum amount of capacity available for the Grid member.
          example: 1
          format: int64
          readOnly: true
          type: integer
        name:
          description: The Grid member name.
          example: Example name
          readOnly: true
          type: string
        object_counts:
          description: A list of instance counts for object types created on the Grid
            member.
          enum:
          - capacityreport:objectcount
          items:
            $ref: '#/components/schemas/CapacityreportObjectCounts'
          readOnly: true
          type: array
        percent_used:
          description: The percentage of the capacity in use by the Grid member.
          example: 1
          format: int64
          readOnly: true
          type: integer
        role:
          description: The Grid member role.
          example: Example role
          readOnly: true
          type: string
        total_objects:
          description: The total number of objects created by the Grid member.
          example: 1
          format: int64
          readOnly: true
          type: integer
      type: object
    CapacityreportObjectCounts:
      example:
        type_name: Example type_name
        count: 1
      properties:
        type_name:
          description: Object type name.
          example: Example type_name
          readOnly: true
          type: string
        count:
          description: Number of object type instances created.
          example: 1
          format: int64
          readOnly: true
          type: integer
      type: object
    ListCapacityreportResponse:
      oneOf:
      - description: The response format to retrieve __Capacityreport__ objects.
        items:
          $ref: '#/components/schemas/Capacityreport'
        title: ListCapacityreportResponseArray
        type: array
      - $ref: '#/components/schemas/ListCapacityreportResponseObject'
    GetCapacityreportResponse:
      oneOf:
      - $ref: '#/components/schemas/Capacityreport'
      - $ref: '#/components/schemas/GetCapacityreportResponseObjectAsResult'
    UpdateCapacityreportResponse:
      oneOf:
      - $ref: '#/components/schemas/UpdateCapacityreportResponseAsObject'
      - description: The response format to update __Capacityreport__ .
        title: UpdateCapacityreportResponse
        type: string
    OutboundCloudclient:
      additionalProperties: false
      example:
        grid_member: Example grid_member
        enable: false
        outbound_cloud_client_events:
        - event_type: Example event_type
          enabled: false
        - event_type: Example event_type
          enabled: false
        _ref: _ref
        interval: 1
      properties:
        _ref:
          description: The reference to the object.
          type: string
        enable:
          description: Determines whether the OutBound Cloud Client is enabled.
          example: false
          type: boolean
        grid_member:
          description: The Grid member where our outbound is running.
          example: Example grid_member
          type: string
        interval:
          description: The time interval (in seconds) for requesting newly detected
            domains by the Infoblox Outbound Cloud Client and applying them to the
            list of configured RPZs.
          example: 1
          format: int64
          type: integer
        outbound_cloud_client_events:
          description: List of event types to request
          enum:
          - outbound:cloudclient:event
          items:
            $ref: '#/components/schemas/OutboundCloudclientOutboundCloudClientEvents'
          type: array
      type: object
    OutboundCloudclientOutboundCloudClientEvents:
      example:
        event_type: Example event_type
        enabled: false
      properties:
        event_type:
          description: The event type enum rpz and analytics.
          enum:
          - RPZ
          - ANALYTIC
          example: Example event_type
          type: string
        enabled:
          description: Determines if the event type is enabled or not.
          example: false
          type: boolean
      type: object
    ListOutboundCloudclientResponse:
      oneOf:
      - description: The response format to retrieve __OutboundCloudclient__ objects.
        items:
          $ref: '#/components/schemas/OutboundCloudclient'
        title: ListOutboundCloudclientResponseArray
        type: array
      - $ref: '#/components/schemas/ListOutboundCloudclientResponseObject'
    GetOutboundCloudclientResponse:
      oneOf:
      - $ref: '#/components/schemas/OutboundCloudclient'
      - $ref: '#/components/schemas/GetOutboundCloudclientResponseObjectAsResult'
    UpdateOutboundCloudclientResponse:
      oneOf:
      - $ref: '#/components/schemas/UpdateOutboundCloudclientResponseAsObject'
      - description: The response format to update __OutboundCloudclient__ .
        title: UpdateOutboundCloudclientResponse
        type: string
    PxgridEndpoint:
      additionalProperties: false
      example:
        client_certificate_valid_to: 1
        network_view: Example network_view
        address: Example address
        extattrs:
          key:
            value: ""
        subscribe_settings:
          mapped_ea_attributes:
            mapped_ea: Example mapped_ea
            name: Example name
          enabled_attributes:
          - enabled_attributes
          - enabled_attributes
        wapi_user_password: Example wapi_user_password
        log_level: Example log_level
        outbound_member_type: Example outbound_member_type
        outbound_members:
        - outbound_members
        - outbound_members
        client_certificate_subject: Example client_certificate_subject
        publish_settings:
          enabled_attributes:
          - enabled_attributes
          - enabled_attributes
        timeout: 1
        client_certificate_valid_from: 1
        vendor_identifier: Example vendor_identifier
        disable: false
        _ref: _ref
        client_certificate_token: Example client_certificate_token
        name: Example name
        comment: Example comment
        template_instance:
          template: Example template
          parameters:
            name: Example name
            syntax: Example syntax
            default_value: Example default_value
            value: Example value
        wapi_user_name: Example wapi_user_name
      properties:
        _ref:
          description: The reference to the object.
          type: string
        address:
          description: The pxgrid endpoint IPv4 Address or IPv6 Address or Fully-Qualified
            Domain Name (FQDN)
          example: Example address
          type: string
        client_certificate_subject:
          description: The Cisco ISE client certificate subject.
          example: Example client_certificate_subject
          readOnly: true
          type: string
        client_certificate_token:
          description: The token returned by the uploadinit function call in object
            fileop for Cisco ISE client certificate.
          example: Example client_certificate_token
          type: string
          writeOnly: true
        client_certificate_valid_from:
          description: The pxgrid endpoint client certificate valid from.
          example: 1
          format: int64
          readOnly: true
          type: integer
        client_certificate_valid_to:
          description: The pxgrid endpoint client certificate valid to.
          example: 1
          format: int64
          readOnly: true
          type: integer
        comment:
          description: The Cisco ISE endpoint descriptive comment.
          example: Example comment
          type: string
        disable:
          description: "Determines whether a Cisco ISE endpoint is disabled or not.\
            \ When this is set to False, the Cisco ISE endpoint is enabled."
          example: false
          type: boolean
        extattrs:
          additionalProperties:
            $ref: '#/components/schemas/ExtAttrs'
          description: "Extensible attributes associated with the object. For valid\
            \ values for extensible attributes, see {extattrs:values}."
          type: object
        log_level:
          description: The log level for a notification pxgrid endpoint.
          enum:
          - ERROR
          - WARNING
          - INFO
          - DEBUG
          example: Example log_level
          type: string
        name:
          description: The name of the pxgrid endpoint.
          example: Example name
          type: string
        network_view:
          description: The pxgrid network view name.
          example: Example network_view
          type: string
        outbound_member_type:
          description: The outbound member that will generate events.
          enum:
          - MEMBER
          - GM
          example: Example outbound_member_type
          type: string
        outbound_members:
          description: The list of members for outbound events.
          enum:
          - string
          items:
            type: string
          type: array
        publish_settings:
          $ref: '#/components/schemas/PxgridEndpointPublishSettings'
        subscribe_settings:
          $ref: '#/components/schemas/PxgridEndpointSubscribeSettings'
        template_instance:
          $ref: '#/components/schemas/PxgridEndpointTemplateInstance'
        timeout:
          description: The timeout of session management (in seconds).
          example: 1
          format: int64
          type: integer
        vendor_identifier:
          description: The vendor identifier.
          example: Example vendor_identifier
          type: string
        wapi_user_name:
          description: The user name for WAPI integration.
          example: Example wapi_user_name
          type: string
        wapi_user_password:
          description: The user password for WAPI integration.
          example: Example wapi_user_password
          type: string
          writeOnly: true
      type: object
    PxgridEndpointPublishSettings:
      example:
        enabled_attributes:
        - enabled_attributes
        - enabled_attributes
      properties:
        enabled_attributes:
          description: The list of NIOS extensible attributes enalbed for publishsing
            to Cisco ISE endpoint.
          enum:
          - CLIENT_ID
          - FINGERPRINT
          - HOSTNAME
          - INFOBLOX_MEMBER
          - IPADDRESS
          - LEASE_END_TIME
          - LEASE_START_TIME
          - LEASE_STATE
          - MAC_OR_DUID
          - NETBIOS_NAME
          items:
            type: string
          type: array
      type: object
    PxgridEndpointSubscribeSettings:
      example:
        mapped_ea_attributes:
          mapped_ea: Example mapped_ea
          name: Example name
        enabled_attributes:
        - enabled_attributes
        - enabled_attributes
      properties:
        enabled_attributes:
          description: The list of Cisco ISE attributes allowed for subscription.
          enum:
          - DOMAINNAME
          - ENDPOINT_PROFILE
          - SECURITY_GROUP
          - SESSION_STATE
          - SSID
          - USERNAME
          - VLAN
          items:
            type: string
          type: array
        mapped_ea_attributes:
          $ref: '#/components/schemas/PxgridendpointsubscribesettingsMappedEaAttributes'
      type: object
    PxgridendpointsubscribesettingsMappedEaAttributes:
      example:
        mapped_ea: Example mapped_ea
        name: Example name
      properties:
        name:
          description: The Cisco ISE attribute name that is enabled for publishsing
            from a Cisco ISE endpoint.
          enum:
          - ACCOUNT_SESSION_ID
          - AUDIT_SESSION_ID
          - EPS_STATUS
          - IP_ADDRESS
          - MAC
          - NAS_IP_ADDRESS
          - NAS_PORT_ID
          - POSTURE_STATUS
          - POSTURE_TIMESTAMP
          example: Example name
          type: string
        mapped_ea:
          description: The name of the extensible attribute definition object the
            Cisco ISE attribute that is enabled for subscription is mapped on.
          example: Example mapped_ea
          type: string
      type: object
    PxgridEndpointTemplateInstance:
      example:
        template: Example template
        parameters:
          name: Example name
          syntax: Example syntax
          default_value: Example default_value
          value: Example value
      properties:
        template:
          description: The name of the REST API template parameter.
          example: Example template
          type: string
        parameters:
          $ref: '#/components/schemas/PxgridendpointtemplateinstanceParameters'
      type: object
    PxgridendpointtemplateinstanceParameters:
      example:
        name: Example name
        syntax: Example syntax
        default_value: Example default_value
        value: Example value
      properties:
        name:
          description: The name of the REST API template parameter.
          example: Example name
          type: string
        value:
          description: The value of the REST API template parameter.
          example: Example value
          type: string
        default_value:
          description: The default value of the REST API template parameter.
          example: Example default_value
          readOnly: true
          type: string
        syntax:
          description: The syntax of the REST API template parameter.
          enum:
          - STR
          - BOOL
          - INT
          example: Example syntax
          type: string
      type: object
    ListPxgridEndpointResponse:
      oneOf:
      - description: The response format to retrieve __PxgridEndpoint__ objects.
        items:
          $ref: '#/components/schemas/PxgridEndpoint'
        title: ListPxgridEndpointResponseArray
        type: array
      - $ref: '#/components/schemas/ListPxgridEndpointResponseObject'
    CreatePxgridEndpointResponse:
      oneOf:
      - $ref: '#/components/schemas/CreatePxgridEndpointResponseAsObject'
      - description: The response format to create __PxgridEndpoint__.
        title: CreatePxgridEndpointResponse
        type: string
    GetPxgridEndpointResponse:
      oneOf:
      - $ref: '#/components/schemas/PxgridEndpoint'
      - $ref: '#/components/schemas/GetPxgridEndpointResponseObjectAsResult'
    UpdatePxgridEndpointResponse:
      oneOf:
      - $ref: '#/components/schemas/UpdatePxgridEndpointResponseAsObject'
      - description: The response format to update __PxgridEndpoint__ .
        title: UpdatePxgridEndpointResponse
        type: string
    Ruleset:
      additionalProperties: false
      example:
        _ref: _ref
        name: Example name
        comment: Example comment
        disabled: false
        type: Example type
        nxdomain_rules:
        - pattern: Example pattern
          action: Example action
        - pattern: Example pattern
          action: Example action
      properties:
        _ref:
          description: The reference to the object.
          type: string
        comment:
          description: Descriptive comment about the Ruleset object.
          example: Example comment
          type: string
        disabled:
          description: The flag that indicates if the Ruleset object is disabled.
          example: false
          type: boolean
        name:
          description: The name of this Ruleset object.
          example: Example name
          type: string
        nxdomain_rules:
          description: The list of Rules assigned to this Ruleset object. Rules can
            be set only when the Ruleset type is set to "NXDOMAIN".
          enum:
          - nxdomainrule
          items:
            $ref: '#/components/schemas/RulesetNxdomainRules'
          type: array
        type:
          description: The type of this Ruleset object.
          enum:
          - NXDOMAIN
          - BLACKLIST
          example: Example type
          type: string
      type: object
    RulesetNxdomainRules:
      example:
        pattern: Example pattern
        action: Example action
      properties:
        action:
          description: The action to perform when a domain name matches the pattern
            defined in this Ruleset.
          enum:
          - PASS
          - REDIRECT
          - MODIFY
          example: Example action
          type: string
        pattern:
          description: The pattern that is used to match the domain name.
          example: Example pattern
          type: string
      type: object
    ListRulesetResponse:
      oneOf:
      - description: The response format to retrieve __Ruleset__ objects.
        items:
          $ref: '#/components/schemas/Ruleset'
        title: ListRulesetResponseArray
        type: array
      - $ref: '#/components/schemas/ListRulesetResponseObject'
    CreateRulesetResponse:
      oneOf:
      - $ref: '#/components/schemas/CreateRulesetResponseAsObject'
      - description: The response format to create __Ruleset__.
        title: CreateRulesetResponse
        type: string
    GetRulesetResponse:
      oneOf:
      - $ref: '#/components/schemas/Ruleset'
      - $ref: '#/components/schemas/GetRulesetResponseObjectAsResult'
    UpdateRulesetResponse:
      oneOf:
      - $ref: '#/components/schemas/UpdateRulesetResponseAsObject'
      - description: The response format to update __Ruleset__ .
        title: UpdateRulesetResponse
        type: string
    Scavengingtask:
      additionalProperties: false
      example:
        reclaimed_records: 1
        start_time: 1
        associated_object: Example associated_object
        processed_records: 1
        _ref: _ref
        end_time: 1
        action: Example action
        reclaimable_records: 1
        status: Example status
      properties:
        _ref:
          description: The reference to the object.
          type: string
        action:
          description: The scavenging action.
          enum:
          - ANALYZE
          - RECLAIM
          - ANALYZE_RECLAIM
          - RESET
          example: Example action
          readOnly: true
          type: string
        associated_object:
          description: The reference to the object associated with the scavenging
            task.
          example: Example associated_object
          readOnly: true
          type: string
        end_time:
          description: The scavenging process end time.
          example: 1
          format: int64
          readOnly: true
          type: integer
        processed_records:
          description: The number of processed during scavenging resource records.
          example: 1
          format: int64
          readOnly: true
          type: integer
        reclaimable_records:
          description: The number of resource records that are allowed to be reclaimed
            during the scavenging process.
          example: 1
          format: int64
          readOnly: true
          type: integer
        reclaimed_records:
          description: The number of reclaimed during the scavenging process resource
            records.
          example: 1
          format: int64
          readOnly: true
          type: integer
        start_time:
          description: The scavenging process start time.
          example: 1
          format: int64
          readOnly: true
          type: integer
        status:
          description: The scavenging process status. This is a read-only attribute.
          enum:
          - CREATED
          - RUNNING
          - COMPLETED
          - ERROR
          example: Example status
          readOnly: true
          type: string
      type: object
    ListScavengingtaskResponse:
      oneOf:
      - description: The response format to retrieve __Scavengingtask__ objects.
        items:
          $ref: '#/components/schemas/Scavengingtask'
        title: ListScavengingtaskResponseArray
        type: array
      - $ref: '#/components/schemas/ListScavengingtaskResponseObject'
    GetScavengingtaskResponse:
      oneOf:
      - $ref: '#/components/schemas/Scavengingtask'
      - $ref: '#/components/schemas/GetScavengingtaskResponseObjectAsResult'
    UpdateScavengingtaskResponse:
      oneOf:
      - $ref: '#/components/schemas/UpdateScavengingtaskResponseAsObject'
      - description: The response format to update __Scavengingtask__ .
        title: UpdateScavengingtaskResponse
        type: string
    Scheduledtask:
      additionalProperties: false
      example:
        approver: Example approver
        submitter: Example submitter
        changed_objects:
        - object_type: Example object_type
          name: Example name
          action: Example action
          type: Example type
          properties:
          - properties
          - properties
        - object_type: Example object_type
          name: Example name
          action: Example action
          type: Example type
          properties:
          - properties
          - properties
        execution_details_type: Example execution_details_type
        submit_time: 1
        submitter_comment: Example submitter_comment
        approval_status: Example approval_status
        execution_details:
        - execution_details
        - execution_details
        task_id: 1
        scheduled_time: 1
        ticket_number: Example ticket_number
        re_execute_task: false
        execute_now: false
        execution_time: 1
        is_network_insight_task: false
        automatic_restart: false
        predecessor_task: Example predecessor_task
        execution_status: Example execution_status
        _ref: _ref
        member: Example member
        dependent_tasks:
        - scheduledtask
        - scheduledtask
        approver_comment: Example approver_comment
        task_type: Example task_type
      properties:
        _ref:
          description: The reference to the object.
          type: string
        approval_status:
          description: The approval status of the task.
          enum:
          - APPROVED
          - NONE
          - PENDING
          - REJECTED
          example: Example approval_status
          type: string
        approver:
          description: The approver of the task.
          example: Example approver
          readOnly: true
          type: string
        approver_comment:
          description: The comment specified by the approver of the task.
          example: Example approver_comment
          type: string
        automatic_restart:
          description: Indicates whether there will be an automatic restart when the
            appliance executes the task.
          example: false
          type: boolean
        changed_objects:
          description: A list of objects that are affected by the task.
          enum:
          - changedobject
          items:
            $ref: '#/components/schemas/ScheduledtaskChangedObjects'
          readOnly: true
          type: array
        dependent_tasks:
          description: "If this scheduled task has dependent tasks, their references\
            \ will be returned in this field."
          enum:
          - scheduledtask
          items:
            enum:
            - scheduledtask
            type: string
          readOnly: true
          type: array
        execute_now:
          description: If this field is set to True the specified task will be executed
            immediately.
          example: false
          type: boolean
          writeOnly: true
        execution_details:
          description: Messages generated by the execution of the scheduled task after
            its completion.
          enum:
          - string
          items:
            type: string
          readOnly: true
          type: array
        execution_details_type:
          description: The type of details generated by the execution of the scheduled
            task after its completion.
          enum:
          - NONE
          - WARNING
          example: Example execution_details_type
          readOnly: true
          type: string
        execution_status:
          description: The execution status of the task.
          enum:
          - COMPLETED
          - FAILED
          - PENDING
          - WAITING_EXECUTION
          example: Example execution_status
          readOnly: true
          type: string
        execution_time:
          description: The time when the appliance executed the task.
          example: 1
          format: int64
          readOnly: true
          type: integer
        is_network_insight_task:
          description: Indicates whether this is a Network Insight scheduled task.
          example: false
          readOnly: true
          type: boolean
        member:
          description: The member where this task was created.
          example: Example member
          readOnly: true
          type: string
        predecessor_task:
          description: "If this scheduled task has a predecessor task set, its reference\
            \ will be returned in this field."
          example: Example predecessor_task
          readOnly: true
          type: string
        re_execute_task:
          description: "If set to True, if the scheduled task is a Network Insight\
            \ task and it failed, a new task will be cloned from this task and re-executed."
          example: false
          type: boolean
        scheduled_time:
          description: The time when the task is scheduled to occur.
          example: 1
          format: int64
          type: integer
        submit_time:
          description: The time when the task was submitted.
          example: 1
          format: int64
          readOnly: true
          type: integer
        submitter:
          description: The submitter of the task.
          example: Example submitter
          readOnly: true
          type: string
        submitter_comment:
          description: The comment specified by the submitter of the task.
          example: Example submitter_comment
          type: string
        task_id:
          description: The task ID.
          example: 1
          format: int64
          readOnly: true
          type: integer
        task_type:
          description: The task type.
          enum:
          - OBJECT_CHANGE
          - PORT_CONTROL
          example: Example task_type
          readOnly: true
          type: string
        ticket_number:
          description: The task ticket number.
          example: Example ticket_number
          readOnly: true
          type: string
      type: object
    ScheduledtaskChangedObjects:
      example:
        object_type: Example object_type
        name: Example name
        action: Example action
        type: Example type
        properties:
        - properties
        - properties
      properties:
        action:
          description: This is a description of the action that is applied to this
            object.
          enum:
          - Convert IPv4 Lease
          - Delete
          - Restart Services
          - Add
          - Convert IPv6 Lease
          - Lock/Unlock Zone
          - Reset Grid
          - Configure Grid
          - Restart Services
          - Network Discovery
          - Upgrade Grid
          - Modify
          example: Example action
          readOnly: true
          type: string
        name:
          description: The object name.
          example: Example name
          readOnly: true
          type: string
        type:
          description: "A value of the object type, this may contain objects that\
            \ are not yet available in WAPI."
          example: Example type
          readOnly: true
          type: string
        object_type:
          description: The object type. This is undefined if the object is not yet
            supported.
          example: Example object_type
          readOnly: true
          type: string
        properties:
          description: A list of properties that are being changed.
          enum:
          - string
          items:
            type: string
          readOnly: true
          type: array
      type: object
    ListScheduledtaskResponse:
      oneOf:
      - description: The response format to retrieve __Scheduledtask__ objects.
        items:
          $ref: '#/components/schemas/Scheduledtask'
        title: ListScheduledtaskResponseArray
        type: array
      - $ref: '#/components/schemas/ListScheduledtaskResponseObject'
    GetScheduledtaskResponse:
      oneOf:
      - $ref: '#/components/schemas/Scheduledtask'
      - $ref: '#/components/schemas/GetScheduledtaskResponseObjectAsResult'
    UpdateScheduledtaskResponse:
      oneOf:
      - $ref: '#/components/schemas/UpdateScheduledtaskResponseAsObject'
      - description: The response format to update __Scheduledtask__ .
        title: UpdateScheduledtaskResponse
        type: string
    Search:
      additionalProperties: false
      example:
        _ref: _ref
      properties:
        _ref:
          description: The reference to the object.
          type: string
      type: object
    ListSearchResponse:
      oneOf:
      - description: The response format to retrieve __Search__ objects.
        items:
          $ref: '#/components/schemas/Search'
        title: ListSearchResponseArray
        type: array
      - $ref: '#/components/schemas/ListSearchResponseObject'
    GetSearchResponse:
      oneOf:
      - $ref: '#/components/schemas/Search'
      - $ref: '#/components/schemas/GetSearchResponseObjectAsResult'
    UpdateSearchResponse:
      oneOf:
      - $ref: '#/components/schemas/UpdateSearchResponseAsObject'
      - description: The response format to update __Search__ .
        title: UpdateSearchResponse
        type: string
    SyslogEndpoint:
      additionalProperties: false
      example:
        extattrs:
          key:
            value: ""
        syslog_servers:
        - severity: Example severity
          hostname: Example hostname
          address: Example address
          connection_type: Example connection_type
          port: 1
          format: Example format
          certificate: Example certificate
          certificate_token: Example certificate_token
          facility: Example facility
        - severity: Example severity
          hostname: Example hostname
          address: Example address
          connection_type: Example connection_type
          port: 1
          format: Example format
          certificate: Example certificate
          certificate_token: Example certificate_token
          facility: Example facility
        wapi_user_password: Example wapi_user_password
        vendor_identifier: Example vendor_identifier
        _ref: _ref
        log_level: Example log_level
        name: Example name
        outbound_member_type: Example outbound_member_type
        outbound_members:
        - outbound_members
        - outbound_members
        template_instance:
          template: Example template
          parameters:
            name: Example name
            syntax: Example syntax
            default_value: Example default_value
            value: Example value
        wapi_user_name: Example wapi_user_name
        timeout: 1
      properties:
        _ref:
          description: The reference to the object.
          type: string
        extattrs:
          additionalProperties:
            $ref: '#/components/schemas/ExtAttrs'
          description: "Extensible attributes associated with the object. For valid\
            \ values for extensible attributes, see {extattrs:values}."
          type: object
        log_level:
          description: The log level for a notification REST endpoint.
          enum:
          - ERROR
          - WARNING
          - INFO
          - DEBUG
          example: Example log_level
          type: string
        name:
          description: The name of a Syslog endpoint.
          example: Example name
          type: string
        outbound_member_type:
          description: The outbound member that will generate events.
          enum:
          - MEMBER
          - GM
          example: Example outbound_member_type
          type: string
        outbound_members:
          description: The list of members for outbound events.
          enum:
          - string
          items:
            type: string
          type: array
        syslog_servers:
          description: List of syslog servers
          enum:
          - syslog:endpoint:servers
          items:
            $ref: '#/components/schemas/SyslogEndpointSyslogServers'
          type: array
        template_instance:
          $ref: '#/components/schemas/SyslogEndpointTemplateInstance'
        timeout:
          description: The timeout of session management (in seconds).
          example: 1
          format: int64
          type: integer
        vendor_identifier:
          description: The vendor identifier.
          example: Example vendor_identifier
          type: string
        wapi_user_name:
          description: The user name for WAPI integration.
          example: Example wapi_user_name
          type: string
        wapi_user_password:
          description: The user password for WAPI integration.
          example: Example wapi_user_password
          type: string
          writeOnly: true
      type: object
    SyslogEndpointSyslogServers:
      example:
        severity: Example severity
        hostname: Example hostname
        address: Example address
        connection_type: Example connection_type
        port: 1
        format: Example format
        certificate: Example certificate
        certificate_token: Example certificate_token
        facility: Example facility
      properties:
        address:
          description: Syslog Server IP address
          example: Example address
          type: string
        connection_type:
          description: Connection type values
          enum:
          - stcp
          - tcp
          - udp
          example: Example connection_type
          type: string
        port:
          description: The port this server listens on.
          example: 1
          format: int64
          type: integer
        hostname:
          description: List of hostnames
          enum:
          - FQDN
          - HOSTNAME
          - IP_ADDRESS
          example: Example hostname
          type: string
        format:
          description: Format vlues for syslog endpoint server
          enum:
          - raw
          - formatted
          example: Example format
          type: string
        facility:
          description: Facility values for syslog endpoint server
          enum:
          - local0
          - local1
          - local2
          - local3
          - local4
          - local5
          - local6
          - local7
          example: Example facility
          type: string
        severity:
          description: Severity values for syslog endpoint server.
          enum:
          - debug
          - info
          - notice
          - warning
          - err
          - crit
          - alert
          - emerg
          example: Example severity
          type: string
        certificate:
          description: Reference for creating sysog endpoint server.
          example: Example certificate
          readOnly: true
          type: string
        certificate_token:
          description: The token returned by the uploadinit function call in object
            fileop.
          example: Example certificate_token
          type: string
          writeOnly: true
      type: object
    SyslogEndpointTemplateInstance:
      example:
        template: Example template
        parameters:
          name: Example name
          syntax: Example syntax
          default_value: Example default_value
          value: Example value
      properties:
        template:
          description: The name of the REST API template parameter.
          example: Example template
          type: string
        parameters:
          $ref: '#/components/schemas/SyslogendpointtemplateinstanceParameters'
      type: object
    SyslogendpointtemplateinstanceParameters:
      example:
        name: Example name
        syntax: Example syntax
        default_value: Example default_value
        value: Example value
      properties:
        name:
          description: The name of the REST API template parameter.
          example: Example name
          type: string
        value:
          description: The value of the REST API template parameter.
          example: Example value
          type: string
        default_value:
          description: The default value of the REST API template parameter.
          example: Example default_value
          readOnly: true
          type: string
        syntax:
          description: The syntax of the REST API template parameter.
          enum:
          - STR
          - BOOL
          - INT
          example: Example syntax
          type: string
      type: object
    ListSyslogEndpointResponse:
      oneOf:
      - description: The response format to retrieve __SyslogEndpoint__ objects.
        items:
          $ref: '#/components/schemas/SyslogEndpoint'
        title: ListSyslogEndpointResponseArray
        type: array
      - $ref: '#/components/schemas/ListSyslogEndpointResponseObject'
    CreateSyslogEndpointResponse:
      oneOf:
      - $ref: '#/components/schemas/CreateSyslogEndpointResponseAsObject'
      - description: The response format to create __SyslogEndpoint__.
        title: CreateSyslogEndpointResponse
        type: string
    GetSyslogEndpointResponse:
      oneOf:
      - $ref: '#/components/schemas/SyslogEndpoint'
      - $ref: '#/components/schemas/GetSyslogEndpointResponseObjectAsResult'
    UpdateSyslogEndpointResponse:
      oneOf:
      - $ref: '#/components/schemas/UpdateSyslogEndpointResponseAsObject'
      - description: The response format to update __SyslogEndpoint__ .
        title: UpdateSyslogEndpointResponse
        type: string
    Taxii:
      additionalProperties: false
      example:
        enable_service: false
        taxii_rpz_config:
        - zone: Example zone
          collection_name: Example collection_name
        - zone: Example zone
          collection_name: Example collection_name
        _ref: _ref
        name: Example name
        ipv4addr: Example ipv4addr
        ipv6addr: Example ipv6addr
      properties:
        _ref:
          description: The reference to the object.
          type: string
        enable_service:
          description: Indicates whether the Taxii service is running on the given
            member or not.
          example: false
          type: boolean
        ipv4addr:
          description: The IPv4 Address of the Grid member.
          example: Example ipv4addr
          readOnly: true
          type: string
        ipv6addr:
          description: The IPv6 Address of the Grid member.
          example: Example ipv6addr
          readOnly: true
          type: string
        name:
          description: The name of the Taxii Member.
          example: Example name
          readOnly: true
          type: string
        taxii_rpz_config:
          description: Taxii service RPZ configuration list.
          enum:
          - taxii:rpzconfig
          items:
            $ref: '#/components/schemas/TaxiiTaxiiRpzConfig'
          type: array
      type: object
    TaxiiTaxiiRpzConfig:
      example:
        zone: Example zone
        collection_name: Example collection_name
      properties:
        collection_name:
          description: The STIX collection name.
          example: Example collection_name
          type: string
        zone:
          description: The reference to the RPZ in which rules are created through
            the Taxii protocol requests.
          example: Example zone
          type: string
      type: object
    ListTaxiiResponse:
      oneOf:
      - description: The response format to retrieve __Taxii__ objects.
        items:
          $ref: '#/components/schemas/Taxii'
        title: ListTaxiiResponseArray
        type: array
      - $ref: '#/components/schemas/ListTaxiiResponseObject'
    GetTaxiiResponse:
      oneOf:
      - $ref: '#/components/schemas/Taxii'
      - $ref: '#/components/schemas/GetTaxiiResponseObjectAsResult'
    UpdateTaxiiResponse:
      oneOf:
      - $ref: '#/components/schemas/UpdateTaxiiResponseAsObject'
      - description: The response format to update __Taxii__ .
        title: UpdateTaxiiResponse
        type: string
    Tftpfiledir:
      additionalProperties: false
      example:
        vtftp_dir_members:
        - address: Example address
          start_address: Example start_address
          member: Example member
          cidr: 1
          end_address: Example end_address
          ip_type: Example ip_type
          network: Example network
        - address: Example address
          start_address: Example start_address
          member: Example member
          cidr: 1
          end_address: Example end_address
          ip_type: Example ip_type
          network: Example network
        last_modify: 1
        _ref: _ref
        name: Example name
        is_synced_to_gm: false
        type: Example type
        directory: Example directory
      properties:
        _ref:
          description: The reference to the object.
          type: string
        directory:
          description: The path to the directory that contains file or subdirectory.
          example: Example directory
          type: string
        is_synced_to_gm:
          description: Determines whether the TFTP entity is synchronized to Grid
            Master.
          example: false
          readOnly: true
          type: boolean
        last_modify:
          description: The time when the file or directory was last modified.
          example: 1
          format: int64
          readOnly: true
          type: integer
        name:
          description: The TFTP directory or file name.
          example: Example name
          type: string
        type:
          description: The type of TFTP file system entity (directory or file).
          enum:
          - DIRECTORY
          - FILE
          example: Example type
          type: string
        vtftp_dir_members:
          description: The replication members with TFTP client addresses where this
            virtual folder is applicable.
          enum:
          - vtftpdirmember
          items:
            $ref: '#/components/schemas/TftpfiledirVtftpDirMembers'
          type: array
      type: object
    TftpfiledirVtftpDirMembers:
      example:
        address: Example address
        start_address: Example start_address
        member: Example member
        cidr: 1
        end_address: Example end_address
        ip_type: Example ip_type
        network: Example network
      properties:
        member:
          description: The Grid member on which to create the virtual TFTP directory.
          example: Example member
          type: string
        ip_type:
          description: The IP type of the virtual TFTP root directory.
          enum:
          - ADDRESS
          - NETWORK
          - RANGE
          example: Example ip_type
          type: string
        address:
          description: The IP address of the clients which will see the virtual TFTP
            directory as the root directory.
          example: Example address
          type: string
        start_address:
          description: The start IP address of the range within which the clients
            will see the virtual TFTP directory as the root directory.
          example: Example start_address
          type: string
        end_address:
          description: The end IP address of the range within which the clients will
            see the virtual TFTP directory as the root directory.
          example: Example end_address
          type: string
        network:
          description: The IP address of network the clients from which will see the
            virtual TFTP directory as the root directory.
          example: Example network
          type: string
        cidr:
          description: The CIDR of network the clients from which will see the virtual
            TFTP directory as the root directory.
          example: 1
          format: int64
          type: integer
      type: object
    ListTftpfiledirResponse:
      oneOf:
      - description: The response format to retrieve __Tftpfiledir__ objects.
        items:
          $ref: '#/components/schemas/Tftpfiledir'
        title: ListTftpfiledirResponseArray
        type: array
      - $ref: '#/components/schemas/ListTftpfiledirResponseObject'
    CreateTftpfiledirResponse:
      oneOf:
      - $ref: '#/components/schemas/CreateTftpfiledirResponseAsObject'
      - description: The response format to create __Tftpfiledir__.
        title: CreateTftpfiledirResponse
        type: string
    GetTftpfiledirResponse:
      oneOf:
      - $ref: '#/components/schemas/Tftpfiledir'
      - $ref: '#/components/schemas/GetTftpfiledirResponseObjectAsResult'
    UpdateTftpfiledirResponse:
      oneOf:
      - $ref: '#/components/schemas/UpdateTftpfiledirResponseAsObject'
      - description: The response format to update __Tftpfiledir__ .
        title: UpdateTftpfiledirResponse
        type: string
    ListAllendpointsResponseObject:
      description: The response format to retrieve __Allendpoints__ objects.
      properties:
        result:
          items:
            $ref: '#/components/schemas/Allendpoints'
          type: array
      title: ListAllendpointsResponseObject
      type: object
    GetAllendpointsResponseObjectAsResult:
      additionalProperties: false
      description: The response format to retrieve __Allendpoints__ objects.
      properties:
        result:
          $ref: '#/components/schemas/Allendpoints'
      title: GetAllendpointsResponseObjectAsResult
      type: object
    UpdateAllendpointsResponseAsObject:
      description: The response format to update __Allendpoints__ in object format.
      properties:
        result:
          $ref: '#/components/schemas/Allendpoints'
      title: UpdateAllendpointsResponseAsObject
      type: object
    ListBfdtemplateResponseObject:
      description: The response format to retrieve __Bfdtemplate__ objects.
      properties:
        result:
          items:
            $ref: '#/components/schemas/Bfdtemplate'
          type: array
      title: ListBfdtemplateResponseObject
      type: object
    CreateBfdtemplateResponseAsObject:
      description: The response format to create __Bfdtemplate__ in object format.
      example:
        result:
          authentication_key_id: 1
          min_tx_interval: 1
          authentication_key: Example authentication_key
          min_rx_interval: 1
          _ref: _ref
          name: Example name
          authentication_type: Example authentication_type
          detection_multiplier: 1
      properties:
        result:
          $ref: '#/components/schemas/Bfdtemplate'
      title: CreateBfdtemplateResponseAsObject
      type: object
    GetBfdtemplateResponseObjectAsResult:
      additionalProperties: false
      description: The response format to retrieve __Bfdtemplate__ objects.
      properties:
        result:
          $ref: '#/components/schemas/Bfdtemplate'
      title: GetBfdtemplateResponseObjectAsResult
      type: object
    UpdateBfdtemplateResponseAsObject:
      description: The response format to update __Bfdtemplate__ in object format.
      example:
        result:
          authentication_key_id: 1
          min_tx_interval: 1
          authentication_key: Example authentication_key
          min_rx_interval: 1
          _ref: _ref
          name: Example name
          authentication_type: Example authentication_type
          detection_multiplier: 1
      properties:
        result:
          $ref: '#/components/schemas/Bfdtemplate'
      title: UpdateBfdtemplateResponseAsObject
      type: object
    ListCsvimporttaskResponseObject:
      description: The response format to retrieve __Csvimporttask__ objects.
      properties:
        result:
          items:
            $ref: '#/components/schemas/Csvimporttask'
          type: array
      title: ListCsvimporttaskResponseObject
      type: object
    GetCsvimporttaskResponseObjectAsResult:
      additionalProperties: false
      description: The response format to retrieve __Csvimporttask__ objects.
      properties:
        result:
          $ref: '#/components/schemas/Csvimporttask'
      title: GetCsvimporttaskResponseObjectAsResult
      type: object
    UpdateCsvimporttaskResponseAsObject:
      description: The response format to update __Csvimporttask__ in object format.
      example:
        result:
          update_method: Example update_method
          file_name: Example file_name
          lines_failed: 1
          lines_processed: 1
          import_id: 1
          end_time: 1
          lines_warning: 1
          separator: Example separator
          file_size: 1
          start_time: 1
          _ref: _ref
          action: Example action
          on_error: Example on_error
          admin_name: Example admin_name
          operation: Example operation
          status: Example status
      properties:
        result:
          $ref: '#/components/schemas/Csvimporttask'
      title: UpdateCsvimporttaskResponseAsObject
      type: object
    ListDatacollectionclusterResponseObject:
      description: The response format to retrieve __Datacollectioncluster__ objects.
      properties:
        result:
          items:
            $ref: '#/components/schemas/Datacollectioncluster'
          type: array
      title: ListDatacollectionclusterResponseObject
      type: object
    CreateDatacollectionclusterResponseAsObject:
      description: The response format to create __Datacollectioncluster__ in object
        format.
      example:
        result:
          enable_registration: false
          _ref: _ref
          name: Example name
      properties:
        result:
          $ref: '#/components/schemas/Datacollectioncluster'
      title: CreateDatacollectionclusterResponseAsObject
      type: object
    GetDatacollectionclusterResponseObjectAsResult:
      additionalProperties: false
      description: The response format to retrieve __Datacollectioncluster__ objects.
      properties:
        result:
          $ref: '#/components/schemas/Datacollectioncluster'
      title: GetDatacollectionclusterResponseObjectAsResult
      type: object
    UpdateDatacollectionclusterResponseAsObject:
      description: The response format to update __Datacollectioncluster__ in object
        format.
      example:
        result:
          enable_registration: false
          _ref: _ref
          name: Example name
      properties:
        result:
          $ref: '#/components/schemas/Datacollectioncluster'
      title: UpdateDatacollectionclusterResponseAsObject
      type: object
    ListDbObjectsResponseObject:
      description: The response format to retrieve __DbObjects__ objects.
      properties:
        result:
          items:
            $ref: '#/components/schemas/DbObjects'
          type: array
      title: ListDbObjectsResponseObject
      type: object
    GetDbObjectsResponseObjectAsResult:
      additionalProperties: false
      description: The response format to retrieve __DbObjects__ objects.
      properties:
        result:
          $ref: '#/components/schemas/DbObjects'
      title: GetDbObjectsResponseObjectAsResult
      type: object
    UpdateDbObjectsResponseAsObject:
      description: The response format to update __DbObjects__ in object format.
      properties:
        result:
          $ref: '#/components/schemas/DbObjects'
      title: UpdateDbObjectsResponseAsObject
      type: object
    ListDbsnapshotResponseObject:
      description: The response format to retrieve __Dbsnapshot__ objects.
      properties:
        result:
          items:
            $ref: '#/components/schemas/Dbsnapshot'
          type: array
      title: ListDbsnapshotResponseObject
      type: object
    GetDbsnapshotResponseObjectAsResult:
      additionalProperties: false
      description: The response format to retrieve __Dbsnapshot__ objects.
      properties:
        result:
          $ref: '#/components/schemas/Dbsnapshot'
      title: GetDbsnapshotResponseObjectAsResult
      type: object
    UpdateDbsnapshotResponseAsObject:
      description: The response format to update __Dbsnapshot__ in object format.
      properties:
        result:
          $ref: '#/components/schemas/Dbsnapshot'
      title: UpdateDbsnapshotResponseAsObject
      type: object
    ListDeletedObjectsResponseObject:
      description: The response format to retrieve __DeletedObjects__ objects.
      properties:
        result:
          items:
            $ref: '#/components/schemas/DeletedObjects'
          type: array
      title: ListDeletedObjectsResponseObject
      type: object
    GetDeletedObjectsResponseObjectAsResult:
      additionalProperties: false
      description: The response format to retrieve __DeletedObjects__ objects.
      properties:
        result:
          $ref: '#/components/schemas/DeletedObjects'
      title: GetDeletedObjectsResponseObjectAsResult
      type: object
    UpdateDeletedObjectsResponseAsObject:
      description: The response format to update __DeletedObjects__ in object format.
      properties:
        result:
          $ref: '#/components/schemas/DeletedObjects'
      title: UpdateDeletedObjectsResponseAsObject
      type: object
    ListDxlEndpointResponseObject:
      description: The response format to retrieve __DxlEndpoint__ objects.
      properties:
        result:
          items:
            $ref: '#/components/schemas/DxlEndpoint'
          type: array
      title: ListDxlEndpointResponseObject
      type: object
    CreateDxlEndpointResponseAsObject:
      description: The response format to create __DxlEndpoint__ in object format.
      example:
        result:
          client_certificate_valid_to: 1
          brokers:
          - address: Example address
            unique_id: Example unique_id
            port: 1
            host_name: Example host_name
          - address: Example address
            unique_id: Example unique_id
            port: 1
            host_name: Example host_name
          extattrs:
            key:
              value: ""
          wapi_user_password: Example wapi_user_password
          topics:
          - topics
          - topics
          log_level: Example log_level
          brokers_import_token: Example brokers_import_token
          outbound_member_type: Example outbound_member_type
          outbound_members:
          - outbound_members
          - outbound_members
          client_certificate_subject: Example client_certificate_subject
          timeout: 1
          client_certificate_valid_from: 1
          vendor_identifier: Example vendor_identifier
          disable: false
          _ref: _ref
          client_certificate_token: Example client_certificate_token
          name: Example name
          comment: Example comment
          template_instance:
            template: Example template
            parameters:
              name: Example name
              syntax: Example syntax
              default_value: Example default_value
              value: Example value
          wapi_user_name: Example wapi_user_name
      properties:
        result:
          $ref: '#/components/schemas/DxlEndpoint'
      title: CreateDxlEndpointResponseAsObject
      type: object
    GetDxlEndpointResponseObjectAsResult:
      additionalProperties: false
      description: The response format to retrieve __DxlEndpoint__ objects.
      properties:
        result:
          $ref: '#/components/schemas/DxlEndpoint'
      title: GetDxlEndpointResponseObjectAsResult
      type: object
    UpdateDxlEndpointResponseAsObject:
      description: The response format to update __DxlEndpoint__ in object format.
      example:
        result:
          client_certificate_valid_to: 1
          brokers:
          - address: Example address
            unique_id: Example unique_id
            port: 1
            host_name: Example host_name
          - address: Example address
            unique_id: Example unique_id
            port: 1
            host_name: Example host_name
          extattrs:
            key:
              value: ""
          wapi_user_password: Example wapi_user_password
          topics:
          - topics
          - topics
          log_level: Example log_level
          brokers_import_token: Example brokers_import_token
          outbound_member_type: Example outbound_member_type
          outbound_members:
          - outbound_members
          - outbound_members
          client_certificate_subject: Example client_certificate_subject
          timeout: 1
          client_certificate_valid_from: 1
          vendor_identifier: Example vendor_identifier
          disable: false
          _ref: _ref
          client_certificate_token: Example client_certificate_token
          name: Example name
          comment: Example comment
          template_instance:
            template: Example template
            parameters:
              name: Example name
              syntax: Example syntax
              default_value: Example default_value
              value: Example value
          wapi_user_name: Example wapi_user_name
      properties:
        result:
          $ref: '#/components/schemas/DxlEndpoint'
      title: UpdateDxlEndpointResponseAsObject
      type: object
    ListFileopResponseObject:
      description: The response format to retrieve __Fileop__ objects.
      properties:
        result:
          items:
            $ref: '#/components/schemas/Fileop'
          type: array
      title: ListFileopResponseObject
      type: object
    GetFileopResponseObjectAsResult:
      additionalProperties: false
      description: The response format to retrieve __Fileop__ objects.
      properties:
        result:
          $ref: '#/components/schemas/Fileop'
      title: GetFileopResponseObjectAsResult
      type: object
    UpdateFileopResponseAsObject:
      description: The response format to update __Fileop__ in object format.
      properties:
        result:
          $ref: '#/components/schemas/Fileop'
      title: UpdateFileopResponseAsObject
      type: object
    ListKerberoskeyResponseObject:
      description: The response format to retrieve __Kerberoskey__ objects.
      properties:
        result:
          items:
            $ref: '#/components/schemas/Kerberoskey'
          type: array
      title: ListKerberoskeyResponseObject
      type: object
    GetKerberoskeyResponseObjectAsResult:
      additionalProperties: false
      description: The response format to retrieve __Kerberoskey__ objects.
      properties:
        result:
          $ref: '#/components/schemas/Kerberoskey'
      title: GetKerberoskeyResponseObjectAsResult
      type: object
    UpdateKerberoskeyResponseAsObject:
      description: The response format to update __Kerberoskey__ in object format.
      properties:
        result:
          $ref: '#/components/schemas/Kerberoskey'
      title: UpdateKerberoskeyResponseAsObject
      type: object
    ListCapacityreportResponseObject:
      description: The response format to retrieve __Capacityreport__ objects.
      properties:
        result:
          items:
            $ref: '#/components/schemas/Capacityreport'
          type: array
      title: ListCapacityreportResponseObject
      type: object
    GetCapacityreportResponseObjectAsResult:
      additionalProperties: false
      description: The response format to retrieve __Capacityreport__ objects.
      properties:
        result:
          $ref: '#/components/schemas/Capacityreport'
      title: GetCapacityreportResponseObjectAsResult
      type: object
    UpdateCapacityreportResponseAsObject:
      description: The response format to update __Capacityreport__ in object format.
      properties:
        result:
          $ref: '#/components/schemas/Capacityreport'
      title: UpdateCapacityreportResponseAsObject
      type: object
    ListOutboundCloudclientResponseObject:
      description: The response format to retrieve __OutboundCloudclient__ objects.
      properties:
        result:
          items:
            $ref: '#/components/schemas/OutboundCloudclient'
          type: array
      title: ListOutboundCloudclientResponseObject
      type: object
    GetOutboundCloudclientResponseObjectAsResult:
      additionalProperties: false
      description: The response format to retrieve __OutboundCloudclient__ objects.
      properties:
        result:
          $ref: '#/components/schemas/OutboundCloudclient'
      title: GetOutboundCloudclientResponseObjectAsResult
      type: object
    UpdateOutboundCloudclientResponseAsObject:
      description: The response format to update __OutboundCloudclient__ in object
        format.
      example:
        result:
          grid_member: Example grid_member
          enable: false
          outbound_cloud_client_events:
          - event_type: Example event_type
            enabled: false
          - event_type: Example event_type
            enabled: false
          _ref: _ref
          interval: 1
      properties:
        result:
          $ref: '#/components/schemas/OutboundCloudclient'
      title: UpdateOutboundCloudclientResponseAsObject
      type: object
    ListPxgridEndpointResponseObject:
      description: The response format to retrieve __PxgridEndpoint__ objects.
      properties:
        result:
          items:
            $ref: '#/components/schemas/PxgridEndpoint'
          type: array
      title: ListPxgridEndpointResponseObject
      type: object
    CreatePxgridEndpointResponseAsObject:
      description: The response format to create __PxgridEndpoint__ in object format.
      example:
        result:
          client_certificate_valid_to: 1
          network_view: Example network_view
          address: Example address
          extattrs:
            key:
              value: ""
          subscribe_settings:
            mapped_ea_attributes:
              mapped_ea: Example mapped_ea
              name: Example name
            enabled_attributes:
            - enabled_attributes
            - enabled_attributes
          wapi_user_password: Example wapi_user_password
          log_level: Example log_level
          outbound_member_type: Example outbound_member_type
          outbound_members:
          - outbound_members
          - outbound_members
          client_certificate_subject: Example client_certificate_subject
          publish_settings:
            enabled_attributes:
            - enabled_attributes
            - enabled_attributes
          timeout: 1
          client_certificate_valid_from: 1
          vendor_identifier: Example vendor_identifier
          disable: false
          _ref: _ref
          client_certificate_token: Example client_certificate_token
          name: Example name
          comment: Example comment
          template_instance:
            template: Example template
            parameters:
              name: Example name
              syntax: Example syntax
              default_value: Example default_value
              value: Example value
          wapi_user_name: Example wapi_user_name
      properties:
        result:
          $ref: '#/components/schemas/PxgridEndpoint'
      title: CreatePxgridEndpointResponseAsObject
      type: object
    GetPxgridEndpointResponseObjectAsResult:
      additionalProperties: false
      description: The response format to retrieve __PxgridEndpoint__ objects.
      properties:
        result:
          $ref: '#/components/schemas/PxgridEndpoint'
      title: GetPxgridEndpointResponseObjectAsResult
      type: object
    UpdatePxgridEndpointResponseAsObject:
      description: The response format to update __PxgridEndpoint__ in object format.
      example:
        result:
          client_certificate_valid_to: 1
          network_view: Example network_view
          address: Example address
          extattrs:
            key:
              value: ""
          subscribe_settings:
            mapped_ea_attributes:
              mapped_ea: Example mapped_ea
              name: Example name
            enabled_attributes:
            - enabled_attributes
            - enabled_attributes
          wapi_user_password: Example wapi_user_password
          log_level: Example log_level
          outbound_member_type: Example outbound_member_type
          outbound_members:
          - outbound_members
          - outbound_members
          client_certificate_subject: Example client_certificate_subject
          publish_settings:
            enabled_attributes:
            - enabled_attributes
            - enabled_attributes
          timeout: 1
          client_certificate_valid_from: 1
          vendor_identifier: Example vendor_identifier
          disable: false
          _ref: _ref
          client_certificate_token: Example client_certificate_token
          name: Example name
          comment: Example comment
          template_instance:
            template: Example template
            parameters:
              name: Example name
              syntax: Example syntax
              default_value: Example default_value
              value: Example value
          wapi_user_name: Example wapi_user_name
      properties:
        result:
          $ref: '#/components/schemas/PxgridEndpoint'
      title: UpdatePxgridEndpointResponseAsObject
      type: object
    ListRulesetResponseObject:
      description: The response format to retrieve __Ruleset__ objects.
      properties:
        result:
          items:
            $ref: '#/components/schemas/Ruleset'
          type: array
      title: ListRulesetResponseObject
      type: object
    CreateRulesetResponseAsObject:
      description: The response format to create __Ruleset__ in object format.
      example:
        result:
          _ref: _ref
          name: Example name
          comment: Example comment
          disabled: false
          type: Example type
          nxdomain_rules:
          - pattern: Example pattern
            action: Example action
          - pattern: Example pattern
            action: Example action
      properties:
        result:
          $ref: '#/components/schemas/Ruleset'
      title: CreateRulesetResponseAsObject
      type: object
    GetRulesetResponseObjectAsResult:
      additionalProperties: false
      description: The response format to retrieve __Ruleset__ objects.
      properties:
        result:
          $ref: '#/components/schemas/Ruleset'
      title: GetRulesetResponseObjectAsResult
      type: object
    UpdateRulesetResponseAsObject:
      description: The response format to update __Ruleset__ in object format.
      example:
        result:
          _ref: _ref
          name: Example name
          comment: Example comment
          disabled: false
          type: Example type
          nxdomain_rules:
          - pattern: Example pattern
            action: Example action
          - pattern: Example pattern
            action: Example action
      properties:
        result:
          $ref: '#/components/schemas/Ruleset'
      title: UpdateRulesetResponseAsObject
      type: object
    ListScavengingtaskResponseObject:
      description: The response format to retrieve __Scavengingtask__ objects.
      properties:
        result:
          items:
            $ref: '#/components/schemas/Scavengingtask'
          type: array
      title: ListScavengingtaskResponseObject
      type: object
    GetScavengingtaskResponseObjectAsResult:
      additionalProperties: false
      description: The response format to retrieve __Scavengingtask__ objects.
      properties:
        result:
          $ref: '#/components/schemas/Scavengingtask'
      title: GetScavengingtaskResponseObjectAsResult
      type: object
    UpdateScavengingtaskResponseAsObject:
      description: The response format to update __Scavengingtask__ in object format.
      properties:
        result:
          $ref: '#/components/schemas/Scavengingtask'
      title: UpdateScavengingtaskResponseAsObject
      type: object
    ListScheduledtaskResponseObject:
      description: The response format to retrieve __Scheduledtask__ objects.
      properties:
        result:
          items:
            $ref: '#/components/schemas/Scheduledtask'
          type: array
      title: ListScheduledtaskResponseObject
      type: object
    GetScheduledtaskResponseObjectAsResult:
      additionalProperties: false
      description: The response format to retrieve __Scheduledtask__ objects.
      properties:
        result:
          $ref: '#/components/schemas/Scheduledtask'
      title: GetScheduledtaskResponseObjectAsResult
      type: object
    UpdateScheduledtaskResponseAsObject:
      description: The response format to update __Scheduledtask__ in object format.
      example:
        result:
          approver: Example approver
          submitter: Example submitter
          changed_objects:
          - object_type: Example object_type
            name: Example name
            action: Example action
            type: Example type
            properties:
            - properties
            - properties
          - object_type: Example object_type
            name: Example name
            action: Example action
            type: Example type
            properties:
            - properties
            - properties
          execution_details_type: Example execution_details_type
          submit_time: 1
          submitter_comment: Example submitter_comment
          approval_status: Example approval_status
          execution_details:
          - execution_details
          - execution_details
          task_id: 1
          scheduled_time: 1
          ticket_number: Example ticket_number
          re_execute_task: false
          execute_now: false
          execution_time: 1
          is_network_insight_task: false
          automatic_restart: false
          predecessor_task: Example predecessor_task
          execution_status: Example execution_status
          _ref: _ref
          member: Example member
          dependent_tasks:
          - scheduledtask
          - scheduledtask
          approver_comment: Example approver_comment
          task_type: Example task_type
      properties:
        result:
          $ref: '#/components/schemas/Scheduledtask'
      title: UpdateScheduledtaskResponseAsObject
      type: object
    ListSearchResponseObject:
      description: The response format to retrieve __Search__ objects.
      properties:
        result:
          items:
            $ref: '#/components/schemas/Search'
          type: array
      title: ListSearchResponseObject
      type: object
    GetSearchResponseObjectAsResult:
      additionalProperties: false
      description: The response format to retrieve __Search__ objects.
      properties:
        result:
          $ref: '#/components/schemas/Search'
      title: GetSearchResponseObjectAsResult
      type: object
    UpdateSearchResponseAsObject:
      description: The response format to update __Search__ in object format.
      properties:
        result:
          $ref: '#/components/schemas/Search'
      title: UpdateSearchResponseAsObject
      type: object
    ListSyslogEndpointResponseObject:
      description: The response format to retrieve __SyslogEndpoint__ objects.
      properties:
        result:
          items:
            $ref: '#/components/schemas/SyslogEndpoint'
          type: array
      title: ListSyslogEndpointResponseObject
      type: object
    CreateSyslogEndpointResponseAsObject:
      description: The response format to create __SyslogEndpoint__ in object format.
      example:
        result:
          extattrs:
            key:
              value: ""
          syslog_servers:
          - severity: Example severity
            hostname: Example hostname
            address: Example address
            connection_type: Example connection_type
            port: 1
            format: Example format
            certificate: Example certificate
            certificate_token: Example certificate_token
            facility: Example facility
          - severity: Example severity
            hostname: Example hostname
            address: Example address
            connection_type: Example connection_type
            port: 1
            format: Example format
            certificate: Example certificate
            certificate_token: Example certificate_token
            facility: Example facility
          wapi_user_password: Example wapi_user_password
          vendor_identifier: Example vendor_identifier
          _ref: _ref
          log_level: Example log_level
          name: Example name
          outbound_member_type: Example outbound_member_type
          outbound_members:
          - outbound_members
          - outbound_members
          template_instance:
            template: Example template
            parameters:
              name: Example name
              syntax: Example syntax
              default_value: Example default_value
              value: Example value
          wapi_user_name: Example wapi_user_name
          timeout: 1
      properties:
        result:
          $ref: '#/components/schemas/SyslogEndpoint'
      title: CreateSyslogEndpointResponseAsObject
      type: object
    GetSyslogEndpointResponseObjectAsResult:
      additionalProperties: false
      description: The response format to retrieve __SyslogEndpoint__ objects.
      properties:
        result:
          $ref: '#/components/schemas/SyslogEndpoint'
      title: GetSyslogEndpointResponseObjectAsResult
      type: object
    UpdateSyslogEndpointResponseAsObject:
      description: The response format to update __SyslogEndpoint__ in object format.
      example:
        result:
          extattrs:
            key:
              value: ""
          syslog_servers:
          - severity: Example severity
            hostname: Example hostname
            address: Example address
            connection_type: Example connection_type
            port: 1
            format: Example format
            certificate: Example certificate
            certificate_token: Example certificate_token
            facility: Example facility
          - severity: Example severity
            hostname: Example hostname
            address: Example address
            connection_type: Example connection_type
            port: 1
            format: Example format
            certificate: Example certificate
            certificate_token: Example certificate_token
            facility: Example facility
          wapi_user_password: Example wapi_user_password
          vendor_identifier: Example vendor_identifier
          _ref: _ref
          log_level: Example log_level
          name: Example name
          outbound_member_type: Example outbound_member_type
          outbound_members:
          - outbound_members
          - outbound_members
          template_instance:
            template: Example template
            parameters:
              name: Example name
              syntax: Example syntax
              default_value: Example default_value
              value: Example value
          wapi_user_name: Example wapi_user_name
          timeout: 1
      properties:
        result:
          $ref: '#/components/schemas/SyslogEndpoint'
      title: UpdateSyslogEndpointResponseAsObject
      type: object
    ListTaxiiResponseObject:
      description: The response format to retrieve __Taxii__ objects.
      properties:
        result:
          items:
            $ref: '#/components/schemas/Taxii'
          type: array
      title: ListTaxiiResponseObject
      type: object
    GetTaxiiResponseObjectAsResult:
      additionalProperties: false
      description: The response format to retrieve __Taxii__ objects.
      properties:
        result:
          $ref: '#/components/schemas/Taxii'
      title: GetTaxiiResponseObjectAsResult
      type: object
    UpdateTaxiiResponseAsObject:
      description: The response format to update __Taxii__ in object format.
      example:
        result:
          enable_service: false
          taxii_rpz_config:
          - zone: Example zone
            collection_name: Example collection_name
          - zone: Example zone
            collection_name: Example collection_name
          _ref: _ref
          name: Example name
          ipv4addr: Example ipv4addr
          ipv6addr: Example ipv6addr
      properties:
        result:
          $ref: '#/components/schemas/Taxii'
      title: UpdateTaxiiResponseAsObject
      type: object
    ListTftpfiledirResponseObject:
      description: The response format to retrieve __Tftpfiledir__ objects.
      properties:
        result:
          items:
            $ref: '#/components/schemas/Tftpfiledir'
          type: array
      title: ListTftpfiledirResponseObject
      type: object
    CreateTftpfiledirResponseAsObject:
      description: The response format to create __Tftpfiledir__ in object format.
      example:
        result:
          vtftp_dir_members:
          - address: Example address
            start_address: Example start_address
            member: Example member
            cidr: 1
            end_address: Example end_address
            ip_type: Example ip_type
            network: Example network
          - address: Example address
            start_address: Example start_address
            member: Example member
            cidr: 1
            end_address: Example end_address
            ip_type: Example ip_type
            network: Example network
          last_modify: 1
          _ref: _ref
          name: Example name
          is_synced_to_gm: false
          type: Example type
          directory: Example directory
      properties:
        result:
          $ref: '#/components/schemas/Tftpfiledir'
      title: CreateTftpfiledirResponseAsObject
      type: object
    GetTftpfiledirResponseObjectAsResult:
      additionalProperties: false
      description: The response format to retrieve __Tftpfiledir__ objects.
      properties:
        result:
          $ref: '#/components/schemas/Tftpfiledir'
      title: GetTftpfiledirResponseObjectAsResult
      type: object
    UpdateTftpfiledirResponseAsObject:
      description: The response format to update __Tftpfiledir__ in object format.
      example:
        result:
          vtftp_dir_members:
          - address: Example address
            start_address: Example start_address
            member: Example member
            cidr: 1
            end_address: Example end_address
            ip_type: Example ip_type
            network: Example network
          - address: Example address
            start_address: Example start_address
            member: Example member
            cidr: 1
            end_address: Example end_address
            ip_type: Example ip_type
            network: Example network
          last_modify: 1
          _ref: _ref
          name: Example name
          is_synced_to_gm: false
          type: Example type
          directory: Example directory
      properties:
        result:
          $ref: '#/components/schemas/Tftpfiledir'
      title: UpdateTftpfiledirResponseAsObject
      type: object
  securitySchemes:
    basicAuth:
      scheme: basic
      type: http
