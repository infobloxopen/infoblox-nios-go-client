/*
Infoblox PARENTALCONTROL API

OpenAPI specification for Infoblox NIOS WAPI PARENTALCONTROL objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package parentalcontrol

import (
	"bytes"
	"context"
	"io"
	"net/http"
	"net/url"
	"strings"

	"github.com/Infoblox-CTO/infoblox-nios-go-client/internal"
)

type ParentalcontrolSubscriberAPI interface {
	/*
		ParentalcontrolsubscriberGet Retrieve parentalcontrol:subscriber objects

		Returns a list of parentalcontrol:subscriber objects matching the search criteria

		@param ctx context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
		@return ParentalcontrolSubscriberAPIParentalcontrolsubscriberGetRequest
	*/
	ParentalcontrolsubscriberGet(ctx context.Context) ParentalcontrolSubscriberAPIParentalcontrolsubscriberGetRequest

	// ParentalcontrolsubscriberGetExecute executes the request
	//  @return ListParentalcontrolSubscriberResponse
	ParentalcontrolsubscriberGetExecute(r ParentalcontrolSubscriberAPIParentalcontrolsubscriberGetRequest) (*ListParentalcontrolSubscriberResponse, *http.Response, error)
	/*
		ParentalcontrolsubscriberReferenceGet Get a specific parentalcontrol:subscriber object

		Returns a specific parentalcontrol:subscriber object by reference

		@param ctx context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
		@param reference Reference of the parentalcontrol:subscriber object
		@return ParentalcontrolSubscriberAPIParentalcontrolsubscriberReferenceGetRequest
	*/
	ParentalcontrolsubscriberReferenceGet(ctx context.Context, reference string) ParentalcontrolSubscriberAPIParentalcontrolsubscriberReferenceGetRequest

	// ParentalcontrolsubscriberReferenceGetExecute executes the request
	//  @return GetParentalcontrolSubscriberResponse
	ParentalcontrolsubscriberReferenceGetExecute(r ParentalcontrolSubscriberAPIParentalcontrolsubscriberReferenceGetRequest) (*GetParentalcontrolSubscriberResponse, *http.Response, error)
	/*
		ParentalcontrolsubscriberReferencePut Update a parentalcontrol:subscriber object

		Updates a specific parentalcontrol:subscriber object by reference

		@param ctx context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
		@param reference Reference of the parentalcontrol:subscriber object
		@return ParentalcontrolSubscriberAPIParentalcontrolsubscriberReferencePutRequest
	*/
	ParentalcontrolsubscriberReferencePut(ctx context.Context, reference string) ParentalcontrolSubscriberAPIParentalcontrolsubscriberReferencePutRequest

	// ParentalcontrolsubscriberReferencePutExecute executes the request
	//  @return UpdateParentalcontrolSubscriberResponse
	ParentalcontrolsubscriberReferencePutExecute(r ParentalcontrolSubscriberAPIParentalcontrolsubscriberReferencePutRequest) (*UpdateParentalcontrolSubscriberResponse, *http.Response, error)
}

// ParentalcontrolSubscriberAPIService ParentalcontrolSubscriberAPI service
type ParentalcontrolSubscriberAPIService internal.Service

type ParentalcontrolSubscriberAPIParentalcontrolsubscriberGetRequest struct {
	ctx            context.Context
	ApiService     ParentalcontrolSubscriberAPI
	returnFields   *string
	returnFields2  *string
	maxResults     *int32
	returnAsObject *int32
	paging         *int32
	pageId         *string
	filters        *map[string]interface{}
	extattrfilter  *map[string]interface{}
}

// Enter the field names followed by comma
func (r ParentalcontrolSubscriberAPIParentalcontrolsubscriberGetRequest) ReturnFields(returnFields string) ParentalcontrolSubscriberAPIParentalcontrolsubscriberGetRequest {
	r.returnFields = &returnFields
	return r
}

// Enter the field names followed by comma, this returns the required fields along with the default fields
func (r ParentalcontrolSubscriberAPIParentalcontrolsubscriberGetRequest) ReturnFields2(returnFields2 string) ParentalcontrolSubscriberAPIParentalcontrolsubscriberGetRequest {
	r.returnFields2 = &returnFields2
	return r
}

// Enter the number of results to be fetched
func (r ParentalcontrolSubscriberAPIParentalcontrolsubscriberGetRequest) MaxResults(maxResults int32) ParentalcontrolSubscriberAPIParentalcontrolsubscriberGetRequest {
	r.maxResults = &maxResults
	return r
}

// Select 1 if result is required as an object
func (r ParentalcontrolSubscriberAPIParentalcontrolsubscriberGetRequest) ReturnAsObject(returnAsObject int32) ParentalcontrolSubscriberAPIParentalcontrolsubscriberGetRequest {
	r.returnAsObject = &returnAsObject
	return r
}

// Control paging of results
func (r ParentalcontrolSubscriberAPIParentalcontrolsubscriberGetRequest) Paging(paging int32) ParentalcontrolSubscriberAPIParentalcontrolsubscriberGetRequest {
	r.paging = &paging
	return r
}

// Page id for retrieving next page of results
func (r ParentalcontrolSubscriberAPIParentalcontrolsubscriberGetRequest) PageId(pageId string) ParentalcontrolSubscriberAPIParentalcontrolsubscriberGetRequest {
	r.pageId = &pageId
	return r
}

func (r ParentalcontrolSubscriberAPIParentalcontrolsubscriberGetRequest) Filters(filters map[string]interface{}) ParentalcontrolSubscriberAPIParentalcontrolsubscriberGetRequest {
	r.filters = &filters
	return r
}

func (r ParentalcontrolSubscriberAPIParentalcontrolsubscriberGetRequest) Extattrfilter(extattrfilter map[string]interface{}) ParentalcontrolSubscriberAPIParentalcontrolsubscriberGetRequest {
	r.extattrfilter = &extattrfilter
	return r
}

func (r ParentalcontrolSubscriberAPIParentalcontrolsubscriberGetRequest) Execute() (*ListParentalcontrolSubscriberResponse, *http.Response, error) {
	return r.ApiService.ParentalcontrolsubscriberGetExecute(r)
}

/*
ParentalcontrolsubscriberGet Retrieve parentalcontrol:subscriber objects

Returns a list of parentalcontrol:subscriber objects matching the search criteria

	@param ctx context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
	@return ParentalcontrolSubscriberAPIParentalcontrolsubscriberGetRequest
*/
func (a *ParentalcontrolSubscriberAPIService) ParentalcontrolsubscriberGet(ctx context.Context) ParentalcontrolSubscriberAPIParentalcontrolsubscriberGetRequest {
	return ParentalcontrolSubscriberAPIParentalcontrolsubscriberGetRequest{
		ApiService: a,
		ctx:        ctx,
	}
}

// Execute executes the request
//
//	@return ListParentalcontrolSubscriberResponse
func (a *ParentalcontrolSubscriberAPIService) ParentalcontrolsubscriberGetExecute(r ParentalcontrolSubscriberAPIParentalcontrolsubscriberGetRequest) (*ListParentalcontrolSubscriberResponse, *http.Response, error) {
	var (
		localVarHTTPMethod  = http.MethodGet
		localVarPostBody    interface{}
		formFiles           []internal.FormFile
		localVarReturnValue *ListParentalcontrolSubscriberResponse
	)

	localBasePath, err := a.Client.Cfg.ServerURLWithContext(r.ctx, "ParentalcontrolSubscriberAPIService.ParentalcontrolsubscriberGet")
	if err != nil {
		return localVarReturnValue, nil, internal.NewGenericOpenAPIError(err.Error())
	}

	localVarPath := localBasePath + "/parentalcontrol:subscriber"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := url.Values{}
	localVarFormParams := url.Values{}

	if r.returnFields != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_return_fields", r.returnFields, "form", "")
	}
	if r.returnFields2 != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_return_fields+", r.returnFields2, "form", "")
	}
	if r.maxResults != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_max_results", r.maxResults, "form", "")
	}
	if r.returnAsObject != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_return_as_object", r.returnAsObject, "form", "")
	}
	if r.paging != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_paging", r.paging, "form", "")
	}
	if r.pageId != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_page_id", r.pageId, "form", "")
	}
	if r.filters != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "filters", r.filters, "form", "")
	}
	if r.extattrfilter != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "extattrfilter", r.extattrfilter, "form", "")
	}
	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{}

	// set Content-Type header
	localVarHTTPContentType := internal.SelectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := internal.SelectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	req, err := a.Client.PrepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, formFiles)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.Client.CallAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := io.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	localVarHTTPResponse.Body = io.NopCloser(bytes.NewBuffer(localVarBody))
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := internal.NewGenericOpenAPIErrorWithBody(localVarHTTPResponse.Status, localVarBody)
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.Client.Decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := internal.NewGenericOpenAPIErrorWithBody(err.Error(), localVarBody)
		return localVarReturnValue, localVarHTTPResponse, newErr
	}
	return localVarReturnValue, localVarHTTPResponse, nil
}

type ParentalcontrolSubscriberAPIParentalcontrolsubscriberReferenceGetRequest struct {
	ctx            context.Context
	ApiService     ParentalcontrolSubscriberAPI
	reference      string
	returnFields   *string
	returnFields2  *string
	returnAsObject *int32
}

// Enter the field names followed by comma
func (r ParentalcontrolSubscriberAPIParentalcontrolsubscriberReferenceGetRequest) ReturnFields(returnFields string) ParentalcontrolSubscriberAPIParentalcontrolsubscriberReferenceGetRequest {
	r.returnFields = &returnFields
	return r
}

// Enter the field names followed by comma, this returns the required fields along with the default fields
func (r ParentalcontrolSubscriberAPIParentalcontrolsubscriberReferenceGetRequest) ReturnFields2(returnFields2 string) ParentalcontrolSubscriberAPIParentalcontrolsubscriberReferenceGetRequest {
	r.returnFields2 = &returnFields2
	return r
}

// Select 1 if result is required as an object
func (r ParentalcontrolSubscriberAPIParentalcontrolsubscriberReferenceGetRequest) ReturnAsObject(returnAsObject int32) ParentalcontrolSubscriberAPIParentalcontrolsubscriberReferenceGetRequest {
	r.returnAsObject = &returnAsObject
	return r
}

func (r ParentalcontrolSubscriberAPIParentalcontrolsubscriberReferenceGetRequest) Execute() (*GetParentalcontrolSubscriberResponse, *http.Response, error) {
	return r.ApiService.ParentalcontrolsubscriberReferenceGetExecute(r)
}

/*
ParentalcontrolsubscriberReferenceGet Get a specific parentalcontrol:subscriber object

Returns a specific parentalcontrol:subscriber object by reference

	@param ctx context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
	@param reference Reference of the parentalcontrol:subscriber object
	@return ParentalcontrolSubscriberAPIParentalcontrolsubscriberReferenceGetRequest
*/
func (a *ParentalcontrolSubscriberAPIService) ParentalcontrolsubscriberReferenceGet(ctx context.Context, reference string) ParentalcontrolSubscriberAPIParentalcontrolsubscriberReferenceGetRequest {
	return ParentalcontrolSubscriberAPIParentalcontrolsubscriberReferenceGetRequest{
		ApiService: a,
		ctx:        ctx,
		reference:  reference,
	}
}

// Execute executes the request
//
//	@return GetParentalcontrolSubscriberResponse
func (a *ParentalcontrolSubscriberAPIService) ParentalcontrolsubscriberReferenceGetExecute(r ParentalcontrolSubscriberAPIParentalcontrolsubscriberReferenceGetRequest) (*GetParentalcontrolSubscriberResponse, *http.Response, error) {
	var (
		localVarHTTPMethod  = http.MethodGet
		localVarPostBody    interface{}
		formFiles           []internal.FormFile
		localVarReturnValue *GetParentalcontrolSubscriberResponse
	)

	localBasePath, err := a.Client.Cfg.ServerURLWithContext(r.ctx, "ParentalcontrolSubscriberAPIService.ParentalcontrolsubscriberReferenceGet")
	if err != nil {
		return localVarReturnValue, nil, internal.NewGenericOpenAPIError(err.Error())
	}

	localVarPath := localBasePath + "/parentalcontrol:subscriber/{reference}"
	localVarPath = strings.Replace(localVarPath, "{"+"reference"+"}", url.PathEscape(internal.ParameterValueToString(r.reference, "reference")), -1)

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := url.Values{}
	localVarFormParams := url.Values{}

	if r.returnFields != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_return_fields", r.returnFields, "form", "")
	}
	if r.returnFields2 != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_return_fields+", r.returnFields2, "form", "")
	}
	if r.returnAsObject != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_return_as_object", r.returnAsObject, "form", "")
	}
	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{}

	// set Content-Type header
	localVarHTTPContentType := internal.SelectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := internal.SelectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	req, err := a.Client.PrepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, formFiles)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.Client.CallAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := io.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	localVarHTTPResponse.Body = io.NopCloser(bytes.NewBuffer(localVarBody))
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := internal.NewGenericOpenAPIErrorWithBody(localVarHTTPResponse.Status, localVarBody)
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.Client.Decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := internal.NewGenericOpenAPIErrorWithBody(err.Error(), localVarBody)
		return localVarReturnValue, localVarHTTPResponse, newErr
	}
	return localVarReturnValue, localVarHTTPResponse, nil
}

type ParentalcontrolSubscriberAPIParentalcontrolsubscriberReferencePutRequest struct {
	ctx                       context.Context
	ApiService                ParentalcontrolSubscriberAPI
	reference                 string
	parentalcontrolSubscriber *ParentalcontrolSubscriber
	returnFields              *string
	returnFields2             *string
	returnAsObject            *int32
}

// Object data to update
func (r ParentalcontrolSubscriberAPIParentalcontrolsubscriberReferencePutRequest) ParentalcontrolSubscriber(parentalcontrolSubscriber ParentalcontrolSubscriber) ParentalcontrolSubscriberAPIParentalcontrolsubscriberReferencePutRequest {
	r.parentalcontrolSubscriber = &parentalcontrolSubscriber
	return r
}

// Enter the field names followed by comma
func (r ParentalcontrolSubscriberAPIParentalcontrolsubscriberReferencePutRequest) ReturnFields(returnFields string) ParentalcontrolSubscriberAPIParentalcontrolsubscriberReferencePutRequest {
	r.returnFields = &returnFields
	return r
}

// Enter the field names followed by comma, this returns the required fields along with the default fields
func (r ParentalcontrolSubscriberAPIParentalcontrolsubscriberReferencePutRequest) ReturnFields2(returnFields2 string) ParentalcontrolSubscriberAPIParentalcontrolsubscriberReferencePutRequest {
	r.returnFields2 = &returnFields2
	return r
}

// Select 1 if result is required as an object
func (r ParentalcontrolSubscriberAPIParentalcontrolsubscriberReferencePutRequest) ReturnAsObject(returnAsObject int32) ParentalcontrolSubscriberAPIParentalcontrolsubscriberReferencePutRequest {
	r.returnAsObject = &returnAsObject
	return r
}

func (r ParentalcontrolSubscriberAPIParentalcontrolsubscriberReferencePutRequest) Execute() (*UpdateParentalcontrolSubscriberResponse, *http.Response, error) {
	return r.ApiService.ParentalcontrolsubscriberReferencePutExecute(r)
}

/*
ParentalcontrolsubscriberReferencePut Update a parentalcontrol:subscriber object

Updates a specific parentalcontrol:subscriber object by reference

	@param ctx context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
	@param reference Reference of the parentalcontrol:subscriber object
	@return ParentalcontrolSubscriberAPIParentalcontrolsubscriberReferencePutRequest
*/
func (a *ParentalcontrolSubscriberAPIService) ParentalcontrolsubscriberReferencePut(ctx context.Context, reference string) ParentalcontrolSubscriberAPIParentalcontrolsubscriberReferencePutRequest {
	return ParentalcontrolSubscriberAPIParentalcontrolsubscriberReferencePutRequest{
		ApiService: a,
		ctx:        ctx,
		reference:  reference,
	}
}

// Execute executes the request
//
//	@return UpdateParentalcontrolSubscriberResponse
func (a *ParentalcontrolSubscriberAPIService) ParentalcontrolsubscriberReferencePutExecute(r ParentalcontrolSubscriberAPIParentalcontrolsubscriberReferencePutRequest) (*UpdateParentalcontrolSubscriberResponse, *http.Response, error) {
	var (
		localVarHTTPMethod  = http.MethodPut
		localVarPostBody    interface{}
		formFiles           []internal.FormFile
		localVarReturnValue *UpdateParentalcontrolSubscriberResponse
	)

	localBasePath, err := a.Client.Cfg.ServerURLWithContext(r.ctx, "ParentalcontrolSubscriberAPIService.ParentalcontrolsubscriberReferencePut")
	if err != nil {
		return localVarReturnValue, nil, internal.NewGenericOpenAPIError(err.Error())
	}

	localVarPath := localBasePath + "/parentalcontrol:subscriber/{reference}"
	localVarPath = strings.Replace(localVarPath, "{"+"reference"+"}", url.PathEscape(internal.ParameterValueToString(r.reference, "reference")), -1)

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := url.Values{}
	localVarFormParams := url.Values{}
	if r.parentalcontrolSubscriber == nil {
		return localVarReturnValue, nil, internal.ReportError("parentalcontrolSubscriber is required and must be specified")
	}

	if r.returnFields != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_return_fields", r.returnFields, "form", "")
	}
	if r.returnFields2 != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_return_fields+", r.returnFields2, "form", "")
	}
	if r.returnAsObject != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_return_as_object", r.returnAsObject, "form", "")
	}
	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := internal.SelectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := internal.SelectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	// body params
	localVarPostBody = r.parentalcontrolSubscriber
	req, err := a.Client.PrepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, formFiles)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.Client.CallAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := io.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	localVarHTTPResponse.Body = io.NopCloser(bytes.NewBuffer(localVarBody))
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := internal.NewGenericOpenAPIErrorWithBody(localVarHTTPResponse.Status, localVarBody)
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.Client.Decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := internal.NewGenericOpenAPIErrorWithBody(err.Error(), localVarBody)
		return localVarReturnValue, localVarHTTPResponse, newErr
	}
	return localVarReturnValue, localVarHTTPResponse, nil
}
