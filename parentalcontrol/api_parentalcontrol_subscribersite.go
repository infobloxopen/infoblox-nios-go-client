/*
Infoblox PARENTALCONTROL API

OpenAPI specification for Infoblox NIOS WAPI PARENTALCONTROL objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package parentalcontrol

import (
	"bytes"
	"context"
	"io"
	"net/http"
	"net/url"
	"strings"

	"github.com/Infoblox-CTO/infoblox-nios-go-client/internal"
)

type ParentalcontrolSubscribersiteAPI interface {
	/*
		ParentalcontrolsubscribersiteGet Retrieve parentalcontrol:subscribersite objects

		Returns a list of parentalcontrol:subscribersite objects matching the search criteria

		@param ctx context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
		@return ParentalcontrolSubscribersiteAPIParentalcontrolsubscribersiteGetRequest
	*/
	ParentalcontrolsubscribersiteGet(ctx context.Context) ParentalcontrolSubscribersiteAPIParentalcontrolsubscribersiteGetRequest

	// ParentalcontrolsubscribersiteGetExecute executes the request
	//  @return ListParentalcontrolSubscribersiteResponse
	ParentalcontrolsubscribersiteGetExecute(r ParentalcontrolSubscribersiteAPIParentalcontrolsubscribersiteGetRequest) (*ListParentalcontrolSubscribersiteResponse, *http.Response, error)
	/*
		ParentalcontrolsubscribersitePost Create a parentalcontrol:subscribersite object

		Creates a new parentalcontrol:subscribersite object

		@param ctx context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
		@return ParentalcontrolSubscribersiteAPIParentalcontrolsubscribersitePostRequest
	*/
	ParentalcontrolsubscribersitePost(ctx context.Context) ParentalcontrolSubscribersiteAPIParentalcontrolsubscribersitePostRequest

	// ParentalcontrolsubscribersitePostExecute executes the request
	//  @return CreateParentalcontrolSubscribersiteResponse
	ParentalcontrolsubscribersitePostExecute(r ParentalcontrolSubscribersiteAPIParentalcontrolsubscribersitePostRequest) (*CreateParentalcontrolSubscribersiteResponse, *http.Response, error)
	/*
		ParentalcontrolsubscribersiteReferenceDelete Delete a parentalcontrol:subscribersite object

		Deletes a specific parentalcontrol:subscribersite object by reference

		@param ctx context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
		@param reference Reference of the parentalcontrol:subscribersite object
		@return ParentalcontrolSubscribersiteAPIParentalcontrolsubscribersiteReferenceDeleteRequest
	*/
	ParentalcontrolsubscribersiteReferenceDelete(ctx context.Context, reference string) ParentalcontrolSubscribersiteAPIParentalcontrolsubscribersiteReferenceDeleteRequest

	// ParentalcontrolsubscribersiteReferenceDeleteExecute executes the request
	ParentalcontrolsubscribersiteReferenceDeleteExecute(r ParentalcontrolSubscribersiteAPIParentalcontrolsubscribersiteReferenceDeleteRequest) (*http.Response, error)
	/*
		ParentalcontrolsubscribersiteReferenceGet Get a specific parentalcontrol:subscribersite object

		Returns a specific parentalcontrol:subscribersite object by reference

		@param ctx context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
		@param reference Reference of the parentalcontrol:subscribersite object
		@return ParentalcontrolSubscribersiteAPIParentalcontrolsubscribersiteReferenceGetRequest
	*/
	ParentalcontrolsubscribersiteReferenceGet(ctx context.Context, reference string) ParentalcontrolSubscribersiteAPIParentalcontrolsubscribersiteReferenceGetRequest

	// ParentalcontrolsubscribersiteReferenceGetExecute executes the request
	//  @return GetParentalcontrolSubscribersiteResponse
	ParentalcontrolsubscribersiteReferenceGetExecute(r ParentalcontrolSubscribersiteAPIParentalcontrolsubscribersiteReferenceGetRequest) (*GetParentalcontrolSubscribersiteResponse, *http.Response, error)
	/*
		ParentalcontrolsubscribersiteReferencePut Update a parentalcontrol:subscribersite object

		Updates a specific parentalcontrol:subscribersite object by reference

		@param ctx context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
		@param reference Reference of the parentalcontrol:subscribersite object
		@return ParentalcontrolSubscribersiteAPIParentalcontrolsubscribersiteReferencePutRequest
	*/
	ParentalcontrolsubscribersiteReferencePut(ctx context.Context, reference string) ParentalcontrolSubscribersiteAPIParentalcontrolsubscribersiteReferencePutRequest

	// ParentalcontrolsubscribersiteReferencePutExecute executes the request
	//  @return UpdateParentalcontrolSubscribersiteResponse
	ParentalcontrolsubscribersiteReferencePutExecute(r ParentalcontrolSubscribersiteAPIParentalcontrolsubscribersiteReferencePutRequest) (*UpdateParentalcontrolSubscribersiteResponse, *http.Response, error)
}

// ParentalcontrolSubscribersiteAPIService ParentalcontrolSubscribersiteAPI service
type ParentalcontrolSubscribersiteAPIService internal.Service

type ParentalcontrolSubscribersiteAPIParentalcontrolsubscribersiteGetRequest struct {
	ctx            context.Context
	ApiService     ParentalcontrolSubscribersiteAPI
	returnFields   *string
	returnFields2  *string
	maxResults     *int32
	returnAsObject *int32
	paging         *int32
	pageId         *string
	filters        *map[string]interface{}
	extattrfilter  *map[string]interface{}
}

// Enter the field names followed by comma
func (r ParentalcontrolSubscribersiteAPIParentalcontrolsubscribersiteGetRequest) ReturnFields(returnFields string) ParentalcontrolSubscribersiteAPIParentalcontrolsubscribersiteGetRequest {
	r.returnFields = &returnFields
	return r
}

// Enter the field names followed by comma, this returns the required fields along with the default fields
func (r ParentalcontrolSubscribersiteAPIParentalcontrolsubscribersiteGetRequest) ReturnFields2(returnFields2 string) ParentalcontrolSubscribersiteAPIParentalcontrolsubscribersiteGetRequest {
	r.returnFields2 = &returnFields2
	return r
}

// Enter the number of results to be fetched
func (r ParentalcontrolSubscribersiteAPIParentalcontrolsubscribersiteGetRequest) MaxResults(maxResults int32) ParentalcontrolSubscribersiteAPIParentalcontrolsubscribersiteGetRequest {
	r.maxResults = &maxResults
	return r
}

// Select 1 if result is required as an object
func (r ParentalcontrolSubscribersiteAPIParentalcontrolsubscribersiteGetRequest) ReturnAsObject(returnAsObject int32) ParentalcontrolSubscribersiteAPIParentalcontrolsubscribersiteGetRequest {
	r.returnAsObject = &returnAsObject
	return r
}

// Control paging of results
func (r ParentalcontrolSubscribersiteAPIParentalcontrolsubscribersiteGetRequest) Paging(paging int32) ParentalcontrolSubscribersiteAPIParentalcontrolsubscribersiteGetRequest {
	r.paging = &paging
	return r
}

// Page id for retrieving next page of results
func (r ParentalcontrolSubscribersiteAPIParentalcontrolsubscribersiteGetRequest) PageId(pageId string) ParentalcontrolSubscribersiteAPIParentalcontrolsubscribersiteGetRequest {
	r.pageId = &pageId
	return r
}

func (r ParentalcontrolSubscribersiteAPIParentalcontrolsubscribersiteGetRequest) Filters(filters map[string]interface{}) ParentalcontrolSubscribersiteAPIParentalcontrolsubscribersiteGetRequest {
	r.filters = &filters
	return r
}

func (r ParentalcontrolSubscribersiteAPIParentalcontrolsubscribersiteGetRequest) Extattrfilter(extattrfilter map[string]interface{}) ParentalcontrolSubscribersiteAPIParentalcontrolsubscribersiteGetRequest {
	r.extattrfilter = &extattrfilter
	return r
}

func (r ParentalcontrolSubscribersiteAPIParentalcontrolsubscribersiteGetRequest) Execute() (*ListParentalcontrolSubscribersiteResponse, *http.Response, error) {
	return r.ApiService.ParentalcontrolsubscribersiteGetExecute(r)
}

/*
ParentalcontrolsubscribersiteGet Retrieve parentalcontrol:subscribersite objects

Returns a list of parentalcontrol:subscribersite objects matching the search criteria

	@param ctx context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
	@return ParentalcontrolSubscribersiteAPIParentalcontrolsubscribersiteGetRequest
*/
func (a *ParentalcontrolSubscribersiteAPIService) ParentalcontrolsubscribersiteGet(ctx context.Context) ParentalcontrolSubscribersiteAPIParentalcontrolsubscribersiteGetRequest {
	return ParentalcontrolSubscribersiteAPIParentalcontrolsubscribersiteGetRequest{
		ApiService: a,
		ctx:        ctx,
	}
}

// Execute executes the request
//
//	@return ListParentalcontrolSubscribersiteResponse
func (a *ParentalcontrolSubscribersiteAPIService) ParentalcontrolsubscribersiteGetExecute(r ParentalcontrolSubscribersiteAPIParentalcontrolsubscribersiteGetRequest) (*ListParentalcontrolSubscribersiteResponse, *http.Response, error) {
	var (
		localVarHTTPMethod  = http.MethodGet
		localVarPostBody    interface{}
		formFiles           []internal.FormFile
		localVarReturnValue *ListParentalcontrolSubscribersiteResponse
	)

	localBasePath, err := a.Client.Cfg.ServerURLWithContext(r.ctx, "ParentalcontrolSubscribersiteAPIService.ParentalcontrolsubscribersiteGet")
	if err != nil {
		return localVarReturnValue, nil, internal.NewGenericOpenAPIError(err.Error())
	}

	localVarPath := localBasePath + "/parentalcontrol:subscribersite"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := url.Values{}
	localVarFormParams := url.Values{}

	if r.returnFields != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_return_fields", r.returnFields, "form", "")
	}
	if r.returnFields2 != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_return_fields+", r.returnFields2, "form", "")
	}
	if r.maxResults != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_max_results", r.maxResults, "form", "")
	}
	if r.returnAsObject != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_return_as_object", r.returnAsObject, "form", "")
	}
	if r.paging != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_paging", r.paging, "form", "")
	}
	if r.pageId != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_page_id", r.pageId, "form", "")
	}
	if r.filters != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "filters", r.filters, "form", "")
	}
	if r.extattrfilter != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "extattrfilter", r.extattrfilter, "form", "")
	}
	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{}

	// set Content-Type header
	localVarHTTPContentType := internal.SelectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := internal.SelectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	req, err := a.Client.PrepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, formFiles)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.Client.CallAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := io.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	localVarHTTPResponse.Body = io.NopCloser(bytes.NewBuffer(localVarBody))
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := internal.NewGenericOpenAPIErrorWithBody(localVarHTTPResponse.Status, localVarBody)
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.Client.Decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := internal.NewGenericOpenAPIErrorWithBody(err.Error(), localVarBody)
		return localVarReturnValue, localVarHTTPResponse, newErr
	}
	return localVarReturnValue, localVarHTTPResponse, nil
}

type ParentalcontrolSubscribersiteAPIParentalcontrolsubscribersitePostRequest struct {
	ctx                           context.Context
	ApiService                    ParentalcontrolSubscribersiteAPI
	parentalcontrolSubscribersite *ParentalcontrolSubscribersite
	returnFields                  *string
	returnFields2                 *string
	returnAsObject                *int32
}

// Object data to create
func (r ParentalcontrolSubscribersiteAPIParentalcontrolsubscribersitePostRequest) ParentalcontrolSubscribersite(parentalcontrolSubscribersite ParentalcontrolSubscribersite) ParentalcontrolSubscribersiteAPIParentalcontrolsubscribersitePostRequest {
	r.parentalcontrolSubscribersite = &parentalcontrolSubscribersite
	return r
}

// Enter the field names followed by comma
func (r ParentalcontrolSubscribersiteAPIParentalcontrolsubscribersitePostRequest) ReturnFields(returnFields string) ParentalcontrolSubscribersiteAPIParentalcontrolsubscribersitePostRequest {
	r.returnFields = &returnFields
	return r
}

// Enter the field names followed by comma, this returns the required fields along with the default fields
func (r ParentalcontrolSubscribersiteAPIParentalcontrolsubscribersitePostRequest) ReturnFields2(returnFields2 string) ParentalcontrolSubscribersiteAPIParentalcontrolsubscribersitePostRequest {
	r.returnFields2 = &returnFields2
	return r
}

// Select 1 if result is required as an object
func (r ParentalcontrolSubscribersiteAPIParentalcontrolsubscribersitePostRequest) ReturnAsObject(returnAsObject int32) ParentalcontrolSubscribersiteAPIParentalcontrolsubscribersitePostRequest {
	r.returnAsObject = &returnAsObject
	return r
}

func (r ParentalcontrolSubscribersiteAPIParentalcontrolsubscribersitePostRequest) Execute() (*CreateParentalcontrolSubscribersiteResponse, *http.Response, error) {
	return r.ApiService.ParentalcontrolsubscribersitePostExecute(r)
}

/*
ParentalcontrolsubscribersitePost Create a parentalcontrol:subscribersite object

Creates a new parentalcontrol:subscribersite object

	@param ctx context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
	@return ParentalcontrolSubscribersiteAPIParentalcontrolsubscribersitePostRequest
*/
func (a *ParentalcontrolSubscribersiteAPIService) ParentalcontrolsubscribersitePost(ctx context.Context) ParentalcontrolSubscribersiteAPIParentalcontrolsubscribersitePostRequest {
	return ParentalcontrolSubscribersiteAPIParentalcontrolsubscribersitePostRequest{
		ApiService: a,
		ctx:        ctx,
	}
}

// Execute executes the request
//
//	@return CreateParentalcontrolSubscribersiteResponse
func (a *ParentalcontrolSubscribersiteAPIService) ParentalcontrolsubscribersitePostExecute(r ParentalcontrolSubscribersiteAPIParentalcontrolsubscribersitePostRequest) (*CreateParentalcontrolSubscribersiteResponse, *http.Response, error) {
	var (
		localVarHTTPMethod  = http.MethodPost
		localVarPostBody    interface{}
		formFiles           []internal.FormFile
		localVarReturnValue *CreateParentalcontrolSubscribersiteResponse
	)

	localBasePath, err := a.Client.Cfg.ServerURLWithContext(r.ctx, "ParentalcontrolSubscribersiteAPIService.ParentalcontrolsubscribersitePost")
	if err != nil {
		return localVarReturnValue, nil, internal.NewGenericOpenAPIError(err.Error())
	}

	localVarPath := localBasePath + "/parentalcontrol:subscribersite"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := url.Values{}
	localVarFormParams := url.Values{}
	if r.parentalcontrolSubscribersite == nil {
		return localVarReturnValue, nil, internal.ReportError("parentalcontrolSubscribersite is required and must be specified")
	}

	if r.returnFields != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_return_fields", r.returnFields, "form", "")
	}
	if r.returnFields2 != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_return_fields+", r.returnFields2, "form", "")
	}
	if r.returnAsObject != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_return_as_object", r.returnAsObject, "form", "")
	}
	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := internal.SelectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := internal.SelectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	if len(a.Client.Cfg.DefaultExtAttrs) > 0 && r.parentalcontrolSubscribersite != nil {
		if r.parentalcontrolSubscribersite.Extattrs == nil {
			r.parentalcontrolSubscribersite.Extattrs = &map[string]ExtAttrs{}
		}
		for k, v := range a.Client.Cfg.DefaultExtAttrs {
			if _, ok := (*r.parentalcontrolSubscribersite.Extattrs)[k]; !ok {
				(*r.parentalcontrolSubscribersite.Extattrs)[k] = ExtAttrs{
					Value: v.Value,
				}
			}
		}
	}
	// body params
	localVarPostBody = r.parentalcontrolSubscribersite
	req, err := a.Client.PrepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, formFiles)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.Client.CallAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := io.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	localVarHTTPResponse.Body = io.NopCloser(bytes.NewBuffer(localVarBody))
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := internal.NewGenericOpenAPIErrorWithBody(localVarHTTPResponse.Status, localVarBody)
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.Client.Decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := internal.NewGenericOpenAPIErrorWithBody(err.Error(), localVarBody)
		return localVarReturnValue, localVarHTTPResponse, newErr
	}
	return localVarReturnValue, localVarHTTPResponse, nil
}

type ParentalcontrolSubscribersiteAPIParentalcontrolsubscribersiteReferenceDeleteRequest struct {
	ctx        context.Context
	ApiService ParentalcontrolSubscribersiteAPI
	reference  string
}

func (r ParentalcontrolSubscribersiteAPIParentalcontrolsubscribersiteReferenceDeleteRequest) Execute() (*http.Response, error) {
	return r.ApiService.ParentalcontrolsubscribersiteReferenceDeleteExecute(r)
}

/*
ParentalcontrolsubscribersiteReferenceDelete Delete a parentalcontrol:subscribersite object

Deletes a specific parentalcontrol:subscribersite object by reference

	@param ctx context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
	@param reference Reference of the parentalcontrol:subscribersite object
	@return ParentalcontrolSubscribersiteAPIParentalcontrolsubscribersiteReferenceDeleteRequest
*/
func (a *ParentalcontrolSubscribersiteAPIService) ParentalcontrolsubscribersiteReferenceDelete(ctx context.Context, reference string) ParentalcontrolSubscribersiteAPIParentalcontrolsubscribersiteReferenceDeleteRequest {
	return ParentalcontrolSubscribersiteAPIParentalcontrolsubscribersiteReferenceDeleteRequest{
		ApiService: a,
		ctx:        ctx,
		reference:  reference,
	}
}

// Execute executes the request
func (a *ParentalcontrolSubscribersiteAPIService) ParentalcontrolsubscribersiteReferenceDeleteExecute(r ParentalcontrolSubscribersiteAPIParentalcontrolsubscribersiteReferenceDeleteRequest) (*http.Response, error) {
	var (
		localVarHTTPMethod = http.MethodDelete
		localVarPostBody   interface{}
		formFiles          []internal.FormFile
	)

	localBasePath, err := a.Client.Cfg.ServerURLWithContext(r.ctx, "ParentalcontrolSubscribersiteAPIService.ParentalcontrolsubscribersiteReferenceDelete")
	if err != nil {
		return nil, internal.NewGenericOpenAPIError(err.Error())
	}

	localVarPath := localBasePath + "/parentalcontrol:subscribersite/{reference}"
	localVarPath = strings.Replace(localVarPath, "{"+"reference"+"}", url.PathEscape(internal.ParameterValueToString(r.reference, "reference")), -1)

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := url.Values{}
	localVarFormParams := url.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{}

	// set Content-Type header
	localVarHTTPContentType := internal.SelectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{}

	// set Accept header
	localVarHTTPHeaderAccept := internal.SelectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	req, err := a.Client.PrepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, formFiles)
	if err != nil {
		return nil, err
	}

	localVarHTTPResponse, err := a.Client.CallAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarHTTPResponse, err
	}

	localVarBody, err := io.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	localVarHTTPResponse.Body = io.NopCloser(bytes.NewBuffer(localVarBody))
	if err != nil {
		return localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := internal.NewGenericOpenAPIErrorWithBody(localVarHTTPResponse.Status, localVarBody)
		return localVarHTTPResponse, newErr
	}

	return localVarHTTPResponse, nil
}

type ParentalcontrolSubscribersiteAPIParentalcontrolsubscribersiteReferenceGetRequest struct {
	ctx            context.Context
	ApiService     ParentalcontrolSubscribersiteAPI
	reference      string
	returnFields   *string
	returnFields2  *string
	returnAsObject *int32
}

// Enter the field names followed by comma
func (r ParentalcontrolSubscribersiteAPIParentalcontrolsubscribersiteReferenceGetRequest) ReturnFields(returnFields string) ParentalcontrolSubscribersiteAPIParentalcontrolsubscribersiteReferenceGetRequest {
	r.returnFields = &returnFields
	return r
}

// Enter the field names followed by comma, this returns the required fields along with the default fields
func (r ParentalcontrolSubscribersiteAPIParentalcontrolsubscribersiteReferenceGetRequest) ReturnFields2(returnFields2 string) ParentalcontrolSubscribersiteAPIParentalcontrolsubscribersiteReferenceGetRequest {
	r.returnFields2 = &returnFields2
	return r
}

// Select 1 if result is required as an object
func (r ParentalcontrolSubscribersiteAPIParentalcontrolsubscribersiteReferenceGetRequest) ReturnAsObject(returnAsObject int32) ParentalcontrolSubscribersiteAPIParentalcontrolsubscribersiteReferenceGetRequest {
	r.returnAsObject = &returnAsObject
	return r
}

func (r ParentalcontrolSubscribersiteAPIParentalcontrolsubscribersiteReferenceGetRequest) Execute() (*GetParentalcontrolSubscribersiteResponse, *http.Response, error) {
	return r.ApiService.ParentalcontrolsubscribersiteReferenceGetExecute(r)
}

/*
ParentalcontrolsubscribersiteReferenceGet Get a specific parentalcontrol:subscribersite object

Returns a specific parentalcontrol:subscribersite object by reference

	@param ctx context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
	@param reference Reference of the parentalcontrol:subscribersite object
	@return ParentalcontrolSubscribersiteAPIParentalcontrolsubscribersiteReferenceGetRequest
*/
func (a *ParentalcontrolSubscribersiteAPIService) ParentalcontrolsubscribersiteReferenceGet(ctx context.Context, reference string) ParentalcontrolSubscribersiteAPIParentalcontrolsubscribersiteReferenceGetRequest {
	return ParentalcontrolSubscribersiteAPIParentalcontrolsubscribersiteReferenceGetRequest{
		ApiService: a,
		ctx:        ctx,
		reference:  reference,
	}
}

// Execute executes the request
//
//	@return GetParentalcontrolSubscribersiteResponse
func (a *ParentalcontrolSubscribersiteAPIService) ParentalcontrolsubscribersiteReferenceGetExecute(r ParentalcontrolSubscribersiteAPIParentalcontrolsubscribersiteReferenceGetRequest) (*GetParentalcontrolSubscribersiteResponse, *http.Response, error) {
	var (
		localVarHTTPMethod  = http.MethodGet
		localVarPostBody    interface{}
		formFiles           []internal.FormFile
		localVarReturnValue *GetParentalcontrolSubscribersiteResponse
	)

	localBasePath, err := a.Client.Cfg.ServerURLWithContext(r.ctx, "ParentalcontrolSubscribersiteAPIService.ParentalcontrolsubscribersiteReferenceGet")
	if err != nil {
		return localVarReturnValue, nil, internal.NewGenericOpenAPIError(err.Error())
	}

	localVarPath := localBasePath + "/parentalcontrol:subscribersite/{reference}"
	localVarPath = strings.Replace(localVarPath, "{"+"reference"+"}", url.PathEscape(internal.ParameterValueToString(r.reference, "reference")), -1)

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := url.Values{}
	localVarFormParams := url.Values{}

	if r.returnFields != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_return_fields", r.returnFields, "form", "")
	}
	if r.returnFields2 != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_return_fields+", r.returnFields2, "form", "")
	}
	if r.returnAsObject != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_return_as_object", r.returnAsObject, "form", "")
	}
	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{}

	// set Content-Type header
	localVarHTTPContentType := internal.SelectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := internal.SelectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	req, err := a.Client.PrepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, formFiles)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.Client.CallAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := io.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	localVarHTTPResponse.Body = io.NopCloser(bytes.NewBuffer(localVarBody))
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := internal.NewGenericOpenAPIErrorWithBody(localVarHTTPResponse.Status, localVarBody)
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.Client.Decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := internal.NewGenericOpenAPIErrorWithBody(err.Error(), localVarBody)
		return localVarReturnValue, localVarHTTPResponse, newErr
	}
	return localVarReturnValue, localVarHTTPResponse, nil
}

type ParentalcontrolSubscribersiteAPIParentalcontrolsubscribersiteReferencePutRequest struct {
	ctx                           context.Context
	ApiService                    ParentalcontrolSubscribersiteAPI
	reference                     string
	parentalcontrolSubscribersite *ParentalcontrolSubscribersite
	returnFields                  *string
	returnFields2                 *string
	returnAsObject                *int32
}

// Object data to update
func (r ParentalcontrolSubscribersiteAPIParentalcontrolsubscribersiteReferencePutRequest) ParentalcontrolSubscribersite(parentalcontrolSubscribersite ParentalcontrolSubscribersite) ParentalcontrolSubscribersiteAPIParentalcontrolsubscribersiteReferencePutRequest {
	r.parentalcontrolSubscribersite = &parentalcontrolSubscribersite
	return r
}

// Enter the field names followed by comma
func (r ParentalcontrolSubscribersiteAPIParentalcontrolsubscribersiteReferencePutRequest) ReturnFields(returnFields string) ParentalcontrolSubscribersiteAPIParentalcontrolsubscribersiteReferencePutRequest {
	r.returnFields = &returnFields
	return r
}

// Enter the field names followed by comma, this returns the required fields along with the default fields
func (r ParentalcontrolSubscribersiteAPIParentalcontrolsubscribersiteReferencePutRequest) ReturnFields2(returnFields2 string) ParentalcontrolSubscribersiteAPIParentalcontrolsubscribersiteReferencePutRequest {
	r.returnFields2 = &returnFields2
	return r
}

// Select 1 if result is required as an object
func (r ParentalcontrolSubscribersiteAPIParentalcontrolsubscribersiteReferencePutRequest) ReturnAsObject(returnAsObject int32) ParentalcontrolSubscribersiteAPIParentalcontrolsubscribersiteReferencePutRequest {
	r.returnAsObject = &returnAsObject
	return r
}

func (r ParentalcontrolSubscribersiteAPIParentalcontrolsubscribersiteReferencePutRequest) Execute() (*UpdateParentalcontrolSubscribersiteResponse, *http.Response, error) {
	return r.ApiService.ParentalcontrolsubscribersiteReferencePutExecute(r)
}

/*
ParentalcontrolsubscribersiteReferencePut Update a parentalcontrol:subscribersite object

Updates a specific parentalcontrol:subscribersite object by reference

	@param ctx context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
	@param reference Reference of the parentalcontrol:subscribersite object
	@return ParentalcontrolSubscribersiteAPIParentalcontrolsubscribersiteReferencePutRequest
*/
func (a *ParentalcontrolSubscribersiteAPIService) ParentalcontrolsubscribersiteReferencePut(ctx context.Context, reference string) ParentalcontrolSubscribersiteAPIParentalcontrolsubscribersiteReferencePutRequest {
	return ParentalcontrolSubscribersiteAPIParentalcontrolsubscribersiteReferencePutRequest{
		ApiService: a,
		ctx:        ctx,
		reference:  reference,
	}
}

// Execute executes the request
//
//	@return UpdateParentalcontrolSubscribersiteResponse
func (a *ParentalcontrolSubscribersiteAPIService) ParentalcontrolsubscribersiteReferencePutExecute(r ParentalcontrolSubscribersiteAPIParentalcontrolsubscribersiteReferencePutRequest) (*UpdateParentalcontrolSubscribersiteResponse, *http.Response, error) {
	var (
		localVarHTTPMethod  = http.MethodPut
		localVarPostBody    interface{}
		formFiles           []internal.FormFile
		localVarReturnValue *UpdateParentalcontrolSubscribersiteResponse
	)

	localBasePath, err := a.Client.Cfg.ServerURLWithContext(r.ctx, "ParentalcontrolSubscribersiteAPIService.ParentalcontrolsubscribersiteReferencePut")
	if err != nil {
		return localVarReturnValue, nil, internal.NewGenericOpenAPIError(err.Error())
	}

	localVarPath := localBasePath + "/parentalcontrol:subscribersite/{reference}"
	localVarPath = strings.Replace(localVarPath, "{"+"reference"+"}", url.PathEscape(internal.ParameterValueToString(r.reference, "reference")), -1)

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := url.Values{}
	localVarFormParams := url.Values{}
	if r.parentalcontrolSubscribersite == nil {
		return localVarReturnValue, nil, internal.ReportError("parentalcontrolSubscribersite is required and must be specified")
	}

	if r.returnFields != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_return_fields", r.returnFields, "form", "")
	}
	if r.returnFields2 != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_return_fields+", r.returnFields2, "form", "")
	}
	if r.returnAsObject != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_return_as_object", r.returnAsObject, "form", "")
	}
	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := internal.SelectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := internal.SelectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	if len(a.Client.Cfg.DefaultExtAttrs) > 0 && r.parentalcontrolSubscribersite != nil {
		if r.parentalcontrolSubscribersite.Extattrs == nil {
			r.parentalcontrolSubscribersite.Extattrs = &map[string]ExtAttrs{}
		}
		for k, v := range a.Client.Cfg.DefaultExtAttrs {
			if _, ok := (*r.parentalcontrolSubscribersite.Extattrs)[k]; !ok {
				(*r.parentalcontrolSubscribersite.Extattrs)[k] = ExtAttrs{
					Value: v.Value,
				}
			}
		}
	}
	// body params
	localVarPostBody = r.parentalcontrolSubscribersite
	req, err := a.Client.PrepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, formFiles)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.Client.CallAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := io.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	localVarHTTPResponse.Body = io.NopCloser(bytes.NewBuffer(localVarBody))
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := internal.NewGenericOpenAPIErrorWithBody(localVarHTTPResponse.Status, localVarBody)
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.Client.Decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := internal.NewGenericOpenAPIErrorWithBody(err.Error(), localVarBody)
		return localVarReturnValue, localVarHTTPResponse, newErr
	}
	return localVarReturnValue, localVarHTTPResponse, nil
}
