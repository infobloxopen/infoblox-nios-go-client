/*
Infoblox THREATPROTECTION API

OpenAPI specification for Infoblox NIOS WAPI THREATPROTECTION objects

API version: 2.13.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package threatprotection

import (
	"bytes"
	"context"
	"io"
	"net/http"
	"net/url"
	"strings"

	"github.com/Infoblox-CTO/infoblox-nios-go-client/internal"
)

type ThreatprotectionProfileAPI interface {
	/*
		ThreatprotectionprofileGet Retrieve threatprotection:profile objects

		Returns a list of threatprotection:profile objects matching the search criteria

		@param ctx context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
		@return ThreatprotectionProfileAPIThreatprotectionprofileGetRequest
	*/
	ThreatprotectionprofileGet(ctx context.Context) ThreatprotectionProfileAPIThreatprotectionprofileGetRequest

	// ThreatprotectionprofileGetExecute executes the request
	//  @return ListThreatprotectionProfileResponse
	ThreatprotectionprofileGetExecute(r ThreatprotectionProfileAPIThreatprotectionprofileGetRequest) (*ListThreatprotectionProfileResponse, *http.Response, error)
	/*
		ThreatprotectionprofilePost Create a threatprotection:profile object

		Creates a new threatprotection:profile object

		@param ctx context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
		@return ThreatprotectionProfileAPIThreatprotectionprofilePostRequest
	*/
	ThreatprotectionprofilePost(ctx context.Context) ThreatprotectionProfileAPIThreatprotectionprofilePostRequest

	// ThreatprotectionprofilePostExecute executes the request
	//  @return CreateThreatprotectionProfileResponse
	ThreatprotectionprofilePostExecute(r ThreatprotectionProfileAPIThreatprotectionprofilePostRequest) (*CreateThreatprotectionProfileResponse, *http.Response, error)
	/*
		ThreatprotectionprofileReferenceDelete Delete a threatprotection:profile object

		Deletes a specific threatprotection:profile object by reference

		@param ctx context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
		@param reference Reference of the threatprotection:profile object
		@return ThreatprotectionProfileAPIThreatprotectionprofileReferenceDeleteRequest
	*/
	ThreatprotectionprofileReferenceDelete(ctx context.Context, reference string) ThreatprotectionProfileAPIThreatprotectionprofileReferenceDeleteRequest

	// ThreatprotectionprofileReferenceDeleteExecute executes the request
	ThreatprotectionprofileReferenceDeleteExecute(r ThreatprotectionProfileAPIThreatprotectionprofileReferenceDeleteRequest) (*http.Response, error)
	/*
		ThreatprotectionprofileReferenceGet Get a specific threatprotection:profile object

		Returns a specific threatprotection:profile object by reference

		@param ctx context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
		@param reference Reference of the threatprotection:profile object
		@return ThreatprotectionProfileAPIThreatprotectionprofileReferenceGetRequest
	*/
	ThreatprotectionprofileReferenceGet(ctx context.Context, reference string) ThreatprotectionProfileAPIThreatprotectionprofileReferenceGetRequest

	// ThreatprotectionprofileReferenceGetExecute executes the request
	//  @return GetThreatprotectionProfileResponse
	ThreatprotectionprofileReferenceGetExecute(r ThreatprotectionProfileAPIThreatprotectionprofileReferenceGetRequest) (*GetThreatprotectionProfileResponse, *http.Response, error)
	/*
		ThreatprotectionprofileReferencePut Update a threatprotection:profile object

		Updates a specific threatprotection:profile object by reference

		@param ctx context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
		@param reference Reference of the threatprotection:profile object
		@return ThreatprotectionProfileAPIThreatprotectionprofileReferencePutRequest
	*/
	ThreatprotectionprofileReferencePut(ctx context.Context, reference string) ThreatprotectionProfileAPIThreatprotectionprofileReferencePutRequest

	// ThreatprotectionprofileReferencePutExecute executes the request
	//  @return UpdateThreatprotectionProfileResponse
	ThreatprotectionprofileReferencePutExecute(r ThreatprotectionProfileAPIThreatprotectionprofileReferencePutRequest) (*UpdateThreatprotectionProfileResponse, *http.Response, error)
}

// ThreatprotectionProfileAPIService ThreatprotectionProfileAPI service
type ThreatprotectionProfileAPIService internal.Service

type ThreatprotectionProfileAPIThreatprotectionprofileGetRequest struct {
	ctx            context.Context
	ApiService     ThreatprotectionProfileAPI
	returnFields   *string
	returnFields2  *string
	maxResults     *int32
	returnAsObject *int32
	paging         *int32
	pageId         *string
	filters        *map[string]interface{}
	extattrfilter  *map[string]interface{}
}

// Enter the field names followed by comma
func (r ThreatprotectionProfileAPIThreatprotectionprofileGetRequest) ReturnFields(returnFields string) ThreatprotectionProfileAPIThreatprotectionprofileGetRequest {
	r.returnFields = &returnFields
	return r
}

// Enter the field names followed by comma, this returns the required fields along with the default fields
func (r ThreatprotectionProfileAPIThreatprotectionprofileGetRequest) ReturnFields2(returnFields2 string) ThreatprotectionProfileAPIThreatprotectionprofileGetRequest {
	r.returnFields2 = &returnFields2
	return r
}

// Enter the number of results to be fetched
func (r ThreatprotectionProfileAPIThreatprotectionprofileGetRequest) MaxResults(maxResults int32) ThreatprotectionProfileAPIThreatprotectionprofileGetRequest {
	r.maxResults = &maxResults
	return r
}

// Select 1 if result is required as an object
func (r ThreatprotectionProfileAPIThreatprotectionprofileGetRequest) ReturnAsObject(returnAsObject int32) ThreatprotectionProfileAPIThreatprotectionprofileGetRequest {
	r.returnAsObject = &returnAsObject
	return r
}

// Control paging of results
func (r ThreatprotectionProfileAPIThreatprotectionprofileGetRequest) Paging(paging int32) ThreatprotectionProfileAPIThreatprotectionprofileGetRequest {
	r.paging = &paging
	return r
}

// Page id for retrieving next page of results
func (r ThreatprotectionProfileAPIThreatprotectionprofileGetRequest) PageId(pageId string) ThreatprotectionProfileAPIThreatprotectionprofileGetRequest {
	r.pageId = &pageId
	return r
}

func (r ThreatprotectionProfileAPIThreatprotectionprofileGetRequest) Filters(filters map[string]interface{}) ThreatprotectionProfileAPIThreatprotectionprofileGetRequest {
	r.filters = &filters
	return r
}

func (r ThreatprotectionProfileAPIThreatprotectionprofileGetRequest) Extattrfilter(extattrfilter map[string]interface{}) ThreatprotectionProfileAPIThreatprotectionprofileGetRequest {
	r.extattrfilter = &extattrfilter
	return r
}

func (r ThreatprotectionProfileAPIThreatprotectionprofileGetRequest) Execute() (*ListThreatprotectionProfileResponse, *http.Response, error) {
	return r.ApiService.ThreatprotectionprofileGetExecute(r)
}

/*
ThreatprotectionprofileGet Retrieve threatprotection:profile objects

Returns a list of threatprotection:profile objects matching the search criteria

	@param ctx context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
	@return ThreatprotectionProfileAPIThreatprotectionprofileGetRequest
*/
func (a *ThreatprotectionProfileAPIService) ThreatprotectionprofileGet(ctx context.Context) ThreatprotectionProfileAPIThreatprotectionprofileGetRequest {
	return ThreatprotectionProfileAPIThreatprotectionprofileGetRequest{
		ApiService: a,
		ctx:        ctx,
	}
}

// Execute executes the request
//
//	@return ListThreatprotectionProfileResponse
func (a *ThreatprotectionProfileAPIService) ThreatprotectionprofileGetExecute(r ThreatprotectionProfileAPIThreatprotectionprofileGetRequest) (*ListThreatprotectionProfileResponse, *http.Response, error) {
	var (
		localVarHTTPMethod  = http.MethodGet
		localVarPostBody    interface{}
		formFiles           []internal.FormFile
		localVarReturnValue *ListThreatprotectionProfileResponse
	)

	localBasePath, err := a.Client.Cfg.ServerURLWithContext(r.ctx, "ThreatprotectionProfileAPIService.ThreatprotectionprofileGet")
	if err != nil {
		return localVarReturnValue, nil, internal.NewGenericOpenAPIError(err.Error())
	}

	localVarPath := localBasePath + "/threatprotection:profile"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := url.Values{}
	localVarFormParams := url.Values{}

	if r.returnFields != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_return_fields", r.returnFields, "form", "")
	}
	if r.returnFields2 != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_return_fields+", r.returnFields2, "form", "")
	}
	if r.maxResults != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_max_results", r.maxResults, "form", "")
	}
	if r.returnAsObject != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_return_as_object", r.returnAsObject, "form", "")
	}
	if r.paging != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_paging", r.paging, "form", "")
	}
	if r.pageId != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_page_id", r.pageId, "form", "")
	}
	if r.filters != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "filters", r.filters, "form", "")
	}
	if r.extattrfilter != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "extattrfilter", r.extattrfilter, "form", "")
	}
	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{}

	// set Content-Type header
	localVarHTTPContentType := internal.SelectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := internal.SelectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	req, err := a.Client.PrepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, formFiles)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.Client.CallAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := io.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	localVarHTTPResponse.Body = io.NopCloser(bytes.NewBuffer(localVarBody))
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := internal.NewGenericOpenAPIErrorWithBody(localVarHTTPResponse.Status, localVarBody)
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.Client.Decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := internal.NewGenericOpenAPIErrorWithBody(err.Error(), localVarBody)
		return localVarReturnValue, localVarHTTPResponse, newErr
	}
	return localVarReturnValue, localVarHTTPResponse, nil
}

type ThreatprotectionProfileAPIThreatprotectionprofilePostRequest struct {
	ctx                     context.Context
	ApiService              ThreatprotectionProfileAPI
	threatprotectionProfile *ThreatprotectionProfile
	returnFields            *string
	returnFields2           *string
	returnAsObject          *int32
}

// Object data to create
func (r ThreatprotectionProfileAPIThreatprotectionprofilePostRequest) ThreatprotectionProfile(threatprotectionProfile ThreatprotectionProfile) ThreatprotectionProfileAPIThreatprotectionprofilePostRequest {
	r.threatprotectionProfile = &threatprotectionProfile
	return r
}

// Enter the field names followed by comma
func (r ThreatprotectionProfileAPIThreatprotectionprofilePostRequest) ReturnFields(returnFields string) ThreatprotectionProfileAPIThreatprotectionprofilePostRequest {
	r.returnFields = &returnFields
	return r
}

// Enter the field names followed by comma, this returns the required fields along with the default fields
func (r ThreatprotectionProfileAPIThreatprotectionprofilePostRequest) ReturnFields2(returnFields2 string) ThreatprotectionProfileAPIThreatprotectionprofilePostRequest {
	r.returnFields2 = &returnFields2
	return r
}

// Select 1 if result is required as an object
func (r ThreatprotectionProfileAPIThreatprotectionprofilePostRequest) ReturnAsObject(returnAsObject int32) ThreatprotectionProfileAPIThreatprotectionprofilePostRequest {
	r.returnAsObject = &returnAsObject
	return r
}

func (r ThreatprotectionProfileAPIThreatprotectionprofilePostRequest) Execute() (*CreateThreatprotectionProfileResponse, *http.Response, error) {
	return r.ApiService.ThreatprotectionprofilePostExecute(r)
}

/*
ThreatprotectionprofilePost Create a threatprotection:profile object

Creates a new threatprotection:profile object

	@param ctx context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
	@return ThreatprotectionProfileAPIThreatprotectionprofilePostRequest
*/
func (a *ThreatprotectionProfileAPIService) ThreatprotectionprofilePost(ctx context.Context) ThreatprotectionProfileAPIThreatprotectionprofilePostRequest {
	return ThreatprotectionProfileAPIThreatprotectionprofilePostRequest{
		ApiService: a,
		ctx:        ctx,
	}
}

// Execute executes the request
//
//	@return CreateThreatprotectionProfileResponse
func (a *ThreatprotectionProfileAPIService) ThreatprotectionprofilePostExecute(r ThreatprotectionProfileAPIThreatprotectionprofilePostRequest) (*CreateThreatprotectionProfileResponse, *http.Response, error) {
	var (
		localVarHTTPMethod  = http.MethodPost
		localVarPostBody    interface{}
		formFiles           []internal.FormFile
		localVarReturnValue *CreateThreatprotectionProfileResponse
	)

	localBasePath, err := a.Client.Cfg.ServerURLWithContext(r.ctx, "ThreatprotectionProfileAPIService.ThreatprotectionprofilePost")
	if err != nil {
		return localVarReturnValue, nil, internal.NewGenericOpenAPIError(err.Error())
	}

	localVarPath := localBasePath + "/threatprotection:profile"

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := url.Values{}
	localVarFormParams := url.Values{}
	if r.threatprotectionProfile == nil {
		return localVarReturnValue, nil, internal.ReportError("threatprotectionProfile is required and must be specified")
	}

	if r.returnFields != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_return_fields", r.returnFields, "form", "")
	}
	if r.returnFields2 != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_return_fields+", r.returnFields2, "form", "")
	}
	if r.returnAsObject != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_return_as_object", r.returnAsObject, "form", "")
	}
	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := internal.SelectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := internal.SelectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	if len(a.Client.Cfg.DefaultExtAttrs) > 0 && r.threatprotectionProfile != nil {
		if r.threatprotectionProfile.Extattrs == nil {
			r.threatprotectionProfile.Extattrs = &map[string]ExtAttrs{}
		}
		for k, v := range a.Client.Cfg.DefaultExtAttrs {
			if _, ok := (*r.threatprotectionProfile.Extattrs)[k]; !ok {
				(*r.threatprotectionProfile.Extattrs)[k] = ExtAttrs{
					Value: v.Value,
				}
			}
		}
	}
	// body params
	localVarPostBody = r.threatprotectionProfile
	req, err := a.Client.PrepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, formFiles)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.Client.CallAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := io.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	localVarHTTPResponse.Body = io.NopCloser(bytes.NewBuffer(localVarBody))
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := internal.NewGenericOpenAPIErrorWithBody(localVarHTTPResponse.Status, localVarBody)
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.Client.Decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := internal.NewGenericOpenAPIErrorWithBody(err.Error(), localVarBody)
		return localVarReturnValue, localVarHTTPResponse, newErr
	}
	return localVarReturnValue, localVarHTTPResponse, nil
}

type ThreatprotectionProfileAPIThreatprotectionprofileReferenceDeleteRequest struct {
	ctx        context.Context
	ApiService ThreatprotectionProfileAPI
	reference  string
}

func (r ThreatprotectionProfileAPIThreatprotectionprofileReferenceDeleteRequest) Execute() (*http.Response, error) {
	return r.ApiService.ThreatprotectionprofileReferenceDeleteExecute(r)
}

/*
ThreatprotectionprofileReferenceDelete Delete a threatprotection:profile object

Deletes a specific threatprotection:profile object by reference

	@param ctx context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
	@param reference Reference of the threatprotection:profile object
	@return ThreatprotectionProfileAPIThreatprotectionprofileReferenceDeleteRequest
*/
func (a *ThreatprotectionProfileAPIService) ThreatprotectionprofileReferenceDelete(ctx context.Context, reference string) ThreatprotectionProfileAPIThreatprotectionprofileReferenceDeleteRequest {
	return ThreatprotectionProfileAPIThreatprotectionprofileReferenceDeleteRequest{
		ApiService: a,
		ctx:        ctx,
		reference:  reference,
	}
}

// Execute executes the request
func (a *ThreatprotectionProfileAPIService) ThreatprotectionprofileReferenceDeleteExecute(r ThreatprotectionProfileAPIThreatprotectionprofileReferenceDeleteRequest) (*http.Response, error) {
	var (
		localVarHTTPMethod = http.MethodDelete
		localVarPostBody   interface{}
		formFiles          []internal.FormFile
	)

	localBasePath, err := a.Client.Cfg.ServerURLWithContext(r.ctx, "ThreatprotectionProfileAPIService.ThreatprotectionprofileReferenceDelete")
	if err != nil {
		return nil, internal.NewGenericOpenAPIError(err.Error())
	}

	localVarPath := localBasePath + "/threatprotection:profile/{reference}"
	localVarPath = strings.Replace(localVarPath, "{"+"reference"+"}", url.PathEscape(internal.ParameterValueToString(r.reference, "reference")), -1)

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := url.Values{}
	localVarFormParams := url.Values{}

	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{}

	// set Content-Type header
	localVarHTTPContentType := internal.SelectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{}

	// set Accept header
	localVarHTTPHeaderAccept := internal.SelectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	req, err := a.Client.PrepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, formFiles)
	if err != nil {
		return nil, err
	}

	localVarHTTPResponse, err := a.Client.CallAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarHTTPResponse, err
	}

	localVarBody, err := io.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	localVarHTTPResponse.Body = io.NopCloser(bytes.NewBuffer(localVarBody))
	if err != nil {
		return localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := internal.NewGenericOpenAPIErrorWithBody(localVarHTTPResponse.Status, localVarBody)
		return localVarHTTPResponse, newErr
	}

	return localVarHTTPResponse, nil
}

type ThreatprotectionProfileAPIThreatprotectionprofileReferenceGetRequest struct {
	ctx            context.Context
	ApiService     ThreatprotectionProfileAPI
	reference      string
	returnFields   *string
	returnFields2  *string
	returnAsObject *int32
}

// Enter the field names followed by comma
func (r ThreatprotectionProfileAPIThreatprotectionprofileReferenceGetRequest) ReturnFields(returnFields string) ThreatprotectionProfileAPIThreatprotectionprofileReferenceGetRequest {
	r.returnFields = &returnFields
	return r
}

// Enter the field names followed by comma, this returns the required fields along with the default fields
func (r ThreatprotectionProfileAPIThreatprotectionprofileReferenceGetRequest) ReturnFields2(returnFields2 string) ThreatprotectionProfileAPIThreatprotectionprofileReferenceGetRequest {
	r.returnFields2 = &returnFields2
	return r
}

// Select 1 if result is required as an object
func (r ThreatprotectionProfileAPIThreatprotectionprofileReferenceGetRequest) ReturnAsObject(returnAsObject int32) ThreatprotectionProfileAPIThreatprotectionprofileReferenceGetRequest {
	r.returnAsObject = &returnAsObject
	return r
}

func (r ThreatprotectionProfileAPIThreatprotectionprofileReferenceGetRequest) Execute() (*GetThreatprotectionProfileResponse, *http.Response, error) {
	return r.ApiService.ThreatprotectionprofileReferenceGetExecute(r)
}

/*
ThreatprotectionprofileReferenceGet Get a specific threatprotection:profile object

Returns a specific threatprotection:profile object by reference

	@param ctx context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
	@param reference Reference of the threatprotection:profile object
	@return ThreatprotectionProfileAPIThreatprotectionprofileReferenceGetRequest
*/
func (a *ThreatprotectionProfileAPIService) ThreatprotectionprofileReferenceGet(ctx context.Context, reference string) ThreatprotectionProfileAPIThreatprotectionprofileReferenceGetRequest {
	return ThreatprotectionProfileAPIThreatprotectionprofileReferenceGetRequest{
		ApiService: a,
		ctx:        ctx,
		reference:  reference,
	}
}

// Execute executes the request
//
//	@return GetThreatprotectionProfileResponse
func (a *ThreatprotectionProfileAPIService) ThreatprotectionprofileReferenceGetExecute(r ThreatprotectionProfileAPIThreatprotectionprofileReferenceGetRequest) (*GetThreatprotectionProfileResponse, *http.Response, error) {
	var (
		localVarHTTPMethod  = http.MethodGet
		localVarPostBody    interface{}
		formFiles           []internal.FormFile
		localVarReturnValue *GetThreatprotectionProfileResponse
	)

	localBasePath, err := a.Client.Cfg.ServerURLWithContext(r.ctx, "ThreatprotectionProfileAPIService.ThreatprotectionprofileReferenceGet")
	if err != nil {
		return localVarReturnValue, nil, internal.NewGenericOpenAPIError(err.Error())
	}

	localVarPath := localBasePath + "/threatprotection:profile/{reference}"
	localVarPath = strings.Replace(localVarPath, "{"+"reference"+"}", url.PathEscape(internal.ParameterValueToString(r.reference, "reference")), -1)

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := url.Values{}
	localVarFormParams := url.Values{}

	if r.returnFields != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_return_fields", r.returnFields, "form", "")
	}
	if r.returnFields2 != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_return_fields+", r.returnFields2, "form", "")
	}
	if r.returnAsObject != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_return_as_object", r.returnAsObject, "form", "")
	}
	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{}

	// set Content-Type header
	localVarHTTPContentType := internal.SelectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := internal.SelectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	req, err := a.Client.PrepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, formFiles)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.Client.CallAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := io.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	localVarHTTPResponse.Body = io.NopCloser(bytes.NewBuffer(localVarBody))
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := internal.NewGenericOpenAPIErrorWithBody(localVarHTTPResponse.Status, localVarBody)
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.Client.Decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := internal.NewGenericOpenAPIErrorWithBody(err.Error(), localVarBody)
		return localVarReturnValue, localVarHTTPResponse, newErr
	}
	return localVarReturnValue, localVarHTTPResponse, nil
}

type ThreatprotectionProfileAPIThreatprotectionprofileReferencePutRequest struct {
	ctx                     context.Context
	ApiService              ThreatprotectionProfileAPI
	reference               string
	threatprotectionProfile *ThreatprotectionProfile
	returnFields            *string
	returnFields2           *string
	returnAsObject          *int32
}

// Object data to update
func (r ThreatprotectionProfileAPIThreatprotectionprofileReferencePutRequest) ThreatprotectionProfile(threatprotectionProfile ThreatprotectionProfile) ThreatprotectionProfileAPIThreatprotectionprofileReferencePutRequest {
	r.threatprotectionProfile = &threatprotectionProfile
	return r
}

// Enter the field names followed by comma
func (r ThreatprotectionProfileAPIThreatprotectionprofileReferencePutRequest) ReturnFields(returnFields string) ThreatprotectionProfileAPIThreatprotectionprofileReferencePutRequest {
	r.returnFields = &returnFields
	return r
}

// Enter the field names followed by comma, this returns the required fields along with the default fields
func (r ThreatprotectionProfileAPIThreatprotectionprofileReferencePutRequest) ReturnFields2(returnFields2 string) ThreatprotectionProfileAPIThreatprotectionprofileReferencePutRequest {
	r.returnFields2 = &returnFields2
	return r
}

// Select 1 if result is required as an object
func (r ThreatprotectionProfileAPIThreatprotectionprofileReferencePutRequest) ReturnAsObject(returnAsObject int32) ThreatprotectionProfileAPIThreatprotectionprofileReferencePutRequest {
	r.returnAsObject = &returnAsObject
	return r
}

func (r ThreatprotectionProfileAPIThreatprotectionprofileReferencePutRequest) Execute() (*UpdateThreatprotectionProfileResponse, *http.Response, error) {
	return r.ApiService.ThreatprotectionprofileReferencePutExecute(r)
}

/*
ThreatprotectionprofileReferencePut Update a threatprotection:profile object

Updates a specific threatprotection:profile object by reference

	@param ctx context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
	@param reference Reference of the threatprotection:profile object
	@return ThreatprotectionProfileAPIThreatprotectionprofileReferencePutRequest
*/
func (a *ThreatprotectionProfileAPIService) ThreatprotectionprofileReferencePut(ctx context.Context, reference string) ThreatprotectionProfileAPIThreatprotectionprofileReferencePutRequest {
	return ThreatprotectionProfileAPIThreatprotectionprofileReferencePutRequest{
		ApiService: a,
		ctx:        ctx,
		reference:  reference,
	}
}

// Execute executes the request
//
//	@return UpdateThreatprotectionProfileResponse
func (a *ThreatprotectionProfileAPIService) ThreatprotectionprofileReferencePutExecute(r ThreatprotectionProfileAPIThreatprotectionprofileReferencePutRequest) (*UpdateThreatprotectionProfileResponse, *http.Response, error) {
	var (
		localVarHTTPMethod  = http.MethodPut
		localVarPostBody    interface{}
		formFiles           []internal.FormFile
		localVarReturnValue *UpdateThreatprotectionProfileResponse
	)

	localBasePath, err := a.Client.Cfg.ServerURLWithContext(r.ctx, "ThreatprotectionProfileAPIService.ThreatprotectionprofileReferencePut")
	if err != nil {
		return localVarReturnValue, nil, internal.NewGenericOpenAPIError(err.Error())
	}

	localVarPath := localBasePath + "/threatprotection:profile/{reference}"
	localVarPath = strings.Replace(localVarPath, "{"+"reference"+"}", url.PathEscape(internal.ParameterValueToString(r.reference, "reference")), -1)

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := url.Values{}
	localVarFormParams := url.Values{}
	if r.threatprotectionProfile == nil {
		return localVarReturnValue, nil, internal.ReportError("threatprotectionProfile is required and must be specified")
	}

	if r.returnFields != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_return_fields", r.returnFields, "form", "")
	}
	if r.returnFields2 != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_return_fields+", r.returnFields2, "form", "")
	}
	if r.returnAsObject != nil {
		internal.ParameterAddToHeaderOrQuery(localVarQueryParams, "_return_as_object", r.returnAsObject, "form", "")
	}
	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{"application/json"}

	// set Content-Type header
	localVarHTTPContentType := internal.SelectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{"application/json"}

	// set Accept header
	localVarHTTPHeaderAccept := internal.SelectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	if len(a.Client.Cfg.DefaultExtAttrs) > 0 && r.threatprotectionProfile != nil {
		if r.threatprotectionProfile.Extattrs == nil {
			r.threatprotectionProfile.Extattrs = &map[string]ExtAttrs{}
		}
		for k, v := range a.Client.Cfg.DefaultExtAttrs {
			if _, ok := (*r.threatprotectionProfile.Extattrs)[k]; !ok {
				(*r.threatprotectionProfile.Extattrs)[k] = ExtAttrs{
					Value: v.Value,
				}
			}
		}
	}
	// body params
	localVarPostBody = r.threatprotectionProfile
	req, err := a.Client.PrepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, formFiles)
	if err != nil {
		return localVarReturnValue, nil, err
	}

	localVarHTTPResponse, err := a.Client.CallAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	localVarBody, err := io.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	localVarHTTPResponse.Body = io.NopCloser(bytes.NewBuffer(localVarBody))
	if err != nil {
		return localVarReturnValue, localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := internal.NewGenericOpenAPIErrorWithBody(localVarHTTPResponse.Status, localVarBody)
		return localVarReturnValue, localVarHTTPResponse, newErr
	}

	err = a.Client.Decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
	if err != nil {
		newErr := internal.NewGenericOpenAPIErrorWithBody(err.Error(), localVarBody)
		return localVarReturnValue, localVarHTTPResponse, newErr
	}
	return localVarReturnValue, localVarHTTPResponse, nil
}
