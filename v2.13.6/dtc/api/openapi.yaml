openapi: 3.0.0
info:
  contact:
    name: Infoblox
    url: https://www.infoblox.com
  description: OpenAPI specification for Infoblox NIOS WAPI DTC objects
  license:
    name: Infoblox License
    url: https://www.infoblox.com
  termsOfService: https://www.infoblox.com
  title: Infoblox DTC API
  version: 2.13.6
servers:
- description: NIOS WAPI server
  url: /wapi/v2.13.6
tags:
- description: Operations for dtc objects
  name: Dtc
- description: Operations for dtc:server objects
  name: DtcServer
- description: Operations for dtc:pool objects
  name: DtcPool
- description: Operations for dtc:topology objects
  name: DtcTopology
- description: Operations for dtc:lbdn objects
  name: DtcLbdn
- description: Operations for dtc:monitor objects
  name: DtcMonitor
- description: Operations for dtc:monitor:http objects
  name: DtcMonitorHttp
- description: Operations for dtc:monitor:icmp objects
  name: DtcMonitorIcmp
- description: Operations for dtc:monitor:pdp objects
  name: DtcMonitorPdp
- description: Operations for dtc:monitor:sip objects
  name: DtcMonitorSip
- description: Operations for dtc:monitor:snmp objects
  name: DtcMonitorSnmp
- description: Operations for dtc:monitor:tcp objects
  name: DtcMonitorTcp
- description: Operations for dtc:record:a objects
  name: DtcRecordA
- description: Operations for dtc:record:aaaa objects
  name: DtcRecordAaaa
- description: Operations for dtc:record:cname objects
  name: DtcRecordCname
- description: Operations for dtc:record:naptr objects
  name: DtcRecordNaptr
- description: Operations for dtc:record:srv objects
  name: DtcRecordSrv
- description: Operations for dtc:certificate objects
  name: DtcCertificate
- description: Operations for dtc:allrecords objects
  name: DtcAllrecords
- description: Operations for dtc:object objects
  name: DtcObject
- description: Operations for dtc:topology:rule objects
  name: DtcTopologyRule
- description: Operations for dtc:topology:label objects
  name: DtcTopologyLabel
paths:
  /dtc:
    get:
      description: Returns a list of dtc objects matching the search criteria
      operationId: DtcList
      parameters:
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Enter the number of results to be fetched
        explode: true
        in: query
        name: _max_results
        required: false
        schema:
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: Control paging of results
        explode: true
        in: query
        name: _paging
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: Page id for retrieving next page of results
        explode: true
        in: query
        name: _page_id
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: query
        name: filters
        required: false
        schema:
          additionalProperties: true
          type: object
        style: form
      - explode: false
        in: query
        name: extattrfilter
        required: false
        schema:
          additionalProperties: true
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDtcResponse'
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Retrieve dtc objects
      tags:
      - Dtc
  /dtc/{reference}:
    get:
      description: Returns a specific dtc object by reference
      operationId: DtcRead
      parameters:
      - description: Reference of the dtc object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDtcResponse'
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Get a specific dtc object
      tags:
      - Dtc
  /dtc:server:
    get:
      description: Returns a list of dtc:server objects matching the search criteria
      operationId: DtcServerList
      parameters:
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Enter the number of results to be fetched
        explode: true
        in: query
        name: _max_results
        required: false
        schema:
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: Control paging of results
        explode: true
        in: query
        name: _paging
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: Page id for retrieving next page of results
        explode: true
        in: query
        name: _page_id
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: query
        name: filters
        required: false
        schema:
          additionalProperties: true
          type: object
        style: form
      - explode: false
        in: query
        name: extattrfilter
        required: false
        schema:
          additionalProperties: true
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDtcServerResponse'
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Retrieve dtc:server objects
      tags:
      - DtcServer
    post:
      description: Creates a new dtc:server object
      operationId: DtcServerCreate
      parameters:
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DtcServer'
        description: Object data to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDtcServerResponse'
          description: Object created successfully
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - basicAuth: []
      summary: Create a dtc:server object
      tags:
      - DtcServer
      x-tf-resource: dtc_server
      x-tf-datasource: dtc_server
      x-sdk-default-ext-attrs: true
  /dtc:server/{reference}:
    delete:
      description: Deletes a specific dtc:server object by reference
      operationId: DtcServerDelete
      parameters:
      - description: Reference of the dtc:server object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Object deleted successfully
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Delete a dtc:server object
      tags:
      - DtcServer
    get:
      description: Returns a specific dtc:server object by reference
      operationId: DtcServerRead
      parameters:
      - description: Reference of the dtc:server object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDtcServerResponse'
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Get a specific dtc:server object
      tags:
      - DtcServer
    put:
      description: Updates a specific dtc:server object by reference
      operationId: DtcServerUpdate
      parameters:
      - description: Reference of the dtc:server object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DtcServer'
        description: Object data to update
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDtcServerResponse'
          description: Object updated successfully
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Update a dtc:server object
      tags:
      - DtcServer
      x-sdk-default-ext-attrs: true
  /dtc:pool:
    get:
      description: Returns a list of dtc:pool objects matching the search criteria
      operationId: DtcPoolList
      parameters:
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Enter the number of results to be fetched
        explode: true
        in: query
        name: _max_results
        required: false
        schema:
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: Control paging of results
        explode: true
        in: query
        name: _paging
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: Page id for retrieving next page of results
        explode: true
        in: query
        name: _page_id
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: query
        name: filters
        required: false
        schema:
          additionalProperties: true
          type: object
        style: form
      - explode: false
        in: query
        name: extattrfilter
        required: false
        schema:
          additionalProperties: true
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDtcPoolResponse'
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Retrieve dtc:pool objects
      tags:
      - DtcPool
    post:
      description: Creates a new dtc:pool object
      operationId: DtcPoolCreate
      parameters:
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DtcPool'
        description: Object data to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDtcPoolResponse'
          description: Object created successfully
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - basicAuth: []
      summary: Create a dtc:pool object
      tags:
      - DtcPool
      x-tf-resource: dtc_pool
      x-tf-datasource: dtc_pool
      x-sdk-default-ext-attrs: true
  /dtc:pool/{reference}:
    delete:
      description: Deletes a specific dtc:pool object by reference
      operationId: DtcPoolDelete
      parameters:
      - description: Reference of the dtc:pool object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Object deleted successfully
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Delete a dtc:pool object
      tags:
      - DtcPool
    get:
      description: Returns a specific dtc:pool object by reference
      operationId: DtcPoolRead
      parameters:
      - description: Reference of the dtc:pool object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDtcPoolResponse'
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Get a specific dtc:pool object
      tags:
      - DtcPool
    put:
      description: Updates a specific dtc:pool object by reference
      operationId: DtcPoolUpdate
      parameters:
      - description: Reference of the dtc:pool object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DtcPool'
        description: Object data to update
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDtcPoolResponse'
          description: Object updated successfully
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Update a dtc:pool object
      tags:
      - DtcPool
      x-sdk-default-ext-attrs: true
  /dtc:topology:
    get:
      description: Returns a list of dtc:topology objects matching the search criteria
      operationId: DtcTopologyList
      parameters:
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Enter the number of results to be fetched
        explode: true
        in: query
        name: _max_results
        required: false
        schema:
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: Control paging of results
        explode: true
        in: query
        name: _paging
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: Page id for retrieving next page of results
        explode: true
        in: query
        name: _page_id
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: query
        name: filters
        required: false
        schema:
          additionalProperties: true
          type: object
        style: form
      - explode: false
        in: query
        name: extattrfilter
        required: false
        schema:
          additionalProperties: true
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDtcTopologyResponse'
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Retrieve dtc:topology objects
      tags:
      - DtcTopology
    post:
      description: Creates a new dtc:topology object
      operationId: DtcTopologyCreate
      parameters:
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DtcTopology'
        description: Object data to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDtcTopologyResponse'
          description: Object created successfully
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - basicAuth: []
      summary: Create a dtc:topology object
      tags:
      - DtcTopology
      x-tf-resource: dtc_topology
      x-tf-datasource: dtc_topology
      x-sdk-default-ext-attrs: true
  /dtc:topology/{reference}:
    delete:
      description: Deletes a specific dtc:topology object by reference
      operationId: DtcTopologyDelete
      parameters:
      - description: Reference of the dtc:topology object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Object deleted successfully
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Delete a dtc:topology object
      tags:
      - DtcTopology
    get:
      description: Returns a specific dtc:topology object by reference
      operationId: DtcTopologyRead
      parameters:
      - description: Reference of the dtc:topology object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDtcTopologyResponse'
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Get a specific dtc:topology object
      tags:
      - DtcTopology
    put:
      description: Updates a specific dtc:topology object by reference
      operationId: DtcTopologyUpdate
      parameters:
      - description: Reference of the dtc:topology object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DtcTopology'
        description: Object data to update
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDtcTopologyResponse'
          description: Object updated successfully
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Update a dtc:topology object
      tags:
      - DtcTopology
      x-sdk-default-ext-attrs: true
  /dtc:lbdn:
    get:
      description: Returns a list of dtc:lbdn objects matching the search criteria
      operationId: DtcLbdnList
      parameters:
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Enter the number of results to be fetched
        explode: true
        in: query
        name: _max_results
        required: false
        schema:
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: Control paging of results
        explode: true
        in: query
        name: _paging
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: Page id for retrieving next page of results
        explode: true
        in: query
        name: _page_id
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: query
        name: filters
        required: false
        schema:
          additionalProperties: true
          type: object
        style: form
      - explode: false
        in: query
        name: extattrfilter
        required: false
        schema:
          additionalProperties: true
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDtcLbdnResponse'
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Retrieve dtc:lbdn objects
      tags:
      - DtcLbdn
    post:
      description: Creates a new dtc:lbdn object
      operationId: DtcLbdnCreate
      parameters:
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DtcLbdn'
        description: Object data to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDtcLbdnResponse'
          description: Object created successfully
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - basicAuth: []
      summary: Create a dtc:lbdn object
      tags:
      - DtcLbdn
      x-tf-resource: dtc_lbdn
      x-tf-datasource: dtc_lbdn
      x-sdk-default-ext-attrs: true
  /dtc:lbdn/{reference}:
    delete:
      description: Deletes a specific dtc:lbdn object by reference
      operationId: DtcLbdnDelete
      parameters:
      - description: Reference of the dtc:lbdn object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Object deleted successfully
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Delete a dtc:lbdn object
      tags:
      - DtcLbdn
    get:
      description: Returns a specific dtc:lbdn object by reference
      operationId: DtcLbdnRead
      parameters:
      - description: Reference of the dtc:lbdn object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDtcLbdnResponse'
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Get a specific dtc:lbdn object
      tags:
      - DtcLbdn
    put:
      description: Updates a specific dtc:lbdn object by reference
      operationId: DtcLbdnUpdate
      parameters:
      - description: Reference of the dtc:lbdn object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DtcLbdn'
        description: Object data to update
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDtcLbdnResponse'
          description: Object updated successfully
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Update a dtc:lbdn object
      tags:
      - DtcLbdn
      x-sdk-default-ext-attrs: true
  /dtc:monitor:
    get:
      description: Returns a list of dtc:monitor objects matching the search criteria
      operationId: DtcMonitorList
      parameters:
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Enter the number of results to be fetched
        explode: true
        in: query
        name: _max_results
        required: false
        schema:
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: Control paging of results
        explode: true
        in: query
        name: _paging
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: Page id for retrieving next page of results
        explode: true
        in: query
        name: _page_id
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: query
        name: filters
        required: false
        schema:
          additionalProperties: true
          type: object
        style: form
      - explode: false
        in: query
        name: extattrfilter
        required: false
        schema:
          additionalProperties: true
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDtcMonitorResponse'
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Retrieve dtc:monitor objects
      tags:
      - DtcMonitor
  /dtc:monitor/{reference}:
    get:
      description: Returns a specific dtc:monitor object by reference
      operationId: DtcMonitorRead
      parameters:
      - description: Reference of the dtc:monitor object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDtcMonitorResponse'
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Get a specific dtc:monitor object
      tags:
      - DtcMonitor
    put:
      description: Updates a specific dtc:monitor object by reference
      operationId: DtcMonitorUpdate
      parameters:
      - description: Reference of the dtc:monitor object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DtcMonitor'
        description: Object data to update
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDtcMonitorResponse'
          description: Object updated successfully
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Update a dtc:monitor object
      tags:
      - DtcMonitor
      x-sdk-default-ext-attrs: true
  /dtc:monitor:http:
    get:
      description: Returns a list of dtc:monitor:http objects matching the search
        criteria
      operationId: DtcMonitorHttpList
      parameters:
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Enter the number of results to be fetched
        explode: true
        in: query
        name: _max_results
        required: false
        schema:
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: Control paging of results
        explode: true
        in: query
        name: _paging
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: Page id for retrieving next page of results
        explode: true
        in: query
        name: _page_id
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: query
        name: filters
        required: false
        schema:
          additionalProperties: true
          type: object
        style: form
      - explode: false
        in: query
        name: extattrfilter
        required: false
        schema:
          additionalProperties: true
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDtcMonitorHttpResponse'
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Retrieve dtc:monitor:http objects
      tags:
      - DtcMonitorHttp
    post:
      description: Creates a new dtc:monitor:http object
      operationId: DtcMonitorHttpCreate
      parameters:
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DtcMonitorHttp'
        description: Object data to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDtcMonitorHttpResponse'
          description: Object created successfully
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - basicAuth: []
      summary: Create a dtc:monitor:http object
      tags:
      - DtcMonitorHttp
      x-tf-resource: dtc_monitor_http
      x-tf-datasource: dtc_monitor_http
      x-sdk-default-ext-attrs: true
  /dtc:monitor:http/{reference}:
    delete:
      description: Deletes a specific dtc:monitor:http object by reference
      operationId: DtcMonitorHttpDelete
      parameters:
      - description: Reference of the dtc:monitor:http object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Object deleted successfully
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Delete a dtc:monitor:http object
      tags:
      - DtcMonitorHttp
    get:
      description: Returns a specific dtc:monitor:http object by reference
      operationId: DtcMonitorHttpRead
      parameters:
      - description: Reference of the dtc:monitor:http object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDtcMonitorHttpResponse'
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Get a specific dtc:monitor:http object
      tags:
      - DtcMonitorHttp
    put:
      description: Updates a specific dtc:monitor:http object by reference
      operationId: DtcMonitorHttpUpdate
      parameters:
      - description: Reference of the dtc:monitor:http object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DtcMonitorHttp'
        description: Object data to update
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDtcMonitorHttpResponse'
          description: Object updated successfully
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Update a dtc:monitor:http object
      tags:
      - DtcMonitorHttp
      x-sdk-default-ext-attrs: true
  /dtc:monitor:icmp:
    get:
      description: Returns a list of dtc:monitor:icmp objects matching the search
        criteria
      operationId: DtcMonitorIcmpList
      parameters:
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Enter the number of results to be fetched
        explode: true
        in: query
        name: _max_results
        required: false
        schema:
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: Control paging of results
        explode: true
        in: query
        name: _paging
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: Page id for retrieving next page of results
        explode: true
        in: query
        name: _page_id
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: query
        name: filters
        required: false
        schema:
          additionalProperties: true
          type: object
        style: form
      - explode: false
        in: query
        name: extattrfilter
        required: false
        schema:
          additionalProperties: true
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDtcMonitorIcmpResponse'
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Retrieve dtc:monitor:icmp objects
      tags:
      - DtcMonitorIcmp
    post:
      description: Creates a new dtc:monitor:icmp object
      operationId: DtcMonitorIcmpCreate
      parameters:
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DtcMonitorIcmp'
        description: Object data to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDtcMonitorIcmpResponse'
          description: Object created successfully
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - basicAuth: []
      summary: Create a dtc:monitor:icmp object
      tags:
      - DtcMonitorIcmp
      x-tf-resource: dtc_monitor_icmp
      x-tf-datasource: dtc_monitor_icmp
      x-sdk-default-ext-attrs: true
  /dtc:monitor:icmp/{reference}:
    delete:
      description: Deletes a specific dtc:monitor:icmp object by reference
      operationId: DtcMonitorIcmpDelete
      parameters:
      - description: Reference of the dtc:monitor:icmp object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Object deleted successfully
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Delete a dtc:monitor:icmp object
      tags:
      - DtcMonitorIcmp
    get:
      description: Returns a specific dtc:monitor:icmp object by reference
      operationId: DtcMonitorIcmpRead
      parameters:
      - description: Reference of the dtc:monitor:icmp object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDtcMonitorIcmpResponse'
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Get a specific dtc:monitor:icmp object
      tags:
      - DtcMonitorIcmp
    put:
      description: Updates a specific dtc:monitor:icmp object by reference
      operationId: DtcMonitorIcmpUpdate
      parameters:
      - description: Reference of the dtc:monitor:icmp object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DtcMonitorIcmp'
        description: Object data to update
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDtcMonitorIcmpResponse'
          description: Object updated successfully
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Update a dtc:monitor:icmp object
      tags:
      - DtcMonitorIcmp
      x-sdk-default-ext-attrs: true
  /dtc:monitor:pdp:
    get:
      description: Returns a list of dtc:monitor:pdp objects matching the search criteria
      operationId: DtcMonitorPdpList
      parameters:
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Enter the number of results to be fetched
        explode: true
        in: query
        name: _max_results
        required: false
        schema:
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: Control paging of results
        explode: true
        in: query
        name: _paging
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: Page id for retrieving next page of results
        explode: true
        in: query
        name: _page_id
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: query
        name: filters
        required: false
        schema:
          additionalProperties: true
          type: object
        style: form
      - explode: false
        in: query
        name: extattrfilter
        required: false
        schema:
          additionalProperties: true
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDtcMonitorPdpResponse'
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Retrieve dtc:monitor:pdp objects
      tags:
      - DtcMonitorPdp
    post:
      description: Creates a new dtc:monitor:pdp object
      operationId: DtcMonitorPdpCreate
      parameters:
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DtcMonitorPdp'
        description: Object data to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDtcMonitorPdpResponse'
          description: Object created successfully
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - basicAuth: []
      summary: Create a dtc:monitor:pdp object
      tags:
      - DtcMonitorPdp
      x-tf-resource: dtc_monitor_pdp
      x-tf-datasource: dtc_monitor_pdp
      x-sdk-default-ext-attrs: true
  /dtc:monitor:pdp/{reference}:
    delete:
      description: Deletes a specific dtc:monitor:pdp object by reference
      operationId: DtcMonitorPdpDelete
      parameters:
      - description: Reference of the dtc:monitor:pdp object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Object deleted successfully
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Delete a dtc:monitor:pdp object
      tags:
      - DtcMonitorPdp
    get:
      description: Returns a specific dtc:monitor:pdp object by reference
      operationId: DtcMonitorPdpRead
      parameters:
      - description: Reference of the dtc:monitor:pdp object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDtcMonitorPdpResponse'
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Get a specific dtc:monitor:pdp object
      tags:
      - DtcMonitorPdp
    put:
      description: Updates a specific dtc:monitor:pdp object by reference
      operationId: DtcMonitorPdpUpdate
      parameters:
      - description: Reference of the dtc:monitor:pdp object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DtcMonitorPdp'
        description: Object data to update
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDtcMonitorPdpResponse'
          description: Object updated successfully
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Update a dtc:monitor:pdp object
      tags:
      - DtcMonitorPdp
      x-sdk-default-ext-attrs: true
  /dtc:monitor:sip:
    get:
      description: Returns a list of dtc:monitor:sip objects matching the search criteria
      operationId: DtcMonitorSipList
      parameters:
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Enter the number of results to be fetched
        explode: true
        in: query
        name: _max_results
        required: false
        schema:
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: Control paging of results
        explode: true
        in: query
        name: _paging
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: Page id for retrieving next page of results
        explode: true
        in: query
        name: _page_id
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: query
        name: filters
        required: false
        schema:
          additionalProperties: true
          type: object
        style: form
      - explode: false
        in: query
        name: extattrfilter
        required: false
        schema:
          additionalProperties: true
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDtcMonitorSipResponse'
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Retrieve dtc:monitor:sip objects
      tags:
      - DtcMonitorSip
    post:
      description: Creates a new dtc:monitor:sip object
      operationId: DtcMonitorSipCreate
      parameters:
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DtcMonitorSip'
        description: Object data to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDtcMonitorSipResponse'
          description: Object created successfully
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - basicAuth: []
      summary: Create a dtc:monitor:sip object
      tags:
      - DtcMonitorSip
      x-tf-resource: dtc_monitor_sip
      x-tf-datasource: dtc_monitor_sip
      x-sdk-default-ext-attrs: true
  /dtc:monitor:sip/{reference}:
    delete:
      description: Deletes a specific dtc:monitor:sip object by reference
      operationId: DtcMonitorSipDelete
      parameters:
      - description: Reference of the dtc:monitor:sip object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Object deleted successfully
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Delete a dtc:monitor:sip object
      tags:
      - DtcMonitorSip
    get:
      description: Returns a specific dtc:monitor:sip object by reference
      operationId: DtcMonitorSipRead
      parameters:
      - description: Reference of the dtc:monitor:sip object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDtcMonitorSipResponse'
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Get a specific dtc:monitor:sip object
      tags:
      - DtcMonitorSip
    put:
      description: Updates a specific dtc:monitor:sip object by reference
      operationId: DtcMonitorSipUpdate
      parameters:
      - description: Reference of the dtc:monitor:sip object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DtcMonitorSip'
        description: Object data to update
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDtcMonitorSipResponse'
          description: Object updated successfully
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Update a dtc:monitor:sip object
      tags:
      - DtcMonitorSip
      x-sdk-default-ext-attrs: true
  /dtc:monitor:snmp:
    get:
      description: Returns a list of dtc:monitor:snmp objects matching the search
        criteria
      operationId: DtcMonitorSnmpList
      parameters:
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Enter the number of results to be fetched
        explode: true
        in: query
        name: _max_results
        required: false
        schema:
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: Control paging of results
        explode: true
        in: query
        name: _paging
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: Page id for retrieving next page of results
        explode: true
        in: query
        name: _page_id
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: query
        name: filters
        required: false
        schema:
          additionalProperties: true
          type: object
        style: form
      - explode: false
        in: query
        name: extattrfilter
        required: false
        schema:
          additionalProperties: true
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDtcMonitorSnmpResponse'
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Retrieve dtc:monitor:snmp objects
      tags:
      - DtcMonitorSnmp
    post:
      description: Creates a new dtc:monitor:snmp object
      operationId: DtcMonitorSnmpCreate
      parameters:
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DtcMonitorSnmp'
        description: Object data to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDtcMonitorSnmpResponse'
          description: Object created successfully
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - basicAuth: []
      summary: Create a dtc:monitor:snmp object
      tags:
      - DtcMonitorSnmp
      x-tf-resource: dtc_monitor_snmp
      x-tf-datasource: dtc_monitor_snmp
      x-sdk-default-ext-attrs: true
  /dtc:monitor:snmp/{reference}:
    delete:
      description: Deletes a specific dtc:monitor:snmp object by reference
      operationId: DtcMonitorSnmpDelete
      parameters:
      - description: Reference of the dtc:monitor:snmp object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Object deleted successfully
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Delete a dtc:monitor:snmp object
      tags:
      - DtcMonitorSnmp
    get:
      description: Returns a specific dtc:monitor:snmp object by reference
      operationId: DtcMonitorSnmpRead
      parameters:
      - description: Reference of the dtc:monitor:snmp object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDtcMonitorSnmpResponse'
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Get a specific dtc:monitor:snmp object
      tags:
      - DtcMonitorSnmp
    put:
      description: Updates a specific dtc:monitor:snmp object by reference
      operationId: DtcMonitorSnmpUpdate
      parameters:
      - description: Reference of the dtc:monitor:snmp object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DtcMonitorSnmp'
        description: Object data to update
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDtcMonitorSnmpResponse'
          description: Object updated successfully
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Update a dtc:monitor:snmp object
      tags:
      - DtcMonitorSnmp
      x-sdk-default-ext-attrs: true
  /dtc:monitor:tcp:
    get:
      description: Returns a list of dtc:monitor:tcp objects matching the search criteria
      operationId: DtcMonitorTcpList
      parameters:
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Enter the number of results to be fetched
        explode: true
        in: query
        name: _max_results
        required: false
        schema:
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: Control paging of results
        explode: true
        in: query
        name: _paging
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: Page id for retrieving next page of results
        explode: true
        in: query
        name: _page_id
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: query
        name: filters
        required: false
        schema:
          additionalProperties: true
          type: object
        style: form
      - explode: false
        in: query
        name: extattrfilter
        required: false
        schema:
          additionalProperties: true
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDtcMonitorTcpResponse'
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Retrieve dtc:monitor:tcp objects
      tags:
      - DtcMonitorTcp
    post:
      description: Creates a new dtc:monitor:tcp object
      operationId: DtcMonitorTcpCreate
      parameters:
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DtcMonitorTcp'
        description: Object data to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDtcMonitorTcpResponse'
          description: Object created successfully
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - basicAuth: []
      summary: Create a dtc:monitor:tcp object
      tags:
      - DtcMonitorTcp
      x-tf-resource: dtc_monitor_tcp
      x-tf-datasource: dtc_monitor_tcp
      x-sdk-default-ext-attrs: true
  /dtc:monitor:tcp/{reference}:
    delete:
      description: Deletes a specific dtc:monitor:tcp object by reference
      operationId: DtcMonitorTcpDelete
      parameters:
      - description: Reference of the dtc:monitor:tcp object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Object deleted successfully
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Delete a dtc:monitor:tcp object
      tags:
      - DtcMonitorTcp
    get:
      description: Returns a specific dtc:monitor:tcp object by reference
      operationId: DtcMonitorTcpRead
      parameters:
      - description: Reference of the dtc:monitor:tcp object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDtcMonitorTcpResponse'
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Get a specific dtc:monitor:tcp object
      tags:
      - DtcMonitorTcp
    put:
      description: Updates a specific dtc:monitor:tcp object by reference
      operationId: DtcMonitorTcpUpdate
      parameters:
      - description: Reference of the dtc:monitor:tcp object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DtcMonitorTcp'
        description: Object data to update
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDtcMonitorTcpResponse'
          description: Object updated successfully
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Update a dtc:monitor:tcp object
      tags:
      - DtcMonitorTcp
      x-sdk-default-ext-attrs: true
  /dtc:record:a:
    get:
      description: Returns a list of dtc:record:a objects matching the search criteria
      operationId: DtcRecordAList
      parameters:
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Enter the number of results to be fetched
        explode: true
        in: query
        name: _max_results
        required: false
        schema:
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: Control paging of results
        explode: true
        in: query
        name: _paging
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: Page id for retrieving next page of results
        explode: true
        in: query
        name: _page_id
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: query
        name: filters
        required: false
        schema:
          additionalProperties: true
          type: object
        style: form
      - explode: false
        in: query
        name: extattrfilter
        required: false
        schema:
          additionalProperties: true
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDtcRecordAResponse'
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Retrieve dtc:record:a objects
      tags:
      - DtcRecordA
    post:
      description: Creates a new dtc:record:a object
      operationId: DtcRecordACreate
      parameters:
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DtcRecordA'
        description: Object data to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDtcRecordAResponse'
          description: Object created successfully
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - basicAuth: []
      summary: Create a dtc:record:a object
      tags:
      - DtcRecordA
      x-tf-resource: dtc_record_a
      x-tf-datasource: dtc_record_a
  /dtc:record:a/{reference}:
    delete:
      description: Deletes a specific dtc:record:a object by reference
      operationId: DtcRecordADelete
      parameters:
      - description: Reference of the dtc:record:a object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Object deleted successfully
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Delete a dtc:record:a object
      tags:
      - DtcRecordA
    get:
      description: Returns a specific dtc:record:a object by reference
      operationId: DtcRecordARead
      parameters:
      - description: Reference of the dtc:record:a object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDtcRecordAResponse'
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Get a specific dtc:record:a object
      tags:
      - DtcRecordA
    put:
      description: Updates a specific dtc:record:a object by reference
      operationId: DtcRecordAUpdate
      parameters:
      - description: Reference of the dtc:record:a object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DtcRecordA'
        description: Object data to update
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDtcRecordAResponse'
          description: Object updated successfully
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Update a dtc:record:a object
      tags:
      - DtcRecordA
  /dtc:record:aaaa:
    get:
      description: Returns a list of dtc:record:aaaa objects matching the search criteria
      operationId: DtcRecordAaaaList
      parameters:
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Enter the number of results to be fetched
        explode: true
        in: query
        name: _max_results
        required: false
        schema:
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: Control paging of results
        explode: true
        in: query
        name: _paging
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: Page id for retrieving next page of results
        explode: true
        in: query
        name: _page_id
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: query
        name: filters
        required: false
        schema:
          additionalProperties: true
          type: object
        style: form
      - explode: false
        in: query
        name: extattrfilter
        required: false
        schema:
          additionalProperties: true
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDtcRecordAaaaResponse'
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Retrieve dtc:record:aaaa objects
      tags:
      - DtcRecordAaaa
    post:
      description: Creates a new dtc:record:aaaa object
      operationId: DtcRecordAaaaCreate
      parameters:
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DtcRecordAaaa'
        description: Object data to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDtcRecordAaaaResponse'
          description: Object created successfully
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - basicAuth: []
      summary: Create a dtc:record:aaaa object
      tags:
      - DtcRecordAaaa
      x-tf-resource: dtc_record_aaaa
      x-tf-datasource: dtc_record_aaaa
  /dtc:record:aaaa/{reference}:
    delete:
      description: Deletes a specific dtc:record:aaaa object by reference
      operationId: DtcRecordAaaaDelete
      parameters:
      - description: Reference of the dtc:record:aaaa object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Object deleted successfully
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Delete a dtc:record:aaaa object
      tags:
      - DtcRecordAaaa
    get:
      description: Returns a specific dtc:record:aaaa object by reference
      operationId: DtcRecordAaaaRead
      parameters:
      - description: Reference of the dtc:record:aaaa object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDtcRecordAaaaResponse'
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Get a specific dtc:record:aaaa object
      tags:
      - DtcRecordAaaa
    put:
      description: Updates a specific dtc:record:aaaa object by reference
      operationId: DtcRecordAaaaUpdate
      parameters:
      - description: Reference of the dtc:record:aaaa object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DtcRecordAaaa'
        description: Object data to update
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDtcRecordAaaaResponse'
          description: Object updated successfully
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Update a dtc:record:aaaa object
      tags:
      - DtcRecordAaaa
  /dtc:record:cname:
    get:
      description: Returns a list of dtc:record:cname objects matching the search
        criteria
      operationId: DtcRecordCnameList
      parameters:
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Enter the number of results to be fetched
        explode: true
        in: query
        name: _max_results
        required: false
        schema:
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: Control paging of results
        explode: true
        in: query
        name: _paging
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: Page id for retrieving next page of results
        explode: true
        in: query
        name: _page_id
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: query
        name: filters
        required: false
        schema:
          additionalProperties: true
          type: object
        style: form
      - explode: false
        in: query
        name: extattrfilter
        required: false
        schema:
          additionalProperties: true
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDtcRecordCnameResponse'
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Retrieve dtc:record:cname objects
      tags:
      - DtcRecordCname
    post:
      description: Creates a new dtc:record:cname object
      operationId: DtcRecordCnameCreate
      parameters:
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DtcRecordCname'
        description: Object data to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDtcRecordCnameResponse'
          description: Object created successfully
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - basicAuth: []
      summary: Create a dtc:record:cname object
      tags:
      - DtcRecordCname
      x-tf-resource: dtc_record_cname
      x-tf-datasource: dtc_record_cname
  /dtc:record:cname/{reference}:
    delete:
      description: Deletes a specific dtc:record:cname object by reference
      operationId: DtcRecordCnameDelete
      parameters:
      - description: Reference of the dtc:record:cname object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Object deleted successfully
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Delete a dtc:record:cname object
      tags:
      - DtcRecordCname
    get:
      description: Returns a specific dtc:record:cname object by reference
      operationId: DtcRecordCnameRead
      parameters:
      - description: Reference of the dtc:record:cname object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDtcRecordCnameResponse'
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Get a specific dtc:record:cname object
      tags:
      - DtcRecordCname
    put:
      description: Updates a specific dtc:record:cname object by reference
      operationId: DtcRecordCnameUpdate
      parameters:
      - description: Reference of the dtc:record:cname object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DtcRecordCname'
        description: Object data to update
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDtcRecordCnameResponse'
          description: Object updated successfully
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Update a dtc:record:cname object
      tags:
      - DtcRecordCname
  /dtc:record:naptr:
    get:
      description: Returns a list of dtc:record:naptr objects matching the search
        criteria
      operationId: DtcRecordNaptrList
      parameters:
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Enter the number of results to be fetched
        explode: true
        in: query
        name: _max_results
        required: false
        schema:
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: Control paging of results
        explode: true
        in: query
        name: _paging
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: Page id for retrieving next page of results
        explode: true
        in: query
        name: _page_id
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: query
        name: filters
        required: false
        schema:
          additionalProperties: true
          type: object
        style: form
      - explode: false
        in: query
        name: extattrfilter
        required: false
        schema:
          additionalProperties: true
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDtcRecordNaptrResponse'
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Retrieve dtc:record:naptr objects
      tags:
      - DtcRecordNaptr
    post:
      description: Creates a new dtc:record:naptr object
      operationId: DtcRecordNaptrCreate
      parameters:
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DtcRecordNaptr'
        description: Object data to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDtcRecordNaptrResponse'
          description: Object created successfully
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - basicAuth: []
      summary: Create a dtc:record:naptr object
      tags:
      - DtcRecordNaptr
      x-tf-resource: dtc_record_naptr
      x-tf-datasource: dtc_record_naptr
  /dtc:record:naptr/{reference}:
    delete:
      description: Deletes a specific dtc:record:naptr object by reference
      operationId: DtcRecordNaptrDelete
      parameters:
      - description: Reference of the dtc:record:naptr object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Object deleted successfully
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Delete a dtc:record:naptr object
      tags:
      - DtcRecordNaptr
    get:
      description: Returns a specific dtc:record:naptr object by reference
      operationId: DtcRecordNaptrRead
      parameters:
      - description: Reference of the dtc:record:naptr object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDtcRecordNaptrResponse'
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Get a specific dtc:record:naptr object
      tags:
      - DtcRecordNaptr
    put:
      description: Updates a specific dtc:record:naptr object by reference
      operationId: DtcRecordNaptrUpdate
      parameters:
      - description: Reference of the dtc:record:naptr object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DtcRecordNaptr'
        description: Object data to update
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDtcRecordNaptrResponse'
          description: Object updated successfully
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Update a dtc:record:naptr object
      tags:
      - DtcRecordNaptr
  /dtc:record:srv:
    get:
      description: Returns a list of dtc:record:srv objects matching the search criteria
      operationId: DtcRecordSrvList
      parameters:
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Enter the number of results to be fetched
        explode: true
        in: query
        name: _max_results
        required: false
        schema:
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: Control paging of results
        explode: true
        in: query
        name: _paging
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: Page id for retrieving next page of results
        explode: true
        in: query
        name: _page_id
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: query
        name: filters
        required: false
        schema:
          additionalProperties: true
          type: object
        style: form
      - explode: false
        in: query
        name: extattrfilter
        required: false
        schema:
          additionalProperties: true
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDtcRecordSrvResponse'
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Retrieve dtc:record:srv objects
      tags:
      - DtcRecordSrv
    post:
      description: Creates a new dtc:record:srv object
      operationId: DtcRecordSrvCreate
      parameters:
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DtcRecordSrv'
        description: Object data to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDtcRecordSrvResponse'
          description: Object created successfully
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - basicAuth: []
      summary: Create a dtc:record:srv object
      tags:
      - DtcRecordSrv
      x-tf-resource: dtc_record_srv
      x-tf-datasource: dtc_record_srv
  /dtc:record:srv/{reference}:
    delete:
      description: Deletes a specific dtc:record:srv object by reference
      operationId: DtcRecordSrvDelete
      parameters:
      - description: Reference of the dtc:record:srv object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Object deleted successfully
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Delete a dtc:record:srv object
      tags:
      - DtcRecordSrv
    get:
      description: Returns a specific dtc:record:srv object by reference
      operationId: DtcRecordSrvRead
      parameters:
      - description: Reference of the dtc:record:srv object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDtcRecordSrvResponse'
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Get a specific dtc:record:srv object
      tags:
      - DtcRecordSrv
    put:
      description: Updates a specific dtc:record:srv object by reference
      operationId: DtcRecordSrvUpdate
      parameters:
      - description: Reference of the dtc:record:srv object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DtcRecordSrv'
        description: Object data to update
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDtcRecordSrvResponse'
          description: Object updated successfully
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Update a dtc:record:srv object
      tags:
      - DtcRecordSrv
  /dtc:certificate:
    get:
      description: Returns a list of dtc:certificate objects matching the search criteria
      operationId: DtcCertificateList
      parameters:
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Enter the number of results to be fetched
        explode: true
        in: query
        name: _max_results
        required: false
        schema:
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: Control paging of results
        explode: true
        in: query
        name: _paging
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: Page id for retrieving next page of results
        explode: true
        in: query
        name: _page_id
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: query
        name: filters
        required: false
        schema:
          additionalProperties: true
          type: object
        style: form
      - explode: false
        in: query
        name: extattrfilter
        required: false
        schema:
          additionalProperties: true
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDtcCertificateResponse'
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Retrieve dtc:certificate objects
      tags:
      - DtcCertificate
  /dtc:certificate/{reference}:
    get:
      description: Returns a specific dtc:certificate object by reference
      operationId: DtcCertificateRead
      parameters:
      - description: Reference of the dtc:certificate object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDtcCertificateResponse'
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Get a specific dtc:certificate object
      tags:
      - DtcCertificate
  /dtc:allrecords:
    get:
      description: Returns a list of dtc:allrecords objects matching the search criteria
      operationId: DtcAllrecordsList
      parameters:
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Enter the number of results to be fetched
        explode: true
        in: query
        name: _max_results
        required: false
        schema:
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: Control paging of results
        explode: true
        in: query
        name: _paging
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: Page id for retrieving next page of results
        explode: true
        in: query
        name: _page_id
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: query
        name: filters
        required: false
        schema:
          additionalProperties: true
          type: object
        style: form
      - explode: false
        in: query
        name: extattrfilter
        required: false
        schema:
          additionalProperties: true
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDtcAllrecordsResponse'
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Retrieve dtc:allrecords objects
      tags:
      - DtcAllrecords
  /dtc:allrecords/{reference}:
    get:
      description: Returns a specific dtc:allrecords object by reference
      operationId: DtcAllrecordsRead
      parameters:
      - description: Reference of the dtc:allrecords object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDtcAllrecordsResponse'
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Get a specific dtc:allrecords object
      tags:
      - DtcAllrecords
    put:
      description: Updates a specific dtc:allrecords object by reference
      operationId: DtcAllrecordsUpdate
      parameters:
      - description: Reference of the dtc:allrecords object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DtcAllrecords'
        description: Object data to update
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDtcAllrecordsResponse'
          description: Object updated successfully
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Update a dtc:allrecords object
      tags:
      - DtcAllrecords
  /dtc:object:
    get:
      description: Returns a list of dtc:object objects matching the search criteria
      operationId: DtcObjectList
      parameters:
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Enter the number of results to be fetched
        explode: true
        in: query
        name: _max_results
        required: false
        schema:
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: Control paging of results
        explode: true
        in: query
        name: _paging
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: Page id for retrieving next page of results
        explode: true
        in: query
        name: _page_id
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: query
        name: filters
        required: false
        schema:
          additionalProperties: true
          type: object
        style: form
      - explode: false
        in: query
        name: extattrfilter
        required: false
        schema:
          additionalProperties: true
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDtcObjectResponse'
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Retrieve dtc:object objects
      tags:
      - DtcObject
  /dtc:object/{reference}:
    get:
      description: Returns a specific dtc:object object by reference
      operationId: DtcObjectRead
      parameters:
      - description: Reference of the dtc:object object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDtcObjectResponse'
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Get a specific dtc:object object
      tags:
      - DtcObject
    put:
      description: Updates a specific dtc:object object by reference
      operationId: DtcObjectUpdate
      parameters:
      - description: Reference of the dtc:object object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DtcObject'
        description: Object data to update
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDtcObjectResponse'
          description: Object updated successfully
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Update a dtc:object object
      tags:
      - DtcObject
      x-sdk-default-ext-attrs: true
  /dtc:topology:rule:
    get:
      description: Returns a list of dtc:topology:rule objects matching the search
        criteria
      operationId: DtcTopologyRuleList
      parameters:
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Enter the number of results to be fetched
        explode: true
        in: query
        name: _max_results
        required: false
        schema:
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: Control paging of results
        explode: true
        in: query
        name: _paging
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: Page id for retrieving next page of results
        explode: true
        in: query
        name: _page_id
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: query
        name: filters
        required: false
        schema:
          additionalProperties: true
          type: object
        style: form
      - explode: false
        in: query
        name: extattrfilter
        required: false
        schema:
          additionalProperties: true
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDtcTopologyRuleResponse'
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Retrieve dtc:topology:rule objects
      tags:
      - DtcTopologyRule
  /dtc:topology:rule/{reference}:
    get:
      description: Returns a specific dtc:topology:rule object by reference
      operationId: DtcTopologyRuleRead
      parameters:
      - description: Reference of the dtc:topology:rule object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDtcTopologyRuleResponse'
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Get a specific dtc:topology:rule object
      tags:
      - DtcTopologyRule
    put:
      description: Updates a specific dtc:topology:rule object by reference
      operationId: DtcTopologyRuleUpdate
      parameters:
      - description: Reference of the dtc:topology:rule object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DtcTopologyRule'
        description: Object data to update
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDtcTopologyRuleResponse'
          description: Object updated successfully
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Update a dtc:topology:rule object
      tags:
      - DtcTopologyRule
  /dtc:topology:label:
    get:
      description: Returns a list of dtc:topology:label objects matching the search
        criteria
      operationId: DtcTopologyLabelList
      parameters:
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Enter the number of results to be fetched
        explode: true
        in: query
        name: _max_results
        required: false
        schema:
          format: int32
          minimum: 1
          type: integer
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: Control paging of results
        explode: true
        in: query
        name: _paging
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      - description: Page id for retrieving next page of results
        explode: true
        in: query
        name: _page_id
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: query
        name: filters
        required: false
        schema:
          additionalProperties: true
          type: object
        style: form
      - explode: false
        in: query
        name: extattrfilter
        required: false
        schema:
          additionalProperties: true
          type: object
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDtcTopologyLabelResponse'
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Retrieve dtc:topology:label objects
      tags:
      - DtcTopologyLabel
  /dtc:topology:label/{reference}:
    get:
      description: Returns a specific dtc:topology:label object by reference
      operationId: DtcTopologyLabelRead
      parameters:
      - description: Reference of the dtc:topology:label object
        explode: false
        in: path
        name: reference
        required: true
        schema:
          type: string
        style: simple
      - description: Enter the field names followed by comma
        explode: true
        in: query
        name: _return_fields
        required: false
        schema:
          type: string
        style: form
      - description: "Enter the field names followed by comma, this returns the required\
          \ fields along with the default fields"
        explode: true
        in: query
        name: _return_fields+
        required: false
        schema:
          type: string
        style: form
      - description: Select 1 if result is required as an object
        explode: true
        in: query
        name: _return_as_object
        required: false
        schema:
          enum:
          - 0
          - 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDtcTopologyLabelResponse'
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - basicAuth: []
      summary: Get a specific dtc:topology:label object
      tags:
      - DtcTopologyLabel
components:
  parameters:
    ReturnFields:
      description: Enter the field names followed by comma
      explode: true
      in: query
      name: _return_fields
      required: false
      schema:
        type: string
      style: form
    ReturnFieldsPlus:
      description: "Enter the field names followed by comma, this returns the required\
        \ fields along with the default fields"
      explode: true
      in: query
      name: _return_fields+
      required: false
      schema:
        type: string
      style: form
    MaxResults:
      description: Enter the number of results to be fetched
      explode: true
      in: query
      name: _max_results
      required: false
      schema:
        format: int32
        minimum: 1
        type: integer
      style: form
    ReturnAsObject:
      description: Select 1 if result is required as an object
      explode: true
      in: query
      name: _return_as_object
      required: false
      schema:
        enum:
        - 0
        - 1
        type: integer
      style: form
    Paging:
      description: Control paging of results
      explode: true
      in: query
      name: _paging
      required: false
      schema:
        enum:
        - 0
        - 1
        type: integer
      style: form
    PageId:
      description: Page id for retrieving next page of results
      explode: true
      in: query
      name: _page_id
      required: false
      schema:
        type: string
      style: form
    ProxySearch:
      description: Search Grid members for data
      explode: true
      in: query
      name: _proxy_search
      required: false
      schema:
        type: string
      style: form
    Schema:
      description: Return schema for this object type
      explode: true
      in: query
      name: _schema
      required: false
      schema:
        enum:
        - 0
        - 1
        type: integer
      style: form
    SchemaVersion:
      description: Schema version to use
      explode: true
      in: query
      name: _schema_version
      required: false
      schema:
        enum:
        - 1
        - 2
        type: integer
      style: form
    GetDoc:
      description: Return documentation with schema
      explode: true
      in: query
      name: _get_doc
      required: false
      schema:
        enum:
        - 0
        - 1
        type: integer
      style: form
    SchemaSearchable:
      description: Return searchable fields with schema
      explode: true
      in: query
      name: _schema_searchable
      required: false
      schema:
        enum:
        - 0
        - 1
        type: integer
      style: form
    Inheritance:
      description: "If this option is set to True, fields which support inheritance,\
        \ will display data properly."
      explode: true
      in: query
      name: _inheritance
      required: false
      schema:
        type: boolean
      style: form
    filters:
      explode: false
      in: query
      name: filters
      required: false
      schema:
        additionalProperties: true
        type: object
      style: form
    ExtAttrFilters:
      explode: false
      in: query
      name: extattrfilter
      required: false
      schema:
        additionalProperties: true
        type: object
      style: form
    Method:
      description: Enter the method type for the request
      explode: true
      in: query
      name: _method
      required: false
      schema:
        type: string
      style: form
    Body:
      explode: true
      in: query
      name: body
      required: false
      schema:
        type: object
      style: form
  schemas:
    ExtAttrs:
      description: Extensible attributes associated with the object.
      example:
        value: ""
      properties:
        value:
          description: The value of the extensible attribute.
      required:
      - value
      type: object
    Dtc:
      additionalProperties: false
      example:
        _ref: _ref
      properties:
        _ref:
          description: The reference to the object.
          type: string
      type: object
    ListDtcResponse:
      oneOf:
      - description: The response format to retrieve __Dtc__ objects.
        items:
          $ref: '#/components/schemas/Dtc'
        title: ListDtcResponseArray
        type: array
      - $ref: '#/components/schemas/ListDtcResponseObject'
    GetDtcResponse:
      oneOf:
      - $ref: '#/components/schemas/Dtc'
      - $ref: '#/components/schemas/GetDtcResponseObjectAsResult'
    UpdateDtcResponse:
      oneOf:
      - $ref: '#/components/schemas/UpdateDtcResponseAsObject'
      - description: The response format to update __Dtc__ .
        title: UpdateDtcResponse
        type: string
    DtcServer:
      additionalProperties: false
      example:
        extattrs:
          key:
            value: ""
        disable: false
        _ref: _ref
        host: Example host
        name: Example name
        health:
          enabled_state: Example enabled_state
          description: Example description
          availability: Example availability
        comment: Example comment
        sni_hostname: Example sni_hostname
        auto_create_host_record: false
        monitors:
        - host: Example host
          monitor: Example monitor
        - host: Example host
          monitor: Example monitor
        use_sni_hostname: false
      properties:
        _ref:
          description: The reference to the object.
          type: string
        auto_create_host_record:
          description: Enabling this option will auto-create a single read-only A/AAAA/CNAME
            record corresponding to the configured hostname and update it if the hostname
            changes.
          example: false
          type: boolean
        comment:
          description: Comment for the DTC Server; maximum 256 characters.
          example: Example comment
          type: string
        disable:
          description: "Determines whether the DTC Server is disabled or not. When\
            \ this is set to False, the fixed address is enabled."
          example: false
          type: boolean
        extattrs:
          additionalProperties:
            $ref: '#/components/schemas/ExtAttrs'
          description: "Extensible attributes associated with the object. For valid\
            \ values for extensible attributes, see {extattrs:values}."
          type: object
        health:
          $ref: '#/components/schemas/DtcServerHealth'
        host:
          description: The address or FQDN of the server.
          example: Example host
          type: string
        monitors:
          description: List of IP/FQDN and monitor pairs to be used for additional
            monitoring.
          enum:
          - dtc:server:monitor
          items:
            $ref: '#/components/schemas/DtcServerMonitors'
          type: array
        name:
          description: The DTC Server display name.
          example: Example name
          type: string
        sni_hostname:
          description: The hostname for Server Name Indication (SNI) in FQDN format.
          example: Example sni_hostname
          type: string
        use_sni_hostname:
          description: "Use flag for: sni_hostname"
          example: false
          type: boolean
      type: object
    DtcServerHealth:
      example:
        enabled_state: Example enabled_state
        description: Example description
        availability: Example availability
      properties:
        availability:
          description: The availability color status.
          enum:
          - NONE
          - GREEN
          - YELLOW
          - RED
          - BLUE
          - GRAY
          example: Example availability
          type: string
        enabled_state:
          description: The enabled state of the object.
          enum:
          - NONE
          - ENABLED
          - DISABLED
          - DISABLED_BY_PARENT
          example: Example enabled_state
          type: string
        description:
          description: The textual description of the object's status.
          example: Example description
          type: string
      type: object
    DtcServerMonitors:
      example:
        host: Example host
        monitor: Example monitor
      properties:
        monitor:
          description: The monitor related to server.
          example: Example monitor
          type: string
        host:
          description: IP address or FQDN of the server used for monitoring.
          example: Example host
          type: string
      type: object
    ListDtcServerResponse:
      oneOf:
      - description: The response format to retrieve __DtcServer__ objects.
        items:
          $ref: '#/components/schemas/DtcServer'
        title: ListDtcServerResponseArray
        type: array
      - $ref: '#/components/schemas/ListDtcServerResponseObject'
    CreateDtcServerResponse:
      oneOf:
      - $ref: '#/components/schemas/CreateDtcServerResponseAsObject'
      - description: The response format to create __DtcServer__.
        title: CreateDtcServerResponse
        type: string
    GetDtcServerResponse:
      oneOf:
      - $ref: '#/components/schemas/DtcServer'
      - $ref: '#/components/schemas/GetDtcServerResponseObjectAsResult'
    UpdateDtcServerResponse:
      oneOf:
      - $ref: '#/components/schemas/UpdateDtcServerResponseAsObject'
      - description: The response format to update __DtcServer__ .
        title: UpdateDtcServerResponse
        type: string
    DtcPool:
      additionalProperties: false
      example:
        lb_alternate_method: Example lb_alternate_method
        consolidated_monitors:
        - members:
          - members
          - members
          full_health_communication: false
          monitor: Example monitor
          availability: Example availability
        - members:
          - members
          - members
          full_health_communication: false
          monitor: Example monitor
          availability: Example availability
        extattrs:
          key:
            value: ""
        lb_preferred_topology: Example lb_preferred_topology
        lb_alternate_topology: Example lb_alternate_topology
        lb_preferred_method: Example lb_preferred_method
        use_ttl: false
        quorum: 1
        health:
          enabled_state: Example enabled_state
          description: Example description
          availability: Example availability
        availability: Example availability
        auto_consolidated_monitors: false
        ttl: 1
        lb_dynamic_ratio_alternate:
          method: Example method
          monitor_metric: Example monitor_metric
          invert_monitor_metric: false
          monitor: Example monitor
          monitor_weighing: Example monitor_weighing
        servers:
        - server: Example server
          ratio: 1
        - server: Example server
          ratio: 1
        disable: false
        _ref: _ref
        name: Example name
        comment: Example comment
        lb_dynamic_ratio_preferred:
          method: Example method
          monitor_metric: Example monitor_metric
          invert_monitor_metric: false
          monitor: Example monitor
          monitor_weighing: Example monitor_weighing
        monitors:
        - dtc:monitor:http
        - dtc:monitor:http
      properties:
        _ref:
          description: The reference to the object.
          type: string
        auto_consolidated_monitors:
          description: Flag for enabling auto managing DTC Consolidated Monitors in
            DTC Pool.
          example: false
          type: boolean
        availability:
          description: "A resource in the pool is available if ANY, at least QUORUM,\
            \ or ALL monitors for the pool say that it is up."
          enum:
          - ALL
          - ANY
          - QUORUM
          example: Example availability
          type: string
        comment:
          description: The comment for the DTC Pool; maximum 256 characters.
          example: Example comment
          type: string
        consolidated_monitors:
          description: List of monitors and associated members statuses of which are
            shared across members and consolidated in server availability determination.
          enum:
          - dtc:pool:consolidated_monitor_health
          items:
            $ref: '#/components/schemas/DtcPoolConsolidatedMonitors'
          type: array
        disable:
          description: "Determines whether the DTC Pool is disabled or not. When this\
            \ is set to False, the fixed address is enabled."
          example: false
          type: boolean
        extattrs:
          additionalProperties:
            $ref: '#/components/schemas/ExtAttrs'
          description: "Extensible attributes associated with the object. For valid\
            \ values for extensible attributes, see {extattrs:values}."
          type: object
        health:
          $ref: '#/components/schemas/DtcPoolHealth'
        lb_alternate_method:
          description: The alternate load balancing method. Use this to select a method
            type from the pool if the preferred method does not return any results.
          enum:
          - ALL_AVAILABLE
          - DYNAMIC_RATIO
          - GLOBAL_AVAILABILITY
          - NONE
          - RATIO
          - ROUND_ROBIN
          - SOURCE_IP_HASH
          - TOPOLOGY
          example: Example lb_alternate_method
          type: string
        lb_alternate_topology:
          description: The alternate topology for load balancing.
          example: Example lb_alternate_topology
          type: string
        lb_dynamic_ratio_alternate:
          $ref: '#/components/schemas/DtcPoolLbDynamicRatioAlternate'
        lb_dynamic_ratio_preferred:
          $ref: '#/components/schemas/DtcPoolLbDynamicRatioPreferred'
        lb_preferred_method:
          description: The preferred load balancing method. Use this to select a method
            type from the pool.
          enum:
          - ALL_AVAILABLE
          - DYNAMIC_RATIO
          - GLOBAL_AVAILABILITY
          - RATIO
          - ROUND_ROBIN
          - SOURCE_IP_HASH
          - TOPOLOGY
          example: Example lb_preferred_method
          type: string
        lb_preferred_topology:
          description: The preferred topology for load balancing.
          example: Example lb_preferred_topology
          type: string
        monitors:
          description: The monitors related to pool.
          enum:
          - dtc:monitor:http
          items:
            enum:
            - dtc:monitor:http
            type: string
          type: array
        name:
          description: The DTC Pool display name.
          example: Example name
          type: string
        quorum:
          description: "For availability mode QUORUM, at least this many monitors\
            \ must report the resource as up for it to be available"
          example: 1
          format: int64
          type: integer
        servers:
          description: The servers related to the pool.
          enum:
          - dtc:server:link
          items:
            $ref: '#/components/schemas/DtcPoolServers'
          type: array
        ttl:
          description: "The Time To Live (TTL) value for the DTC Pool. A 32-bit unsigned\
            \ integer that represents the duration, in seconds, for which the record\
            \ is valid (cached). Zero indicates that the record should not be cached."
          example: 1
          format: int64
          type: integer
        use_ttl:
          description: "Use flag for: ttl"
          example: false
          type: boolean
      type: object
    DtcPoolConsolidatedMonitors:
      example:
        members:
        - members
        - members
        full_health_communication: false
        monitor: Example monitor
        availability: Example availability
      properties:
        members:
          description: Members whose monitor statuses are shared across other members
            in a pool.
          enum:
          - string
          items:
            type: string
          type: array
        monitor:
          description: Monitor whose statuses are shared across other members in a
            pool.
          example: Example monitor
          type: string
        availability:
          description: Servers assigned to a pool with monitor defined are healthy
            if ANY or ALL members report healthy status.
          enum:
          - ALL
          - ANY
          example: Example availability
          type: string
        full_health_communication:
          description: Flag for switching health performing and sharing behavior to
            perform health checks on each DTC grid member that serves related LBDN(s)
            and send them across all DTC grid members from both selected and non-selected
            lists.
          example: false
          type: boolean
      type: object
    DtcPoolHealth:
      example:
        enabled_state: Example enabled_state
        description: Example description
        availability: Example availability
      properties:
        availability:
          description: The availability color status.
          enum:
          - NONE
          - GREEN
          - YELLOW
          - RED
          - BLUE
          - GRAY
          example: Example availability
          type: string
        enabled_state:
          description: The enabled state of the object.
          enum:
          - NONE
          - ENABLED
          - DISABLED
          - DISABLED_BY_PARENT
          example: Example enabled_state
          type: string
        description:
          description: The textual description of the object's status.
          example: Example description
          type: string
      type: object
    DtcPoolLbDynamicRatioAlternate:
      example:
        method: Example method
        monitor_metric: Example monitor_metric
        invert_monitor_metric: false
        monitor: Example monitor
        monitor_weighing: Example monitor_weighing
      properties:
        method:
          description: The method of the DTC dynamic ratio load balancing.
          enum:
          - MONITOR
          - ROUND_TRIP_DELAY
          example: Example method
          type: string
        monitor:
          description: The DTC monitor output of which will be used for dynamic ratio
            load balancing.
          example: Example monitor
          type: string
        monitor_metric:
          description: The metric of the DTC SNMP monitor that will be used for dynamic
            weighing.
          example: Example monitor_metric
          type: string
        monitor_weighing:
          description: The DTC monitor weight. 'PRIORITY' means that all clients will
            be forwarded to the least loaded server. 'RATIO' means that distribution
            will be calculated based on dynamic weights.
          enum:
          - PRIORITY
          - RATIO
          example: Example monitor_weighing
          type: string
        invert_monitor_metric:
          description: Determines whether the inverted values of the DTC SNMP monitor
            metric will be used.
          example: false
          type: boolean
      type: object
    DtcPoolLbDynamicRatioPreferred:
      example:
        method: Example method
        monitor_metric: Example monitor_metric
        invert_monitor_metric: false
        monitor: Example monitor
        monitor_weighing: Example monitor_weighing
      properties:
        method:
          description: The method of the DTC dynamic ratio load balancing.
          enum:
          - MONITOR
          - ROUND_TRIP_DELAY
          example: Example method
          type: string
        monitor:
          description: The DTC monitor output of which will be used for dynamic ratio
            load balancing.
          example: Example monitor
          type: string
        monitor_metric:
          description: The metric of the DTC SNMP monitor that will be used for dynamic
            weighing.
          example: Example monitor_metric
          type: string
        monitor_weighing:
          description: The DTC monitor weight. 'PRIORITY' means that all clients will
            be forwarded to the least loaded server. 'RATIO' means that distribution
            will be calculated based on dynamic weights.
          enum:
          - PRIORITY
          - RATIO
          example: Example monitor_weighing
          type: string
        invert_monitor_metric:
          description: Determines whether the inverted values of the DTC SNMP monitor
            metric will be used.
          example: false
          type: boolean
      type: object
    DtcPoolServers:
      example:
        server: Example server
        ratio: 1
      properties:
        server:
          description: The server to link with.
          example: Example server
          type: string
        ratio:
          description: The weight of server.
          example: 1
          format: int64
          type: integer
      type: object
    ListDtcPoolResponse:
      oneOf:
      - description: The response format to retrieve __DtcPool__ objects.
        items:
          $ref: '#/components/schemas/DtcPool'
        title: ListDtcPoolResponseArray
        type: array
      - $ref: '#/components/schemas/ListDtcPoolResponseObject'
    CreateDtcPoolResponse:
      oneOf:
      - $ref: '#/components/schemas/CreateDtcPoolResponseAsObject'
      - description: The response format to create __DtcPool__.
        title: CreateDtcPoolResponse
        type: string
    GetDtcPoolResponse:
      oneOf:
      - $ref: '#/components/schemas/DtcPool'
      - $ref: '#/components/schemas/GetDtcPoolResponseObjectAsResult'
    UpdateDtcPoolResponse:
      oneOf:
      - $ref: '#/components/schemas/UpdateDtcPoolResponseAsObject'
      - description: The response format to update __DtcPool__ .
        title: UpdateDtcPoolResponse
        type: string
    DtcTopology:
      additionalProperties: false
      example:
        extattrs:
          key:
            value: ""
        _ref: _ref
        name: Example name
        comment: Example comment
        rules:
        - dtc:topology:rule
        - dtc:topology:rule
      properties:
        _ref:
          description: The reference to the object.
          type: string
        comment:
          description: The comment for the DTC TOPOLOGY monitor object; maximum 256
            characters.
          example: Example comment
          type: string
        extattrs:
          additionalProperties:
            $ref: '#/components/schemas/ExtAttrs'
          description: "Extensible attributes associated with the object. For valid\
            \ values for extensible attributes, see {extattrs:values}."
          type: object
        name:
          description: Display name of the DTC Topology.
          example: Example name
          type: string
        rules:
          description: Topology rules.
          enum:
          - dtc:topology:rule
          items:
            enum:
            - dtc:topology:rule
            type: string
          type: array
      type: object
    ListDtcTopologyResponse:
      oneOf:
      - description: The response format to retrieve __DtcTopology__ objects.
        items:
          $ref: '#/components/schemas/DtcTopology'
        title: ListDtcTopologyResponseArray
        type: array
      - $ref: '#/components/schemas/ListDtcTopologyResponseObject'
    CreateDtcTopologyResponse:
      oneOf:
      - $ref: '#/components/schemas/CreateDtcTopologyResponseAsObject'
      - description: The response format to create __DtcTopology__.
        title: CreateDtcTopologyResponse
        type: string
    GetDtcTopologyResponse:
      oneOf:
      - $ref: '#/components/schemas/DtcTopology'
      - $ref: '#/components/schemas/GetDtcTopologyResponseObjectAsResult'
    UpdateDtcTopologyResponse:
      oneOf:
      - $ref: '#/components/schemas/UpdateDtcTopologyResponseAsObject'
      - description: The response format to update __DtcTopology__ .
        title: UpdateDtcTopologyResponse
        type: string
    DtcLbdn:
      additionalProperties: false
      example:
        auth_zones:
        - zone_auth
        - zone_auth
        types:
        - types
        - types
        extattrs:
          key:
            value: ""
        topology: Example topology
        use_ttl: false
        patterns:
        - patterns
        - patterns
        health:
          enabled_state: Example enabled_state
          description: Example description
          availability: Example availability
        pools:
        - pool: Example pool
          ratio: 1
        - pool: Example pool
          ratio: 1
        auto_consolidated_monitors: false
        priority: 1
        lb_method: Example lb_method
        ttl: 1
        disable: false
        _ref: _ref
        name: Example name
        persistence: 1
        comment: Example comment
      properties:
        _ref:
          description: The reference to the object.
          type: string
        auth_zones:
          description: List of linked auth zones.
          enum:
          - zone_auth
          items:
            enum:
            - zone_auth
            type: string
          type: array
        auto_consolidated_monitors:
          description: Flag for enabling auto managing DTC Consolidated Monitors on
            related DTC Pools.
          example: false
          type: boolean
        comment:
          description: Comment for the DTC LBDN; maximum 256 characters.
          example: Example comment
          type: string
        disable:
          description: "Determines whether the DTC LBDN is disabled or not. When this\
            \ is set to False, the fixed address is enabled."
          example: false
          type: boolean
        extattrs:
          additionalProperties:
            $ref: '#/components/schemas/ExtAttrs'
          description: "Extensible attributes associated with the object. For valid\
            \ values for extensible attributes, see {extattrs:values}."
          type: object
        health:
          $ref: '#/components/schemas/DtcLbdnHealth'
        lb_method:
          description: The load balancing method. Used to select pool.
          enum:
          - GLOBAL_AVAILABILITY
          - RATIO
          - ROUND_ROBIN
          - SOURCE_IP_HASH
          - TOPOLOGY
          example: Example lb_method
          type: string
        name:
          description: "The display name of the DTC LBDN, not DNS related."
          example: Example name
          type: string
        patterns:
          description: LBDN wildcards for pattern match.
          enum:
          - string
          items:
            type: string
          type: array
        persistence:
          description: "Maximum time, in seconds, for which client specific LBDN responses\
            \ will be cached. Zero specifies no caching."
          example: 1
          format: int64
          type: integer
        pools:
          description: "The maximum time, in seconds, for which client specific LBDN\
            \ responses will be cached. Zero specifies no caching."
          enum:
          - dtc:pool:link
          items:
            $ref: '#/components/schemas/DtcLbdnPools'
          type: array
        priority:
          description: The LBDN pattern match priority for "overlapping" DTC LBDN
            objects. LBDNs are "overlapping" if they are simultaneously assigned to
            a zone and have patterns that can match the same FQDN. The matching LBDN
            with highest priority (lowest ordinal) will be used.
          example: 1
          format: int64
          type: integer
        topology:
          description: The topology rules for TOPOLOGY method.
          example: Example topology
          type: string
        ttl:
          description: "The Time To Live (TTL) value for the DTC LBDN. A 32-bit unsigned\
            \ integer that represents the duration, in seconds, for which the record\
            \ is valid (cached). Zero indicates that the record should not be cached."
          example: 1
          format: int64
          type: integer
        types:
          description: The list of resource record types supported by LBDN.
          enum:
          - A
          - AAAA
          - NAPTR
          - CNAME
          - SRV
          items:
            type: string
          type: array
        use_ttl:
          description: "Use flag for: ttl"
          example: false
          type: boolean
      type: object
    DtcLbdnHealth:
      example:
        enabled_state: Example enabled_state
        description: Example description
        availability: Example availability
      properties:
        availability:
          description: The availability color status.
          enum:
          - NONE
          - GREEN
          - YELLOW
          - RED
          - BLUE
          - GRAY
          example: Example availability
          type: string
        enabled_state:
          description: The enabled state of the object.
          enum:
          - NONE
          - ENABLED
          - DISABLED
          - DISABLED_BY_PARENT
          example: Example enabled_state
          type: string
        description:
          description: The textual description of the object's status.
          example: Example description
          type: string
      type: object
    DtcLbdnPools:
      example:
        pool: Example pool
        ratio: 1
      properties:
        pool:
          description: The pool to link with.
          example: Example pool
          type: string
        ratio:
          description: The weight of pool.
          example: 1
          format: int64
          type: integer
      type: object
    ListDtcLbdnResponse:
      oneOf:
      - description: The response format to retrieve __DtcLbdn__ objects.
        items:
          $ref: '#/components/schemas/DtcLbdn'
        title: ListDtcLbdnResponseArray
        type: array
      - $ref: '#/components/schemas/ListDtcLbdnResponseObject'
    CreateDtcLbdnResponse:
      oneOf:
      - $ref: '#/components/schemas/CreateDtcLbdnResponseAsObject'
      - description: The response format to create __DtcLbdn__.
        title: CreateDtcLbdnResponse
        type: string
    GetDtcLbdnResponse:
      oneOf:
      - $ref: '#/components/schemas/DtcLbdn'
      - $ref: '#/components/schemas/GetDtcLbdnResponseObjectAsResult'
    UpdateDtcLbdnResponse:
      oneOf:
      - $ref: '#/components/schemas/UpdateDtcLbdnResponseAsObject'
      - description: The response format to update __DtcLbdn__ .
        title: UpdateDtcLbdnResponse
        type: string
    DtcMonitor:
      additionalProperties: false
      example:
        extattrs:
          key:
            value: ""
        port: 1
        _ref: _ref
        name: Example name
        comment: Example comment
        interval: 1
        monitor: Example monitor
        type: Example type
        retry_down: 1
        retry_up: 1
        timeout: 1
      properties:
        _ref:
          description: The reference to the object.
          type: string
        comment:
          description: Comment for this DTC monitor; maximum 256 characters.
          example: Example comment
          type: string
        extattrs:
          additionalProperties:
            $ref: '#/components/schemas/ExtAttrs'
          description: "Extensible attributes associated with the object. For valid\
            \ values for extensible attributes, see {extattrs:values}."
          type: object
        interval:
          description: The interval for a health check.
          example: 1
          format: int64
          type: integer
        monitor:
          description: The actual monitor object.
          example: Example monitor
          type: string
        name:
          description: The display name for this DTC monitor.
          example: Example name
          type: string
        port:
          description: The health monitor port value.
          example: 1
          format: int64
          type: integer
        retry_down:
          description: The number of how many times the server should appear as "DOWN"
            to be treated as dead after it was alive.
          example: 1
          format: int64
          type: integer
        retry_up:
          description: The number of many times the server should appear as "UP" to
            be treated as alive after it was dead.
          example: 1
          format: int64
          type: integer
        timeout:
          description: The timeout for a health check.
          example: 1
          format: int64
          type: integer
        type:
          description: The request transport type.
          enum:
          - HTTP
          - ICMP
          - TCP
          - PDP
          - SIP
          - SNMP
          example: Example type
          type: string
      type: object
    ListDtcMonitorResponse:
      oneOf:
      - description: The response format to retrieve __DtcMonitor__ objects.
        items:
          $ref: '#/components/schemas/DtcMonitor'
        title: ListDtcMonitorResponseArray
        type: array
      - $ref: '#/components/schemas/ListDtcMonitorResponseObject'
    GetDtcMonitorResponse:
      oneOf:
      - $ref: '#/components/schemas/DtcMonitor'
      - $ref: '#/components/schemas/GetDtcMonitorResponseObjectAsResult'
    UpdateDtcMonitorResponse:
      oneOf:
      - $ref: '#/components/schemas/UpdateDtcMonitorResponseAsObject'
      - description: The response format to update __DtcMonitor__ .
        title: UpdateDtcMonitorResponse
        type: string
    DtcMonitorHttp:
      additionalProperties: false
      example:
        content_check_regex: Example content_check_regex
        request: Example request
        extattrs:
          key:
            value: ""
        content_check_op: Example content_check_op
        content_extract_type: Example content_extract_type
        client_cert: Example client_cert
        secure: false
        timeout: 1
        enable_sni: false
        content_check: Example content_check
        result: Example result
        content_extract_value: Example content_extract_value
        content_extract_group: 1
        port: 1
        _ref: _ref
        ciphers: Example ciphers
        name: Example name
        comment: Example comment
        interval: 1
        result_code: 1
        content_check_input: Example content_check_input
        retry_down: 1
        retry_up: 1
        validate_cert: false
      properties:
        _ref:
          description: The reference to the object.
          type: string
        ciphers:
          description: An optional cipher list for a secure HTTP/S connection.
          example: Example ciphers
          type: string
        client_cert:
          description: "An optional client certificate, supplied in a secure HTTP/S\
            \ mode if present."
          example: Example client_cert
          type: string
        comment:
          description: Comment for this DTC monitor; maximum 256 characters.
          example: Example comment
          type: string
        content_check:
          description: The content check type.
          enum:
          - NONE
          - MATCH
          - EXTRACT
          example: Example content_check
          type: string
        content_check_input:
          description: A portion of response to use as input for content check.
          enum:
          - HEADERS
          - ALL
          - BODY
          example: Example content_check_input
          type: string
        content_check_op:
          description: A content check success criteria operator.
          enum:
          - EQ
          - NEQ
          - LEQ
          - GEQ
          example: Example content_check_op
          type: string
        content_check_regex:
          description: A content check regular expression.
          example: Example content_check_regex
          type: string
        content_extract_group:
          description: A content extraction sub-expression to extract.
          example: 1
          format: int64
          type: integer
        content_extract_type:
          description: A content extraction expected type for the extracted data.
          enum:
          - STRING
          - INTEGER
          example: Example content_extract_type
          type: string
        content_extract_value:
          description: A content extraction value to compare with extracted result.
          example: Example content_extract_value
          type: string
        enable_sni:
          description: Determines whether the Server Name Indication (SNI) for HTTPS
            monitor is enabled.
          example: false
          type: boolean
        extattrs:
          additionalProperties:
            $ref: '#/components/schemas/ExtAttrs'
          description: "Extensible attributes associated with the object. For valid\
            \ values for extensible attributes, see {extattrs:values}."
          type: object
        interval:
          description: The interval for TCP health check.
          example: 1
          format: int64
          type: integer
        name:
          description: The display name for this DTC monitor.
          example: Example name
          type: string
        port:
          description: Port for TCP requests.
          example: 1
          format: int64
          type: integer
        request:
          description: An HTTP request to send.
          example: Example request
          type: string
        result:
          description: The type of an expected result.
          enum:
          - ANY
          - CODE_IS
          - CODE_IS_NOT
          example: Example result
          type: string
        result_code:
          description: The expected return code.
          example: 1
          format: int64
          type: integer
        retry_down:
          description: The value of how many times the server should appear as down
            to be treated as dead after it was alive.
          example: 1
          format: int64
          type: integer
        retry_up:
          description: The value of how many times the server should appear as up
            to be treated as alive after it was dead.
          example: 1
          format: int64
          type: integer
        secure:
          description: The connection security status.
          example: false
          type: boolean
        timeout:
          description: The timeout for TCP health check in seconds.
          example: 1
          format: int64
          type: integer
        validate_cert:
          description: Determines whether the validation of the remote server's certificate
            is enabled.
          example: false
          type: boolean
      type: object
    ListDtcMonitorHttpResponse:
      oneOf:
      - description: The response format to retrieve __DtcMonitorHttp__ objects.
        items:
          $ref: '#/components/schemas/DtcMonitorHttp'
        title: ListDtcMonitorHttpResponseArray
        type: array
      - $ref: '#/components/schemas/ListDtcMonitorHttpResponseObject'
    CreateDtcMonitorHttpResponse:
      oneOf:
      - $ref: '#/components/schemas/CreateDtcMonitorHttpResponseAsObject'
      - description: The response format to create __DtcMonitorHttp__.
        title: CreateDtcMonitorHttpResponse
        type: string
    GetDtcMonitorHttpResponse:
      oneOf:
      - $ref: '#/components/schemas/DtcMonitorHttp'
      - $ref: '#/components/schemas/GetDtcMonitorHttpResponseObjectAsResult'
    UpdateDtcMonitorHttpResponse:
      oneOf:
      - $ref: '#/components/schemas/UpdateDtcMonitorHttpResponseAsObject'
      - description: The response format to update __DtcMonitorHttp__ .
        title: UpdateDtcMonitorHttpResponse
        type: string
    DtcMonitorIcmp:
      additionalProperties: false
      example:
        extattrs:
          key:
            value: ""
        _ref: _ref
        name: Example name
        comment: Example comment
        interval: 1
        retry_down: 1
        retry_up: 1
        timeout: 1
      properties:
        _ref:
          description: The reference to the object.
          type: string
        comment:
          description: Comment for this DTC monitor; maximum 256 characters.
          example: Example comment
          type: string
        extattrs:
          additionalProperties:
            $ref: '#/components/schemas/ExtAttrs'
          description: "Extensible attributes associated with the object. For valid\
            \ values for extensible attributes, see {extattrs:values}."
          type: object
        interval:
          description: The interval for TCP health check.
          example: 1
          format: int64
          type: integer
        name:
          description: The display name for this DTC monitor.
          example: Example name
          type: string
        retry_down:
          description: The value of how many times the server should appear as down
            to be treated as dead after it was alive.
          example: 1
          format: int64
          type: integer
        retry_up:
          description: The value of how many times the server should appear as up
            to be treated as alive after it was dead.
          example: 1
          format: int64
          type: integer
        timeout:
          description: The timeout for TCP health check in seconds.
          example: 1
          format: int64
          type: integer
      type: object
    ListDtcMonitorIcmpResponse:
      oneOf:
      - description: The response format to retrieve __DtcMonitorIcmp__ objects.
        items:
          $ref: '#/components/schemas/DtcMonitorIcmp'
        title: ListDtcMonitorIcmpResponseArray
        type: array
      - $ref: '#/components/schemas/ListDtcMonitorIcmpResponseObject'
    CreateDtcMonitorIcmpResponse:
      oneOf:
      - $ref: '#/components/schemas/CreateDtcMonitorIcmpResponseAsObject'
      - description: The response format to create __DtcMonitorIcmp__.
        title: CreateDtcMonitorIcmpResponse
        type: string
    GetDtcMonitorIcmpResponse:
      oneOf:
      - $ref: '#/components/schemas/DtcMonitorIcmp'
      - $ref: '#/components/schemas/GetDtcMonitorIcmpResponseObjectAsResult'
    UpdateDtcMonitorIcmpResponse:
      oneOf:
      - $ref: '#/components/schemas/UpdateDtcMonitorIcmpResponseAsObject'
      - description: The response format to update __DtcMonitorIcmp__ .
        title: UpdateDtcMonitorIcmpResponse
        type: string
    DtcMonitorPdp:
      additionalProperties: false
      example:
        extattrs:
          key:
            value: ""
        port: 1
        _ref: _ref
        name: Example name
        comment: Example comment
        interval: 1
        retry_down: 1
        retry_up: 1
        timeout: 1
      properties:
        _ref:
          description: The reference to the object.
          type: string
        comment:
          description: Comment for this DTC monitor; maximum 256 characters.
          example: Example comment
          type: string
        extattrs:
          additionalProperties:
            $ref: '#/components/schemas/ExtAttrs'
          description: "Extensible attributes associated with the object. For valid\
            \ values for extensible attributes, see {extattrs:values}."
          type: object
        interval:
          description: The interval for TCP health check.
          example: 1
          format: int64
          type: integer
        name:
          description: The display name for this DTC monitor.
          example: Example name
          type: string
        port:
          description: The port value for PDP requests.
          example: 1
          format: int64
          type: integer
        retry_down:
          description: The value of how many times the server should appear as down
            to be treated as dead after it was alive.
          example: 1
          format: int64
          type: integer
        retry_up:
          description: The value of how many times the server should appear as up
            to be treated as alive after it was dead.
          example: 1
          format: int64
          type: integer
        timeout:
          description: The timeout for TCP health check in seconds.
          example: 1
          format: int64
          type: integer
      type: object
    ListDtcMonitorPdpResponse:
      oneOf:
      - description: The response format to retrieve __DtcMonitorPdp__ objects.
        items:
          $ref: '#/components/schemas/DtcMonitorPdp'
        title: ListDtcMonitorPdpResponseArray
        type: array
      - $ref: '#/components/schemas/ListDtcMonitorPdpResponseObject'
    CreateDtcMonitorPdpResponse:
      oneOf:
      - $ref: '#/components/schemas/CreateDtcMonitorPdpResponseAsObject'
      - description: The response format to create __DtcMonitorPdp__.
        title: CreateDtcMonitorPdpResponse
        type: string
    GetDtcMonitorPdpResponse:
      oneOf:
      - $ref: '#/components/schemas/DtcMonitorPdp'
      - $ref: '#/components/schemas/GetDtcMonitorPdpResponseObjectAsResult'
    UpdateDtcMonitorPdpResponse:
      oneOf:
      - $ref: '#/components/schemas/UpdateDtcMonitorPdpResponseAsObject'
      - description: The response format to update __DtcMonitorPdp__ .
        title: UpdateDtcMonitorPdpResponse
        type: string
    DtcMonitorSip:
      additionalProperties: false
      example:
        request: Example request
        extattrs:
          key:
            value: ""
        client_cert: Example client_cert
        transport: Example transport
        timeout: 1
        result: Example result
        port: 1
        _ref: _ref
        ciphers: Example ciphers
        name: Example name
        comment: Example comment
        interval: 1
        result_code: 1
        retry_down: 1
        retry_up: 1
        validate_cert: false
      properties:
        _ref:
          description: The reference to the object.
          type: string
        ciphers:
          description: An optional cipher list for secure TLS/SIPS connection.
          example: Example ciphers
          type: string
        client_cert:
          description: "An optional client certificate, supplied in TLS and SIPS mode\
            \ if present."
          example: Example client_cert
          type: string
        comment:
          description: Comment for this DTC monitor; maximum 256 characters.
          example: Example comment
          type: string
        extattrs:
          additionalProperties:
            $ref: '#/components/schemas/ExtAttrs'
          description: "Extensible attributes associated with the object. For valid\
            \ values for extensible attributes, see {extattrs:values}."
          type: object
        interval:
          description: The interval for TCP health check.
          example: 1
          format: int64
          type: integer
        name:
          description: The display name for this DTC monitor.
          example: Example name
          type: string
        port:
          description: The port value for SIP requests.
          example: 1
          format: int64
          type: integer
        request:
          description: A SIP request to send
          example: Example request
          type: string
        result:
          description: The type of an expected result.
          enum:
          - ANY
          - CODE_IS
          - CODE_IS_NOT
          example: Example result
          type: string
        result_code:
          description: The expected return code value.
          example: 1
          format: int64
          type: integer
        retry_down:
          description: The value of how many times the server should appear as down
            to be treated as dead after it was alive.
          example: 1
          format: int64
          type: integer
        retry_up:
          description: The value of how many times the server should appear as up
            to be treated as alive after it was dead.
          example: 1
          format: int64
          type: integer
        timeout:
          description: The timeout for TCP health check in seconds.
          example: 1
          format: int64
          type: integer
        transport:
          description: The transport layer protocol to use for SIP check.
          enum:
          - TCP
          - SIPS
          - TLS
          - UDP
          example: Example transport
          type: string
        validate_cert:
          description: Determines whether the validation of the remote server's certificate
            is enabled.
          example: false
          type: boolean
      type: object
    ListDtcMonitorSipResponse:
      oneOf:
      - description: The response format to retrieve __DtcMonitorSip__ objects.
        items:
          $ref: '#/components/schemas/DtcMonitorSip'
        title: ListDtcMonitorSipResponseArray
        type: array
      - $ref: '#/components/schemas/ListDtcMonitorSipResponseObject'
    CreateDtcMonitorSipResponse:
      oneOf:
      - $ref: '#/components/schemas/CreateDtcMonitorSipResponseAsObject'
      - description: The response format to create __DtcMonitorSip__.
        title: CreateDtcMonitorSipResponse
        type: string
    GetDtcMonitorSipResponse:
      oneOf:
      - $ref: '#/components/schemas/DtcMonitorSip'
      - $ref: '#/components/schemas/GetDtcMonitorSipResponseObjectAsResult'
    UpdateDtcMonitorSipResponse:
      oneOf:
      - $ref: '#/components/schemas/UpdateDtcMonitorSipResponseAsObject'
      - description: The response format to update __DtcMonitorSip__ .
        title: UpdateDtcMonitorSipResponse
        type: string
    DtcMonitorSnmp:
      additionalProperties: false
      example:
        extattrs:
          key:
            value: ""
        community: Example community
        version: Example version
        timeout: 1
        engine_id: Example engine_id
        port: 1
        _ref: _ref
        context: Example context
        name: Example name
        comment: Example comment
        interval: 1
        oids:
        - condition: Example condition
          last: Example last
          comment: Example comment
          oid: Example oid
          type: Example type
          first: Example first
        - condition: Example condition
          last: Example last
          comment: Example comment
          oid: Example oid
          type: Example type
          first: Example first
        user: Example user
        retry_down: 1
        retry_up: 1
      properties:
        _ref:
          description: The reference to the object.
          type: string
        comment:
          description: Comment for this DTC monitor; maximum 256 characters.
          example: Example comment
          type: string
        community:
          description: The SNMP community string for SNMP authentication.
          example: Example community
          type: string
        context:
          description: The SNMPv3 context.
          example: Example context
          type: string
        engine_id:
          description: The SNMPv3 engine identifier.
          example: Example engine_id
          type: string
        extattrs:
          additionalProperties:
            $ref: '#/components/schemas/ExtAttrs'
          description: "Extensible attributes associated with the object. For valid\
            \ values for extensible attributes, see {extattrs:values}."
          type: object
        interval:
          description: The interval for TCP health check.
          example: 1
          format: int64
          type: integer
        name:
          description: The display name for this DTC monitor.
          example: Example name
          type: string
        oids:
          description: A list of OIDs for SNMP monitoring.
          enum:
          - dtc:monitor:snmp:oid
          items:
            $ref: '#/components/schemas/DtcMonitorSnmpOids'
          type: array
        port:
          description: The port value for SNMP requests.
          example: 1
          format: int64
          type: integer
        retry_down:
          description: The value of how many times the server should appear as down
            to be treated as dead after it was alive.
          example: 1
          format: int64
          type: integer
        retry_up:
          description: The value of how many times the server should appear as up
            to be treated as alive after it was dead.
          example: 1
          format: int64
          type: integer
        timeout:
          description: The timeout for TCP health check in seconds.
          example: 1
          format: int64
          type: integer
        user:
          description: The SNMPv3 user setting.
          example: Example user
          type: string
        version:
          description: The SNMP protocol version for the SNMP health check.
          enum:
          - V1
          - V2C
          - V3
          example: Example version
          type: string
      type: object
    DtcMonitorSnmpOids:
      example:
        condition: Example condition
        last: Example last
        comment: Example comment
        oid: Example oid
        type: Example type
        first: Example first
      properties:
        oid:
          description: The SNMP OID value for DTC SNMP Monitor health checks.
          example: Example oid
          type: string
        comment:
          description: The comment for a DTC SNMP Health Monitor OID object.
          example: Example comment
          type: string
        type:
          description: The value of the condition type for DTC SNMP Monitor health
            check results.
          enum:
          - STRING
          - INTEGER
          example: Example type
          type: string
        condition:
          description: "The condition of the validation result for an SNMP health\
            \ check. The following conditions can be applied to the health check results:\
            \ 'ANY' accepts any response; 'EXACT' accepts result equal to 'first';\
            \ 'LEQ' accepts result which is less than 'first'; 'GEQ' accepts result\
            \ which is greater than 'first'; 'RANGE' accepts result value of which\
            \ is between 'first' and 'last'."
          enum:
          - ANY
          - EXACT
          - LEQ
          - GEQ
          - RANGE
          example: Example condition
          type: string
        first:
          description: The condition's first term to match against the SNMP health
            check result.
          example: Example first
          type: string
        last:
          description: The condition's second term to match against the SNMP health
            check result with 'RANGE' condition.
          example: Example last
          type: string
      type: object
    ListDtcMonitorSnmpResponse:
      oneOf:
      - description: The response format to retrieve __DtcMonitorSnmp__ objects.
        items:
          $ref: '#/components/schemas/DtcMonitorSnmp'
        title: ListDtcMonitorSnmpResponseArray
        type: array
      - $ref: '#/components/schemas/ListDtcMonitorSnmpResponseObject'
    CreateDtcMonitorSnmpResponse:
      oneOf:
      - $ref: '#/components/schemas/CreateDtcMonitorSnmpResponseAsObject'
      - description: The response format to create __DtcMonitorSnmp__.
        title: CreateDtcMonitorSnmpResponse
        type: string
    GetDtcMonitorSnmpResponse:
      oneOf:
      - $ref: '#/components/schemas/DtcMonitorSnmp'
      - $ref: '#/components/schemas/GetDtcMonitorSnmpResponseObjectAsResult'
    UpdateDtcMonitorSnmpResponse:
      oneOf:
      - $ref: '#/components/schemas/UpdateDtcMonitorSnmpResponseAsObject'
      - description: The response format to update __DtcMonitorSnmp__ .
        title: UpdateDtcMonitorSnmpResponse
        type: string
    DtcMonitorTcp:
      additionalProperties: false
      example:
        extattrs:
          key:
            value: ""
        port: 1
        _ref: _ref
        name: Example name
        comment: Example comment
        interval: 1
        retry_down: 1
        retry_up: 1
        timeout: 1
      properties:
        _ref:
          description: The reference to the object.
          type: string
        comment:
          description: Comment for this DTC monitor; maximum 256 characters.
          example: Example comment
          type: string
        extattrs:
          additionalProperties:
            $ref: '#/components/schemas/ExtAttrs'
          description: "Extensible attributes associated with the object. For valid\
            \ values for extensible attributes, see {extattrs:values}."
          type: object
        interval:
          description: The interval for TCP health check.
          example: 1
          format: int64
          type: integer
        name:
          description: The display name for this DTC monitor.
          example: Example name
          type: string
        port:
          description: The port value for TCP requests.
          example: 1
          format: int64
          type: integer
        retry_down:
          description: The value of how many times the server should appear as down
            to be treated as dead after it was alive.
          example: 1
          format: int64
          type: integer
        retry_up:
          description: The value of how many times the server should appear as up
            to be treated as alive after it was dead.
          example: 1
          format: int64
          type: integer
        timeout:
          description: The timeout for TCP health check in seconds.
          example: 1
          format: int64
          type: integer
      type: object
    ListDtcMonitorTcpResponse:
      oneOf:
      - description: The response format to retrieve __DtcMonitorTcp__ objects.
        items:
          $ref: '#/components/schemas/DtcMonitorTcp'
        title: ListDtcMonitorTcpResponseArray
        type: array
      - $ref: '#/components/schemas/ListDtcMonitorTcpResponseObject'
    CreateDtcMonitorTcpResponse:
      oneOf:
      - $ref: '#/components/schemas/CreateDtcMonitorTcpResponseAsObject'
      - description: The response format to create __DtcMonitorTcp__.
        title: CreateDtcMonitorTcpResponse
        type: string
    GetDtcMonitorTcpResponse:
      oneOf:
      - $ref: '#/components/schemas/DtcMonitorTcp'
      - $ref: '#/components/schemas/GetDtcMonitorTcpResponseObjectAsResult'
    UpdateDtcMonitorTcpResponse:
      oneOf:
      - $ref: '#/components/schemas/UpdateDtcMonitorTcpResponseAsObject'
      - description: The response format to update __DtcMonitorTcp__ .
        title: UpdateDtcMonitorTcpResponse
        type: string
    DtcRecordA:
      additionalProperties: false
      example:
        disable: false
        dtc_server: Example dtc_server
        use_ttl: false
        _ref: _ref
        comment: Example comment
        ipv4addr: Example ipv4addr
        ttl: 1
        auto_created: Example auto_created
      properties:
        _ref:
          description: The reference to the object.
          type: string
        auto_created:
          description: Flag that indicates whether this record was automatically created
            by NIOS.
          example: Example auto_created
          readOnly: true
          type: string
        comment:
          description: Comment for the record; maximum 256 characters.
          example: Example comment
          type: string
        disable:
          description: Determines if the record is disabled or not. False means that
            the record is enabled.
          example: false
          type: boolean
        dtc_server:
          description: The name of the DTC Server object with which the DTC record
            is associated.
          example: Example dtc_server
          type: string
        ipv4addr:
          description: The IPv4 Address of the domain name.
          example: Example ipv4addr
          type: string
        ttl:
          description: The Time to Live (TTL) value.
          example: 1
          format: int64
          type: integer
        use_ttl:
          description: "Use flag for: ttl"
          example: false
          type: boolean
      type: object
    ListDtcRecordAResponse:
      oneOf:
      - description: The response format to retrieve __DtcRecordA__ objects.
        items:
          $ref: '#/components/schemas/DtcRecordA'
        title: ListDtcRecordAResponseArray
        type: array
      - $ref: '#/components/schemas/ListDtcRecordAResponseObject'
    CreateDtcRecordAResponse:
      oneOf:
      - $ref: '#/components/schemas/CreateDtcRecordAResponseAsObject'
      - description: The response format to create __DtcRecordA__.
        title: CreateDtcRecordAResponse
        type: string
    GetDtcRecordAResponse:
      oneOf:
      - $ref: '#/components/schemas/DtcRecordA'
      - $ref: '#/components/schemas/GetDtcRecordAResponseObjectAsResult'
    UpdateDtcRecordAResponse:
      oneOf:
      - $ref: '#/components/schemas/UpdateDtcRecordAResponseAsObject'
      - description: The response format to update __DtcRecordA__ .
        title: UpdateDtcRecordAResponse
        type: string
    DtcRecordAaaa:
      additionalProperties: false
      example:
        disable: false
        dtc_server: Example dtc_server
        use_ttl: false
        _ref: _ref
        comment: Example comment
        ttl: 1
        auto_created: Example auto_created
        ipv6addr: Example ipv6addr
      properties:
        _ref:
          description: The reference to the object.
          type: string
        auto_created:
          description: Flag that indicates whether this record was automatically created
            by NIOS.
          example: Example auto_created
          readOnly: true
          type: string
        comment:
          description: Comment for the record; maximum 256 characters.
          example: Example comment
          type: string
        disable:
          description: Determines if the record is disabled or not. False means that
            the record is enabled.
          example: false
          type: boolean
        dtc_server:
          description: The name of the DTC Server object with which the DTC record
            is associated.
          example: Example dtc_server
          type: string
        ipv6addr:
          description: The IPv6 Address of the domain name.
          example: Example ipv6addr
          type: string
        ttl:
          description: The Time to Live (TTL) value.
          example: 1
          format: int64
          type: integer
        use_ttl:
          description: "Use flag for: ttl"
          example: false
          type: boolean
      type: object
    ListDtcRecordAaaaResponse:
      oneOf:
      - description: The response format to retrieve __DtcRecordAaaa__ objects.
        items:
          $ref: '#/components/schemas/DtcRecordAaaa'
        title: ListDtcRecordAaaaResponseArray
        type: array
      - $ref: '#/components/schemas/ListDtcRecordAaaaResponseObject'
    CreateDtcRecordAaaaResponse:
      oneOf:
      - $ref: '#/components/schemas/CreateDtcRecordAaaaResponseAsObject'
      - description: The response format to create __DtcRecordAaaa__.
        title: CreateDtcRecordAaaaResponse
        type: string
    GetDtcRecordAaaaResponse:
      oneOf:
      - $ref: '#/components/schemas/DtcRecordAaaa'
      - $ref: '#/components/schemas/GetDtcRecordAaaaResponseObjectAsResult'
    UpdateDtcRecordAaaaResponse:
      oneOf:
      - $ref: '#/components/schemas/UpdateDtcRecordAaaaResponseAsObject'
      - description: The response format to update __DtcRecordAaaa__ .
        title: UpdateDtcRecordAaaaResponse
        type: string
    DtcRecordCname:
      additionalProperties: false
      example:
        disable: false
        dtc_server: Example dtc_server
        use_ttl: false
        _ref: _ref
        comment: Example comment
        canonical: Example canonical
        ttl: 1
        auto_created: Example auto_created
        dns_canonical: Example dns_canonical
      properties:
        _ref:
          description: The reference to the object.
          type: string
        auto_created:
          description: Flag that indicates whether this record was automatically created
            by NIOS.
          example: Example auto_created
          readOnly: true
          type: string
        canonical:
          description: The canonical name of the host.
          example: Example canonical
          type: string
        comment:
          description: Comment for the record; maximum 256 characters.
          example: Example comment
          type: string
        disable:
          description: Determines if the record is disabled or not. False means that
            the record is enabled.
          example: false
          type: boolean
        dns_canonical:
          description: The canonical name as server by DNS protocol.
          example: Example dns_canonical
          readOnly: true
          type: string
        dtc_server:
          description: The name of the DTC Server object with which the DTC record
            is associated.
          example: Example dtc_server
          type: string
        ttl:
          description: The Time to Live (TTL) value.
          example: 1
          format: int64
          type: integer
        use_ttl:
          description: "Use flag for: ttl"
          example: false
          type: boolean
      type: object
    ListDtcRecordCnameResponse:
      oneOf:
      - description: The response format to retrieve __DtcRecordCname__ objects.
        items:
          $ref: '#/components/schemas/DtcRecordCname'
        title: ListDtcRecordCnameResponseArray
        type: array
      - $ref: '#/components/schemas/ListDtcRecordCnameResponseObject'
    CreateDtcRecordCnameResponse:
      oneOf:
      - $ref: '#/components/schemas/CreateDtcRecordCnameResponseAsObject'
      - description: The response format to create __DtcRecordCname__.
        title: CreateDtcRecordCnameResponse
        type: string
    GetDtcRecordCnameResponse:
      oneOf:
      - $ref: '#/components/schemas/DtcRecordCname'
      - $ref: '#/components/schemas/GetDtcRecordCnameResponseObjectAsResult'
    UpdateDtcRecordCnameResponse:
      oneOf:
      - $ref: '#/components/schemas/UpdateDtcRecordCnameResponseAsObject'
      - description: The response format to update __DtcRecordCname__ .
        title: UpdateDtcRecordCnameResponse
        type: string
    DtcRecordNaptr:
      additionalProperties: false
      example:
        regexp: Example regexp
        disable: false
        dtc_server: Example dtc_server
        use_ttl: false
        preference: 1
        _ref: _ref
        flags: Example flags
        comment: Example comment
        services: Example services
        replacement: Example replacement
        ttl: 1
        order: 1
      properties:
        _ref:
          description: The reference to the object.
          type: string
        comment:
          description: Comment for the record; maximum 256 characters.
          example: Example comment
          type: string
        disable:
          description: Determines if the record is disabled or not. False means that
            the record is enabled.
          example: false
          type: boolean
        dtc_server:
          description: The name of the DTC Server object with which the DTC record
            is associated.
          example: Example dtc_server
          type: string
        flags:
          description: "The flags used to control the interpretation of the fields\
            \ for an NAPTR record object. Supported values for the flags field are\
            \ \"U\", \"S\", \"P\" and \"A\"."
          example: Example flags
          type: string
        order:
          description: "The order parameter of the NAPTR records. This parameter specifies\
            \ the order in which the NAPTR rules are applied when multiple rules are\
            \ present. Valid values are from 0 to 65535 (inclusive), in 32-bit unsigned\
            \ integer format."
          example: 1
          format: int64
          type: integer
        preference:
          description: "The preference of the NAPTR record. The preference field determines\
            \ the order the NAPTR records are processed when multiple records with\
            \ the same order parameter are present. Valid values are from 0 to 65535\
            \ (inclusive), in 32-bit unsigned integer format."
          example: 1
          format: int64
          type: integer
        regexp:
          description: "The regular expression-based rewriting rule of the NAPTR record.\
            \ This should be a POSIX compliant regular expression, including the substitution\
            \ rule and flags. Refer to RFC 2915 for the field syntax details."
          example: Example regexp
          type: string
        replacement:
          description: "The replacement field of the NAPTR record object. For nonterminal\
            \ NAPTR records, this field specifies the next domain name to look up.\
            \ This value can be in unicode format."
          example: Example replacement
          type: string
        services:
          description: "The services field of the NAPTR record object; maximum 128\
            \ characters. The services field contains protocol and service identifiers,\
            \ such as \"http+E2U\" or \"SIPS+D2T\"."
          example: Example services
          type: string
        ttl:
          description: The Time to Live (TTL) value.
          example: 1
          format: int64
          type: integer
        use_ttl:
          description: "Use flag for: ttl"
          example: false
          type: boolean
      type: object
    ListDtcRecordNaptrResponse:
      oneOf:
      - description: The response format to retrieve __DtcRecordNaptr__ objects.
        items:
          $ref: '#/components/schemas/DtcRecordNaptr'
        title: ListDtcRecordNaptrResponseArray
        type: array
      - $ref: '#/components/schemas/ListDtcRecordNaptrResponseObject'
    CreateDtcRecordNaptrResponse:
      oneOf:
      - $ref: '#/components/schemas/CreateDtcRecordNaptrResponseAsObject'
      - description: The response format to create __DtcRecordNaptr__.
        title: CreateDtcRecordNaptrResponse
        type: string
    GetDtcRecordNaptrResponse:
      oneOf:
      - $ref: '#/components/schemas/DtcRecordNaptr'
      - $ref: '#/components/schemas/GetDtcRecordNaptrResponseObjectAsResult'
    UpdateDtcRecordNaptrResponse:
      oneOf:
      - $ref: '#/components/schemas/UpdateDtcRecordNaptrResponseAsObject'
      - description: The response format to update __DtcRecordNaptr__ .
        title: UpdateDtcRecordNaptrResponse
        type: string
    DtcRecordSrv:
      additionalProperties: false
      example:
        port: 1
        disable: false
        dtc_server: Example dtc_server
        use_ttl: false
        _ref: _ref
        name: Example name
        weight: 1
        comment: Example comment
        priority: 1
        ttl: 1
        target: Example target
      properties:
        _ref:
          description: The reference to the object.
          type: string
        comment:
          description: Comment for the record; maximum 256 characters.
          example: Example comment
          type: string
        disable:
          description: Determines if the record is disabled or not. False means that
            the record is enabled.
          example: false
          type: boolean
        dtc_server:
          description: The name of the DTC Server object with which the DTC record
            is associated.
          example: Example dtc_server
          type: string
        name:
          description: The name for an SRV record in unicode format.
          example: Example name
          type: string
        port:
          description: "The port of the SRV record. Valid values are from 0 to 65535\
            \ (inclusive), in 32-bit unsigned integer format."
          example: 1
          format: int64
          type: integer
        priority:
          description: "The priority of the SRV record. Valid values are from 0 to\
            \ 65535 (inclusive), in 32-bit unsigned integer format."
          example: 1
          format: int64
          type: integer
        target:
          description: The target of the SRV record in FQDN format. This value can
            be in unicode format.
          example: Example target
          type: string
        ttl:
          description: The Time to Live (TTL) value.
          example: 1
          format: int64
          type: integer
        use_ttl:
          description: "Use flag for: ttl"
          example: false
          type: boolean
        weight:
          description: "The weight of the SRV record. Valid values are from 0 to 65535\
            \ (inclusive), in 32-bit unsigned integer format."
          example: 1
          format: int64
          type: integer
      type: object
    ListDtcRecordSrvResponse:
      oneOf:
      - description: The response format to retrieve __DtcRecordSrv__ objects.
        items:
          $ref: '#/components/schemas/DtcRecordSrv'
        title: ListDtcRecordSrvResponseArray
        type: array
      - $ref: '#/components/schemas/ListDtcRecordSrvResponseObject'
    CreateDtcRecordSrvResponse:
      oneOf:
      - $ref: '#/components/schemas/CreateDtcRecordSrvResponseAsObject'
      - description: The response format to create __DtcRecordSrv__.
        title: CreateDtcRecordSrvResponse
        type: string
    GetDtcRecordSrvResponse:
      oneOf:
      - $ref: '#/components/schemas/DtcRecordSrv'
      - $ref: '#/components/schemas/GetDtcRecordSrvResponseObjectAsResult'
    UpdateDtcRecordSrvResponse:
      oneOf:
      - $ref: '#/components/schemas/UpdateDtcRecordSrvResponseAsObject'
      - description: The response format to update __DtcRecordSrv__ .
        title: UpdateDtcRecordSrvResponse
        type: string
    DtcCertificate:
      additionalProperties: false
      example:
        _ref: _ref
        certificate: Example certificate
        in_use: false
      properties:
        _ref:
          description: The reference to the object.
          type: string
        certificate:
          description: Reference to underlying X509Certificate.
          example: Example certificate
          readOnly: true
          type: string
        in_use:
          description: Determines whether the certificate is in use or not.
          example: false
          readOnly: true
          type: boolean
      type: object
    ListDtcCertificateResponse:
      oneOf:
      - description: The response format to retrieve __DtcCertificate__ objects.
        items:
          $ref: '#/components/schemas/DtcCertificate'
        title: ListDtcCertificateResponseArray
        type: array
      - $ref: '#/components/schemas/ListDtcCertificateResponseObject'
    GetDtcCertificateResponse:
      oneOf:
      - $ref: '#/components/schemas/DtcCertificate'
      - $ref: '#/components/schemas/GetDtcCertificateResponseObjectAsResult'
    UpdateDtcCertificateResponse:
      oneOf:
      - $ref: '#/components/schemas/UpdateDtcCertificateResponseAsObject'
      - description: The response format to update __DtcCertificate__ .
        title: UpdateDtcCertificateResponse
        type: string
    DtcAllrecords:
      additionalProperties: false
      example:
        disable: false
        dtc_server: Example dtc_server
        record: Example record
        _ref: _ref
        comment: Example comment
        type: Example type
        ttl: 1
      properties:
        _ref:
          description: The reference to the object.
          type: string
        comment:
          description: The record comment.
          example: Example comment
          readOnly: true
          type: string
        disable:
          description: The disable value determines if the record is disabled or not.
            "False" means the record is enabled.
          example: false
          readOnly: true
          type: boolean
        dtc_server:
          description: The name of the DTC Server object with which the record is
            associated.
          example: Example dtc_server
          readOnly: true
          type: string
        record:
          description: "The record object, if supported by the WAPI. Otherwise, the\
            \ value is \"None\"."
          example: Example record
          readOnly: true
          type: string
        ttl:
          description: The TTL value of the record associated with the DTC AllRecords
            object.
          example: 1
          format: int64
          type: integer
        type:
          description: "The record type. When searching for an unspecified record\
            \ type, the search is performed for all records. On retrieval, the appliance\
            \ returns \"UNSUPPORTED\" for unsupported records."
          enum:
          - ALL
          - dtc:record:a
          - dtc:record:aaaa
          - dtc:record:cname
          - dtc:record:naptr
          - dtc:record:srv
          example: Example type
          readOnly: true
          type: string
      type: object
    ListDtcAllrecordsResponse:
      oneOf:
      - description: The response format to retrieve __DtcAllrecords__ objects.
        items:
          $ref: '#/components/schemas/DtcAllrecords'
        title: ListDtcAllrecordsResponseArray
        type: array
      - $ref: '#/components/schemas/ListDtcAllrecordsResponseObject'
    GetDtcAllrecordsResponse:
      oneOf:
      - $ref: '#/components/schemas/DtcAllrecords'
      - $ref: '#/components/schemas/GetDtcAllrecordsResponseObjectAsResult'
    UpdateDtcAllrecordsResponse:
      oneOf:
      - $ref: '#/components/schemas/UpdateDtcAllrecordsResponseAsObject'
      - description: The response format to update __DtcAllrecords__ .
        title: UpdateDtcAllrecordsResponse
        type: string
    DtcObject:
      additionalProperties: false
      example:
        display_type: Example display_type
        extattrs:
          key:
            value: ""
        ipv6_address_list:
        - ipv6_address_list
        - ipv6_address_list
        abstract_type: Example abstract_type
        _ref: _ref
        name: Example name
        comment: Example comment
        ipv4_address_list:
        - ipv4_address_list
        - ipv4_address_list
        status_time: 1
        object: Example object
        status: Example status
      properties:
        _ref:
          description: The reference to the object.
          type: string
        abstract_type:
          description: The abstract object type.
          example: Example abstract_type
          readOnly: true
          type: string
        comment:
          description: The comment for the DTC object; maximum 256 characters.
          example: Example comment
          readOnly: true
          type: string
        display_type:
          description: The display object type.
          example: Example display_type
          readOnly: true
          type: string
        extattrs:
          additionalProperties:
            $ref: '#/components/schemas/ExtAttrs'
          description: "Extensible attributes associated with the object. For valid\
            \ values for extensible attributes, see {extattrs:values}."
          type: object
        ipv4_address_list:
          description: The list of IPv4 addresses.
          enum:
          - string
          items:
            type: string
          readOnly: true
          type: array
        ipv6_address_list:
          description: The list of IPv6 addresses.
          enum:
          - string
          items:
            type: string
          readOnly: true
          type: array
        name:
          description: The display name of the DTC object.
          example: Example name
          readOnly: true
          type: string
        object:
          description: The specific DTC object.
          example: Example object
          readOnly: true
          type: string
        status:
          description: The availability color status.
          enum:
          - NONE
          - GREEN
          - YELLOW
          - RED
          - BLUE
          - GRAY
          example: Example status
          readOnly: true
          type: string
        status_time:
          description: The timestamp when status or health was last determined.
          example: 1
          format: int64
          readOnly: true
          type: integer
      type: object
    ListDtcObjectResponse:
      oneOf:
      - description: The response format to retrieve __DtcObject__ objects.
        items:
          $ref: '#/components/schemas/DtcObject'
        title: ListDtcObjectResponseArray
        type: array
      - $ref: '#/components/schemas/ListDtcObjectResponseObject'
    GetDtcObjectResponse:
      oneOf:
      - $ref: '#/components/schemas/DtcObject'
      - $ref: '#/components/schemas/GetDtcObjectResponseObjectAsResult'
    UpdateDtcObjectResponse:
      oneOf:
      - $ref: '#/components/schemas/UpdateDtcObjectResponseAsObject'
      - description: The response format to update __DtcObject__ .
        title: UpdateDtcObjectResponse
        type: string
    DtcTopologyRule:
      additionalProperties: false
      example:
        return_type: Example return_type
        valid: false
        sources:
        - source_op: Example source_op
          source_type: Example source_type
          source_value: Example source_value
        - source_op: Example source_op
          source_type: Example source_type
          source_value: Example source_value
        dest_type: Example dest_type
        topology: Example topology
        _ref: _ref
        destination_link: Example destination_link
      properties:
        _ref:
          description: The reference to the object.
          type: string
        dest_type:
          description: The type of the destination for this DTC Topology rule.
          enum:
          - POOL
          - SERVER
          example: Example dest_type
          type: string
        destination_link:
          description: The reference to the destination DTC pool or DTC server.
          example: Example destination_link
          type: string
        return_type:
          description: Type of the DNS response for rule.
          enum:
          - REGULAR
          - NOERR
          - NXDOMAIN
          example: Example return_type
          type: string
        sources:
          description: The conditions for matching sources. Should be empty to set
            rule as default destination.
          enum:
          - dtc:topology:rule:source
          items:
            $ref: '#/components/schemas/DtcTopologyRuleSources'
          type: array
        topology:
          description: The DTC Topology the rule belongs to.
          example: Example topology
          readOnly: true
          type: string
        valid:
          description: True if the label in the rule exists in the current Topology
            DB. Always true for SUBNET rules. Rules with non-existent labels may be
            configured but will never match.
          example: false
          readOnly: true
          type: boolean
      type: object
    DtcTopologyRuleSources:
      example:
        source_op: Example source_op
        source_type: Example source_type
        source_value: Example source_value
      properties:
        source_type:
          description: The source type.
          enum:
          - SUBNET
          - CONTINENT
          - COUNTRY
          - SUBDIVISION
          - CITY
          - EA0
          - EA1
          - EA2
          - EA3
          example: Example source_type
          type: string
        source_op:
          description: The operation used to match the value.
          enum:
          - IS
          - IS_NOT
          example: Example source_op
          type: string
        source_value:
          description: The source value.
          example: Example source_value
          type: string
      type: object
    ListDtcTopologyRuleResponse:
      oneOf:
      - description: The response format to retrieve __DtcTopologyRule__ objects.
        items:
          $ref: '#/components/schemas/DtcTopologyRule'
        title: ListDtcTopologyRuleResponseArray
        type: array
      - $ref: '#/components/schemas/ListDtcTopologyRuleResponseObject'
    GetDtcTopologyRuleResponse:
      oneOf:
      - $ref: '#/components/schemas/DtcTopologyRule'
      - $ref: '#/components/schemas/GetDtcTopologyRuleResponseObjectAsResult'
    UpdateDtcTopologyRuleResponse:
      oneOf:
      - $ref: '#/components/schemas/UpdateDtcTopologyRuleResponseAsObject'
      - description: The response format to update __DtcTopologyRule__ .
        title: UpdateDtcTopologyRuleResponse
        type: string
    DtcTopologyLabel:
      additionalProperties: false
      example:
        field: Example field
        _ref: _ref
        label: Example label
      properties:
        _ref:
          description: The reference to the object.
          type: string
        field:
          description: The name of the field in the Topology database the label was
            obtained from.
          enum:
          - SUBNET
          - CONTINENT
          - COUNTRY
          - SUBDIVISION
          - CITY
          - EA0
          - EA1
          - EA2
          - EA3
          example: Example field
          readOnly: true
          type: string
        label:
          description: The DTC Topology label name.
          example: Example label
          readOnly: true
          type: string
      type: object
    ListDtcTopologyLabelResponse:
      oneOf:
      - description: The response format to retrieve __DtcTopologyLabel__ objects.
        items:
          $ref: '#/components/schemas/DtcTopologyLabel'
        title: ListDtcTopologyLabelResponseArray
        type: array
      - $ref: '#/components/schemas/ListDtcTopologyLabelResponseObject'
    GetDtcTopologyLabelResponse:
      oneOf:
      - $ref: '#/components/schemas/DtcTopologyLabel'
      - $ref: '#/components/schemas/GetDtcTopologyLabelResponseObjectAsResult'
    UpdateDtcTopologyLabelResponse:
      oneOf:
      - $ref: '#/components/schemas/UpdateDtcTopologyLabelResponseAsObject'
      - description: The response format to update __DtcTopologyLabel__ .
        title: UpdateDtcTopologyLabelResponse
        type: string
    ListDtcResponseObject:
      description: The response format to retrieve __Dtc__ objects.
      properties:
        result:
          items:
            $ref: '#/components/schemas/Dtc'
          type: array
      title: ListDtcResponseObject
      type: object
    GetDtcResponseObjectAsResult:
      additionalProperties: false
      description: The response format to retrieve __Dtc__ objects.
      properties:
        result:
          $ref: '#/components/schemas/Dtc'
      title: GetDtcResponseObjectAsResult
      type: object
    UpdateDtcResponseAsObject:
      description: The response format to update __Dtc__ in object format.
      properties:
        result:
          $ref: '#/components/schemas/Dtc'
      title: UpdateDtcResponseAsObject
      type: object
    ListDtcServerResponseObject:
      description: The response format to retrieve __DtcServer__ objects.
      properties:
        result:
          items:
            $ref: '#/components/schemas/DtcServer'
          type: array
      title: ListDtcServerResponseObject
      type: object
    CreateDtcServerResponseAsObject:
      description: The response format to create __DtcServer__ in object format.
      example:
        result:
          extattrs:
            key:
              value: ""
          disable: false
          _ref: _ref
          host: Example host
          name: Example name
          health:
            enabled_state: Example enabled_state
            description: Example description
            availability: Example availability
          comment: Example comment
          sni_hostname: Example sni_hostname
          auto_create_host_record: false
          monitors:
          - host: Example host
            monitor: Example monitor
          - host: Example host
            monitor: Example monitor
          use_sni_hostname: false
      properties:
        result:
          $ref: '#/components/schemas/DtcServer'
      title: CreateDtcServerResponseAsObject
      type: object
    GetDtcServerResponseObjectAsResult:
      additionalProperties: false
      description: The response format to retrieve __DtcServer__ objects.
      properties:
        result:
          $ref: '#/components/schemas/DtcServer'
      title: GetDtcServerResponseObjectAsResult
      type: object
    UpdateDtcServerResponseAsObject:
      description: The response format to update __DtcServer__ in object format.
      example:
        result:
          extattrs:
            key:
              value: ""
          disable: false
          _ref: _ref
          host: Example host
          name: Example name
          health:
            enabled_state: Example enabled_state
            description: Example description
            availability: Example availability
          comment: Example comment
          sni_hostname: Example sni_hostname
          auto_create_host_record: false
          monitors:
          - host: Example host
            monitor: Example monitor
          - host: Example host
            monitor: Example monitor
          use_sni_hostname: false
      properties:
        result:
          $ref: '#/components/schemas/DtcServer'
      title: UpdateDtcServerResponseAsObject
      type: object
    ListDtcPoolResponseObject:
      description: The response format to retrieve __DtcPool__ objects.
      properties:
        result:
          items:
            $ref: '#/components/schemas/DtcPool'
          type: array
      title: ListDtcPoolResponseObject
      type: object
    CreateDtcPoolResponseAsObject:
      description: The response format to create __DtcPool__ in object format.
      example:
        result:
          lb_alternate_method: Example lb_alternate_method
          consolidated_monitors:
          - members:
            - members
            - members
            full_health_communication: false
            monitor: Example monitor
            availability: Example availability
          - members:
            - members
            - members
            full_health_communication: false
            monitor: Example monitor
            availability: Example availability
          extattrs:
            key:
              value: ""
          lb_preferred_topology: Example lb_preferred_topology
          lb_alternate_topology: Example lb_alternate_topology
          lb_preferred_method: Example lb_preferred_method
          use_ttl: false
          quorum: 1
          health:
            enabled_state: Example enabled_state
            description: Example description
            availability: Example availability
          availability: Example availability
          auto_consolidated_monitors: false
          ttl: 1
          lb_dynamic_ratio_alternate:
            method: Example method
            monitor_metric: Example monitor_metric
            invert_monitor_metric: false
            monitor: Example monitor
            monitor_weighing: Example monitor_weighing
          servers:
          - server: Example server
            ratio: 1
          - server: Example server
            ratio: 1
          disable: false
          _ref: _ref
          name: Example name
          comment: Example comment
          lb_dynamic_ratio_preferred:
            method: Example method
            monitor_metric: Example monitor_metric
            invert_monitor_metric: false
            monitor: Example monitor
            monitor_weighing: Example monitor_weighing
          monitors:
          - dtc:monitor:http
          - dtc:monitor:http
      properties:
        result:
          $ref: '#/components/schemas/DtcPool'
      title: CreateDtcPoolResponseAsObject
      type: object
    GetDtcPoolResponseObjectAsResult:
      additionalProperties: false
      description: The response format to retrieve __DtcPool__ objects.
      properties:
        result:
          $ref: '#/components/schemas/DtcPool'
      title: GetDtcPoolResponseObjectAsResult
      type: object
    UpdateDtcPoolResponseAsObject:
      description: The response format to update __DtcPool__ in object format.
      example:
        result:
          lb_alternate_method: Example lb_alternate_method
          consolidated_monitors:
          - members:
            - members
            - members
            full_health_communication: false
            monitor: Example monitor
            availability: Example availability
          - members:
            - members
            - members
            full_health_communication: false
            monitor: Example monitor
            availability: Example availability
          extattrs:
            key:
              value: ""
          lb_preferred_topology: Example lb_preferred_topology
          lb_alternate_topology: Example lb_alternate_topology
          lb_preferred_method: Example lb_preferred_method
          use_ttl: false
          quorum: 1
          health:
            enabled_state: Example enabled_state
            description: Example description
            availability: Example availability
          availability: Example availability
          auto_consolidated_monitors: false
          ttl: 1
          lb_dynamic_ratio_alternate:
            method: Example method
            monitor_metric: Example monitor_metric
            invert_monitor_metric: false
            monitor: Example monitor
            monitor_weighing: Example monitor_weighing
          servers:
          - server: Example server
            ratio: 1
          - server: Example server
            ratio: 1
          disable: false
          _ref: _ref
          name: Example name
          comment: Example comment
          lb_dynamic_ratio_preferred:
            method: Example method
            monitor_metric: Example monitor_metric
            invert_monitor_metric: false
            monitor: Example monitor
            monitor_weighing: Example monitor_weighing
          monitors:
          - dtc:monitor:http
          - dtc:monitor:http
      properties:
        result:
          $ref: '#/components/schemas/DtcPool'
      title: UpdateDtcPoolResponseAsObject
      type: object
    ListDtcTopologyResponseObject:
      description: The response format to retrieve __DtcTopology__ objects.
      properties:
        result:
          items:
            $ref: '#/components/schemas/DtcTopology'
          type: array
      title: ListDtcTopologyResponseObject
      type: object
    CreateDtcTopologyResponseAsObject:
      description: The response format to create __DtcTopology__ in object format.
      example:
        result:
          extattrs:
            key:
              value: ""
          _ref: _ref
          name: Example name
          comment: Example comment
          rules:
          - dtc:topology:rule
          - dtc:topology:rule
      properties:
        result:
          $ref: '#/components/schemas/DtcTopology'
      title: CreateDtcTopologyResponseAsObject
      type: object
    GetDtcTopologyResponseObjectAsResult:
      additionalProperties: false
      description: The response format to retrieve __DtcTopology__ objects.
      properties:
        result:
          $ref: '#/components/schemas/DtcTopology'
      title: GetDtcTopologyResponseObjectAsResult
      type: object
    UpdateDtcTopologyResponseAsObject:
      description: The response format to update __DtcTopology__ in object format.
      example:
        result:
          extattrs:
            key:
              value: ""
          _ref: _ref
          name: Example name
          comment: Example comment
          rules:
          - dtc:topology:rule
          - dtc:topology:rule
      properties:
        result:
          $ref: '#/components/schemas/DtcTopology'
      title: UpdateDtcTopologyResponseAsObject
      type: object
    ListDtcLbdnResponseObject:
      description: The response format to retrieve __DtcLbdn__ objects.
      properties:
        result:
          items:
            $ref: '#/components/schemas/DtcLbdn'
          type: array
      title: ListDtcLbdnResponseObject
      type: object
    CreateDtcLbdnResponseAsObject:
      description: The response format to create __DtcLbdn__ in object format.
      example:
        result:
          auth_zones:
          - zone_auth
          - zone_auth
          types:
          - types
          - types
          extattrs:
            key:
              value: ""
          topology: Example topology
          use_ttl: false
          patterns:
          - patterns
          - patterns
          health:
            enabled_state: Example enabled_state
            description: Example description
            availability: Example availability
          pools:
          - pool: Example pool
            ratio: 1
          - pool: Example pool
            ratio: 1
          auto_consolidated_monitors: false
          priority: 1
          lb_method: Example lb_method
          ttl: 1
          disable: false
          _ref: _ref
          name: Example name
          persistence: 1
          comment: Example comment
      properties:
        result:
          $ref: '#/components/schemas/DtcLbdn'
      title: CreateDtcLbdnResponseAsObject
      type: object
    GetDtcLbdnResponseObjectAsResult:
      additionalProperties: false
      description: The response format to retrieve __DtcLbdn__ objects.
      properties:
        result:
          $ref: '#/components/schemas/DtcLbdn'
      title: GetDtcLbdnResponseObjectAsResult
      type: object
    UpdateDtcLbdnResponseAsObject:
      description: The response format to update __DtcLbdn__ in object format.
      example:
        result:
          auth_zones:
          - zone_auth
          - zone_auth
          types:
          - types
          - types
          extattrs:
            key:
              value: ""
          topology: Example topology
          use_ttl: false
          patterns:
          - patterns
          - patterns
          health:
            enabled_state: Example enabled_state
            description: Example description
            availability: Example availability
          pools:
          - pool: Example pool
            ratio: 1
          - pool: Example pool
            ratio: 1
          auto_consolidated_monitors: false
          priority: 1
          lb_method: Example lb_method
          ttl: 1
          disable: false
          _ref: _ref
          name: Example name
          persistence: 1
          comment: Example comment
      properties:
        result:
          $ref: '#/components/schemas/DtcLbdn'
      title: UpdateDtcLbdnResponseAsObject
      type: object
    ListDtcMonitorResponseObject:
      description: The response format to retrieve __DtcMonitor__ objects.
      properties:
        result:
          items:
            $ref: '#/components/schemas/DtcMonitor'
          type: array
      title: ListDtcMonitorResponseObject
      type: object
    GetDtcMonitorResponseObjectAsResult:
      additionalProperties: false
      description: The response format to retrieve __DtcMonitor__ objects.
      properties:
        result:
          $ref: '#/components/schemas/DtcMonitor'
      title: GetDtcMonitorResponseObjectAsResult
      type: object
    UpdateDtcMonitorResponseAsObject:
      description: The response format to update __DtcMonitor__ in object format.
      example:
        result:
          extattrs:
            key:
              value: ""
          port: 1
          _ref: _ref
          name: Example name
          comment: Example comment
          interval: 1
          monitor: Example monitor
          type: Example type
          retry_down: 1
          retry_up: 1
          timeout: 1
      properties:
        result:
          $ref: '#/components/schemas/DtcMonitor'
      title: UpdateDtcMonitorResponseAsObject
      type: object
    ListDtcMonitorHttpResponseObject:
      description: The response format to retrieve __DtcMonitorHttp__ objects.
      properties:
        result:
          items:
            $ref: '#/components/schemas/DtcMonitorHttp'
          type: array
      title: ListDtcMonitorHttpResponseObject
      type: object
    CreateDtcMonitorHttpResponseAsObject:
      description: The response format to create __DtcMonitorHttp__ in object format.
      example:
        result:
          content_check_regex: Example content_check_regex
          request: Example request
          extattrs:
            key:
              value: ""
          content_check_op: Example content_check_op
          content_extract_type: Example content_extract_type
          client_cert: Example client_cert
          secure: false
          timeout: 1
          enable_sni: false
          content_check: Example content_check
          result: Example result
          content_extract_value: Example content_extract_value
          content_extract_group: 1
          port: 1
          _ref: _ref
          ciphers: Example ciphers
          name: Example name
          comment: Example comment
          interval: 1
          result_code: 1
          content_check_input: Example content_check_input
          retry_down: 1
          retry_up: 1
          validate_cert: false
      properties:
        result:
          $ref: '#/components/schemas/DtcMonitorHttp'
      title: CreateDtcMonitorHttpResponseAsObject
      type: object
    GetDtcMonitorHttpResponseObjectAsResult:
      additionalProperties: false
      description: The response format to retrieve __DtcMonitorHttp__ objects.
      properties:
        result:
          $ref: '#/components/schemas/DtcMonitorHttp'
      title: GetDtcMonitorHttpResponseObjectAsResult
      type: object
    UpdateDtcMonitorHttpResponseAsObject:
      description: The response format to update __DtcMonitorHttp__ in object format.
      example:
        result:
          content_check_regex: Example content_check_regex
          request: Example request
          extattrs:
            key:
              value: ""
          content_check_op: Example content_check_op
          content_extract_type: Example content_extract_type
          client_cert: Example client_cert
          secure: false
          timeout: 1
          enable_sni: false
          content_check: Example content_check
          result: Example result
          content_extract_value: Example content_extract_value
          content_extract_group: 1
          port: 1
          _ref: _ref
          ciphers: Example ciphers
          name: Example name
          comment: Example comment
          interval: 1
          result_code: 1
          content_check_input: Example content_check_input
          retry_down: 1
          retry_up: 1
          validate_cert: false
      properties:
        result:
          $ref: '#/components/schemas/DtcMonitorHttp'
      title: UpdateDtcMonitorHttpResponseAsObject
      type: object
    ListDtcMonitorIcmpResponseObject:
      description: The response format to retrieve __DtcMonitorIcmp__ objects.
      properties:
        result:
          items:
            $ref: '#/components/schemas/DtcMonitorIcmp'
          type: array
      title: ListDtcMonitorIcmpResponseObject
      type: object
    CreateDtcMonitorIcmpResponseAsObject:
      description: The response format to create __DtcMonitorIcmp__ in object format.
      example:
        result:
          extattrs:
            key:
              value: ""
          _ref: _ref
          name: Example name
          comment: Example comment
          interval: 1
          retry_down: 1
          retry_up: 1
          timeout: 1
      properties:
        result:
          $ref: '#/components/schemas/DtcMonitorIcmp'
      title: CreateDtcMonitorIcmpResponseAsObject
      type: object
    GetDtcMonitorIcmpResponseObjectAsResult:
      additionalProperties: false
      description: The response format to retrieve __DtcMonitorIcmp__ objects.
      properties:
        result:
          $ref: '#/components/schemas/DtcMonitorIcmp'
      title: GetDtcMonitorIcmpResponseObjectAsResult
      type: object
    UpdateDtcMonitorIcmpResponseAsObject:
      description: The response format to update __DtcMonitorIcmp__ in object format.
      example:
        result:
          extattrs:
            key:
              value: ""
          _ref: _ref
          name: Example name
          comment: Example comment
          interval: 1
          retry_down: 1
          retry_up: 1
          timeout: 1
      properties:
        result:
          $ref: '#/components/schemas/DtcMonitorIcmp'
      title: UpdateDtcMonitorIcmpResponseAsObject
      type: object
    ListDtcMonitorPdpResponseObject:
      description: The response format to retrieve __DtcMonitorPdp__ objects.
      properties:
        result:
          items:
            $ref: '#/components/schemas/DtcMonitorPdp'
          type: array
      title: ListDtcMonitorPdpResponseObject
      type: object
    CreateDtcMonitorPdpResponseAsObject:
      description: The response format to create __DtcMonitorPdp__ in object format.
      example:
        result:
          extattrs:
            key:
              value: ""
          port: 1
          _ref: _ref
          name: Example name
          comment: Example comment
          interval: 1
          retry_down: 1
          retry_up: 1
          timeout: 1
      properties:
        result:
          $ref: '#/components/schemas/DtcMonitorPdp'
      title: CreateDtcMonitorPdpResponseAsObject
      type: object
    GetDtcMonitorPdpResponseObjectAsResult:
      additionalProperties: false
      description: The response format to retrieve __DtcMonitorPdp__ objects.
      properties:
        result:
          $ref: '#/components/schemas/DtcMonitorPdp'
      title: GetDtcMonitorPdpResponseObjectAsResult
      type: object
    UpdateDtcMonitorPdpResponseAsObject:
      description: The response format to update __DtcMonitorPdp__ in object format.
      example:
        result:
          extattrs:
            key:
              value: ""
          port: 1
          _ref: _ref
          name: Example name
          comment: Example comment
          interval: 1
          retry_down: 1
          retry_up: 1
          timeout: 1
      properties:
        result:
          $ref: '#/components/schemas/DtcMonitorPdp'
      title: UpdateDtcMonitorPdpResponseAsObject
      type: object
    ListDtcMonitorSipResponseObject:
      description: The response format to retrieve __DtcMonitorSip__ objects.
      properties:
        result:
          items:
            $ref: '#/components/schemas/DtcMonitorSip'
          type: array
      title: ListDtcMonitorSipResponseObject
      type: object
    CreateDtcMonitorSipResponseAsObject:
      description: The response format to create __DtcMonitorSip__ in object format.
      example:
        result:
          request: Example request
          extattrs:
            key:
              value: ""
          client_cert: Example client_cert
          transport: Example transport
          timeout: 1
          result: Example result
          port: 1
          _ref: _ref
          ciphers: Example ciphers
          name: Example name
          comment: Example comment
          interval: 1
          result_code: 1
          retry_down: 1
          retry_up: 1
          validate_cert: false
      properties:
        result:
          $ref: '#/components/schemas/DtcMonitorSip'
      title: CreateDtcMonitorSipResponseAsObject
      type: object
    GetDtcMonitorSipResponseObjectAsResult:
      additionalProperties: false
      description: The response format to retrieve __DtcMonitorSip__ objects.
      properties:
        result:
          $ref: '#/components/schemas/DtcMonitorSip'
      title: GetDtcMonitorSipResponseObjectAsResult
      type: object
    UpdateDtcMonitorSipResponseAsObject:
      description: The response format to update __DtcMonitorSip__ in object format.
      example:
        result:
          request: Example request
          extattrs:
            key:
              value: ""
          client_cert: Example client_cert
          transport: Example transport
          timeout: 1
          result: Example result
          port: 1
          _ref: _ref
          ciphers: Example ciphers
          name: Example name
          comment: Example comment
          interval: 1
          result_code: 1
          retry_down: 1
          retry_up: 1
          validate_cert: false
      properties:
        result:
          $ref: '#/components/schemas/DtcMonitorSip'
      title: UpdateDtcMonitorSipResponseAsObject
      type: object
    ListDtcMonitorSnmpResponseObject:
      description: The response format to retrieve __DtcMonitorSnmp__ objects.
      properties:
        result:
          items:
            $ref: '#/components/schemas/DtcMonitorSnmp'
          type: array
      title: ListDtcMonitorSnmpResponseObject
      type: object
    CreateDtcMonitorSnmpResponseAsObject:
      description: The response format to create __DtcMonitorSnmp__ in object format.
      example:
        result:
          extattrs:
            key:
              value: ""
          community: Example community
          version: Example version
          timeout: 1
          engine_id: Example engine_id
          port: 1
          _ref: _ref
          context: Example context
          name: Example name
          comment: Example comment
          interval: 1
          oids:
          - condition: Example condition
            last: Example last
            comment: Example comment
            oid: Example oid
            type: Example type
            first: Example first
          - condition: Example condition
            last: Example last
            comment: Example comment
            oid: Example oid
            type: Example type
            first: Example first
          user: Example user
          retry_down: 1
          retry_up: 1
      properties:
        result:
          $ref: '#/components/schemas/DtcMonitorSnmp'
      title: CreateDtcMonitorSnmpResponseAsObject
      type: object
    GetDtcMonitorSnmpResponseObjectAsResult:
      additionalProperties: false
      description: The response format to retrieve __DtcMonitorSnmp__ objects.
      properties:
        result:
          $ref: '#/components/schemas/DtcMonitorSnmp'
      title: GetDtcMonitorSnmpResponseObjectAsResult
      type: object
    UpdateDtcMonitorSnmpResponseAsObject:
      description: The response format to update __DtcMonitorSnmp__ in object format.
      example:
        result:
          extattrs:
            key:
              value: ""
          community: Example community
          version: Example version
          timeout: 1
          engine_id: Example engine_id
          port: 1
          _ref: _ref
          context: Example context
          name: Example name
          comment: Example comment
          interval: 1
          oids:
          - condition: Example condition
            last: Example last
            comment: Example comment
            oid: Example oid
            type: Example type
            first: Example first
          - condition: Example condition
            last: Example last
            comment: Example comment
            oid: Example oid
            type: Example type
            first: Example first
          user: Example user
          retry_down: 1
          retry_up: 1
      properties:
        result:
          $ref: '#/components/schemas/DtcMonitorSnmp'
      title: UpdateDtcMonitorSnmpResponseAsObject
      type: object
    ListDtcMonitorTcpResponseObject:
      description: The response format to retrieve __DtcMonitorTcp__ objects.
      properties:
        result:
          items:
            $ref: '#/components/schemas/DtcMonitorTcp'
          type: array
      title: ListDtcMonitorTcpResponseObject
      type: object
    CreateDtcMonitorTcpResponseAsObject:
      description: The response format to create __DtcMonitorTcp__ in object format.
      example:
        result:
          extattrs:
            key:
              value: ""
          port: 1
          _ref: _ref
          name: Example name
          comment: Example comment
          interval: 1
          retry_down: 1
          retry_up: 1
          timeout: 1
      properties:
        result:
          $ref: '#/components/schemas/DtcMonitorTcp'
      title: CreateDtcMonitorTcpResponseAsObject
      type: object
    GetDtcMonitorTcpResponseObjectAsResult:
      additionalProperties: false
      description: The response format to retrieve __DtcMonitorTcp__ objects.
      properties:
        result:
          $ref: '#/components/schemas/DtcMonitorTcp'
      title: GetDtcMonitorTcpResponseObjectAsResult
      type: object
    UpdateDtcMonitorTcpResponseAsObject:
      description: The response format to update __DtcMonitorTcp__ in object format.
      example:
        result:
          extattrs:
            key:
              value: ""
          port: 1
          _ref: _ref
          name: Example name
          comment: Example comment
          interval: 1
          retry_down: 1
          retry_up: 1
          timeout: 1
      properties:
        result:
          $ref: '#/components/schemas/DtcMonitorTcp'
      title: UpdateDtcMonitorTcpResponseAsObject
      type: object
    ListDtcRecordAResponseObject:
      description: The response format to retrieve __DtcRecordA__ objects.
      properties:
        result:
          items:
            $ref: '#/components/schemas/DtcRecordA'
          type: array
      title: ListDtcRecordAResponseObject
      type: object
    CreateDtcRecordAResponseAsObject:
      description: The response format to create __DtcRecordA__ in object format.
      example:
        result:
          disable: false
          dtc_server: Example dtc_server
          use_ttl: false
          _ref: _ref
          comment: Example comment
          ipv4addr: Example ipv4addr
          ttl: 1
          auto_created: Example auto_created
      properties:
        result:
          $ref: '#/components/schemas/DtcRecordA'
      title: CreateDtcRecordAResponseAsObject
      type: object
    GetDtcRecordAResponseObjectAsResult:
      additionalProperties: false
      description: The response format to retrieve __DtcRecordA__ objects.
      properties:
        result:
          $ref: '#/components/schemas/DtcRecordA'
      title: GetDtcRecordAResponseObjectAsResult
      type: object
    UpdateDtcRecordAResponseAsObject:
      description: The response format to update __DtcRecordA__ in object format.
      example:
        result:
          disable: false
          dtc_server: Example dtc_server
          use_ttl: false
          _ref: _ref
          comment: Example comment
          ipv4addr: Example ipv4addr
          ttl: 1
          auto_created: Example auto_created
      properties:
        result:
          $ref: '#/components/schemas/DtcRecordA'
      title: UpdateDtcRecordAResponseAsObject
      type: object
    ListDtcRecordAaaaResponseObject:
      description: The response format to retrieve __DtcRecordAaaa__ objects.
      properties:
        result:
          items:
            $ref: '#/components/schemas/DtcRecordAaaa'
          type: array
      title: ListDtcRecordAaaaResponseObject
      type: object
    CreateDtcRecordAaaaResponseAsObject:
      description: The response format to create __DtcRecordAaaa__ in object format.
      example:
        result:
          disable: false
          dtc_server: Example dtc_server
          use_ttl: false
          _ref: _ref
          comment: Example comment
          ttl: 1
          auto_created: Example auto_created
          ipv6addr: Example ipv6addr
      properties:
        result:
          $ref: '#/components/schemas/DtcRecordAaaa'
      title: CreateDtcRecordAaaaResponseAsObject
      type: object
    GetDtcRecordAaaaResponseObjectAsResult:
      additionalProperties: false
      description: The response format to retrieve __DtcRecordAaaa__ objects.
      properties:
        result:
          $ref: '#/components/schemas/DtcRecordAaaa'
      title: GetDtcRecordAaaaResponseObjectAsResult
      type: object
    UpdateDtcRecordAaaaResponseAsObject:
      description: The response format to update __DtcRecordAaaa__ in object format.
      example:
        result:
          disable: false
          dtc_server: Example dtc_server
          use_ttl: false
          _ref: _ref
          comment: Example comment
          ttl: 1
          auto_created: Example auto_created
          ipv6addr: Example ipv6addr
      properties:
        result:
          $ref: '#/components/schemas/DtcRecordAaaa'
      title: UpdateDtcRecordAaaaResponseAsObject
      type: object
    ListDtcRecordCnameResponseObject:
      description: The response format to retrieve __DtcRecordCname__ objects.
      properties:
        result:
          items:
            $ref: '#/components/schemas/DtcRecordCname'
          type: array
      title: ListDtcRecordCnameResponseObject
      type: object
    CreateDtcRecordCnameResponseAsObject:
      description: The response format to create __DtcRecordCname__ in object format.
      example:
        result:
          disable: false
          dtc_server: Example dtc_server
          use_ttl: false
          _ref: _ref
          comment: Example comment
          canonical: Example canonical
          ttl: 1
          auto_created: Example auto_created
          dns_canonical: Example dns_canonical
      properties:
        result:
          $ref: '#/components/schemas/DtcRecordCname'
      title: CreateDtcRecordCnameResponseAsObject
      type: object
    GetDtcRecordCnameResponseObjectAsResult:
      additionalProperties: false
      description: The response format to retrieve __DtcRecordCname__ objects.
      properties:
        result:
          $ref: '#/components/schemas/DtcRecordCname'
      title: GetDtcRecordCnameResponseObjectAsResult
      type: object
    UpdateDtcRecordCnameResponseAsObject:
      description: The response format to update __DtcRecordCname__ in object format.
      example:
        result:
          disable: false
          dtc_server: Example dtc_server
          use_ttl: false
          _ref: _ref
          comment: Example comment
          canonical: Example canonical
          ttl: 1
          auto_created: Example auto_created
          dns_canonical: Example dns_canonical
      properties:
        result:
          $ref: '#/components/schemas/DtcRecordCname'
      title: UpdateDtcRecordCnameResponseAsObject
      type: object
    ListDtcRecordNaptrResponseObject:
      description: The response format to retrieve __DtcRecordNaptr__ objects.
      properties:
        result:
          items:
            $ref: '#/components/schemas/DtcRecordNaptr'
          type: array
      title: ListDtcRecordNaptrResponseObject
      type: object
    CreateDtcRecordNaptrResponseAsObject:
      description: The response format to create __DtcRecordNaptr__ in object format.
      example:
        result:
          regexp: Example regexp
          disable: false
          dtc_server: Example dtc_server
          use_ttl: false
          preference: 1
          _ref: _ref
          flags: Example flags
          comment: Example comment
          services: Example services
          replacement: Example replacement
          ttl: 1
          order: 1
      properties:
        result:
          $ref: '#/components/schemas/DtcRecordNaptr'
      title: CreateDtcRecordNaptrResponseAsObject
      type: object
    GetDtcRecordNaptrResponseObjectAsResult:
      additionalProperties: false
      description: The response format to retrieve __DtcRecordNaptr__ objects.
      properties:
        result:
          $ref: '#/components/schemas/DtcRecordNaptr'
      title: GetDtcRecordNaptrResponseObjectAsResult
      type: object
    UpdateDtcRecordNaptrResponseAsObject:
      description: The response format to update __DtcRecordNaptr__ in object format.
      example:
        result:
          regexp: Example regexp
          disable: false
          dtc_server: Example dtc_server
          use_ttl: false
          preference: 1
          _ref: _ref
          flags: Example flags
          comment: Example comment
          services: Example services
          replacement: Example replacement
          ttl: 1
          order: 1
      properties:
        result:
          $ref: '#/components/schemas/DtcRecordNaptr'
      title: UpdateDtcRecordNaptrResponseAsObject
      type: object
    ListDtcRecordSrvResponseObject:
      description: The response format to retrieve __DtcRecordSrv__ objects.
      properties:
        result:
          items:
            $ref: '#/components/schemas/DtcRecordSrv'
          type: array
      title: ListDtcRecordSrvResponseObject
      type: object
    CreateDtcRecordSrvResponseAsObject:
      description: The response format to create __DtcRecordSrv__ in object format.
      example:
        result:
          port: 1
          disable: false
          dtc_server: Example dtc_server
          use_ttl: false
          _ref: _ref
          name: Example name
          weight: 1
          comment: Example comment
          priority: 1
          ttl: 1
          target: Example target
      properties:
        result:
          $ref: '#/components/schemas/DtcRecordSrv'
      title: CreateDtcRecordSrvResponseAsObject
      type: object
    GetDtcRecordSrvResponseObjectAsResult:
      additionalProperties: false
      description: The response format to retrieve __DtcRecordSrv__ objects.
      properties:
        result:
          $ref: '#/components/schemas/DtcRecordSrv'
      title: GetDtcRecordSrvResponseObjectAsResult
      type: object
    UpdateDtcRecordSrvResponseAsObject:
      description: The response format to update __DtcRecordSrv__ in object format.
      example:
        result:
          port: 1
          disable: false
          dtc_server: Example dtc_server
          use_ttl: false
          _ref: _ref
          name: Example name
          weight: 1
          comment: Example comment
          priority: 1
          ttl: 1
          target: Example target
      properties:
        result:
          $ref: '#/components/schemas/DtcRecordSrv'
      title: UpdateDtcRecordSrvResponseAsObject
      type: object
    ListDtcCertificateResponseObject:
      description: The response format to retrieve __DtcCertificate__ objects.
      properties:
        result:
          items:
            $ref: '#/components/schemas/DtcCertificate'
          type: array
      title: ListDtcCertificateResponseObject
      type: object
    GetDtcCertificateResponseObjectAsResult:
      additionalProperties: false
      description: The response format to retrieve __DtcCertificate__ objects.
      properties:
        result:
          $ref: '#/components/schemas/DtcCertificate'
      title: GetDtcCertificateResponseObjectAsResult
      type: object
    UpdateDtcCertificateResponseAsObject:
      description: The response format to update __DtcCertificate__ in object format.
      properties:
        result:
          $ref: '#/components/schemas/DtcCertificate'
      title: UpdateDtcCertificateResponseAsObject
      type: object
    ListDtcAllrecordsResponseObject:
      description: The response format to retrieve __DtcAllrecords__ objects.
      properties:
        result:
          items:
            $ref: '#/components/schemas/DtcAllrecords'
          type: array
      title: ListDtcAllrecordsResponseObject
      type: object
    GetDtcAllrecordsResponseObjectAsResult:
      additionalProperties: false
      description: The response format to retrieve __DtcAllrecords__ objects.
      properties:
        result:
          $ref: '#/components/schemas/DtcAllrecords'
      title: GetDtcAllrecordsResponseObjectAsResult
      type: object
    UpdateDtcAllrecordsResponseAsObject:
      description: The response format to update __DtcAllrecords__ in object format.
      example:
        result:
          disable: false
          dtc_server: Example dtc_server
          record: Example record
          _ref: _ref
          comment: Example comment
          type: Example type
          ttl: 1
      properties:
        result:
          $ref: '#/components/schemas/DtcAllrecords'
      title: UpdateDtcAllrecordsResponseAsObject
      type: object
    ListDtcObjectResponseObject:
      description: The response format to retrieve __DtcObject__ objects.
      properties:
        result:
          items:
            $ref: '#/components/schemas/DtcObject'
          type: array
      title: ListDtcObjectResponseObject
      type: object
    GetDtcObjectResponseObjectAsResult:
      additionalProperties: false
      description: The response format to retrieve __DtcObject__ objects.
      properties:
        result:
          $ref: '#/components/schemas/DtcObject'
      title: GetDtcObjectResponseObjectAsResult
      type: object
    UpdateDtcObjectResponseAsObject:
      description: The response format to update __DtcObject__ in object format.
      example:
        result:
          display_type: Example display_type
          extattrs:
            key:
              value: ""
          ipv6_address_list:
          - ipv6_address_list
          - ipv6_address_list
          abstract_type: Example abstract_type
          _ref: _ref
          name: Example name
          comment: Example comment
          ipv4_address_list:
          - ipv4_address_list
          - ipv4_address_list
          status_time: 1
          object: Example object
          status: Example status
      properties:
        result:
          $ref: '#/components/schemas/DtcObject'
      title: UpdateDtcObjectResponseAsObject
      type: object
    ListDtcTopologyRuleResponseObject:
      description: The response format to retrieve __DtcTopologyRule__ objects.
      properties:
        result:
          items:
            $ref: '#/components/schemas/DtcTopologyRule'
          type: array
      title: ListDtcTopologyRuleResponseObject
      type: object
    GetDtcTopologyRuleResponseObjectAsResult:
      additionalProperties: false
      description: The response format to retrieve __DtcTopologyRule__ objects.
      properties:
        result:
          $ref: '#/components/schemas/DtcTopologyRule'
      title: GetDtcTopologyRuleResponseObjectAsResult
      type: object
    UpdateDtcTopologyRuleResponseAsObject:
      description: The response format to update __DtcTopologyRule__ in object format.
      example:
        result:
          return_type: Example return_type
          valid: false
          sources:
          - source_op: Example source_op
            source_type: Example source_type
            source_value: Example source_value
          - source_op: Example source_op
            source_type: Example source_type
            source_value: Example source_value
          dest_type: Example dest_type
          topology: Example topology
          _ref: _ref
          destination_link: Example destination_link
      properties:
        result:
          $ref: '#/components/schemas/DtcTopologyRule'
      title: UpdateDtcTopologyRuleResponseAsObject
      type: object
    ListDtcTopologyLabelResponseObject:
      description: The response format to retrieve __DtcTopologyLabel__ objects.
      properties:
        result:
          items:
            $ref: '#/components/schemas/DtcTopologyLabel'
          type: array
      title: ListDtcTopologyLabelResponseObject
      type: object
    GetDtcTopologyLabelResponseObjectAsResult:
      additionalProperties: false
      description: The response format to retrieve __DtcTopologyLabel__ objects.
      properties:
        result:
          $ref: '#/components/schemas/DtcTopologyLabel'
      title: GetDtcTopologyLabelResponseObjectAsResult
      type: object
    UpdateDtcTopologyLabelResponseAsObject:
      description: The response format to update __DtcTopologyLabel__ in object format.
      properties:
        result:
          $ref: '#/components/schemas/DtcTopologyLabel'
      title: UpdateDtcTopologyLabelResponseAsObject
      type: object
  securitySchemes:
    basicAuth:
      scheme: basic
      type: http
